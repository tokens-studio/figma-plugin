{"version":3,"file":"transform_nest_2.js","mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,sDAAU;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;;;;;;;;;;;ACXa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,+HAA+B;AAC/D,aAAa,mBAAO,CAAC,oGAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D;AACA,qBAAqB;AACrB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB;AACtB;AACA;AACA,wCAAwC,UAAU,SAAS,UAAU,SAAS,cAAc;AAC5F;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;;;;;;;;;;;;ACtIa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,mBAAO,CAAC,oFAAU;AACjC,cAAc;AACd,kBAAkB,mBAAO,CAAC,0FAAa;AACvC,iBAAiB;AACjB,oBAAoB,mBAAO,CAAC,8FAAe;AAC3C,mBAAmB;AACnB,sBAAsB,mBAAO,CAAC,kGAAiB;AAC/C,uBAAuB;AACvB,gBAAgB,mBAAO,CAAC,sFAAW;AACnC,wBAAwB;AACxB,gBAAgB,mBAAO,CAAC,sFAAW;AACnC,yBAAyB;;;;;;;;;;;;ACbZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,mBAAO,CAAC,wFAAc;AAClC,aAAa,mBAAO,CAAC,oGAAkB;AACvC,kBAAkB,mBAAO,CAAC,sFAAW;AACrC,wBAAwB,mBAAO,CAAC,4GAAsB;AACtD,gBAAgB,mBAAO,CAAC,4FAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,UAAU,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,aAAa,OAAO,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;;AChQD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,4GAAsB;AACtD,gBAAgB,mBAAO,CAAC,4FAAc;AACtC;AACA;AACA;AACA,cAAc;AACda;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,4GAAsB;AACtD,gBAAgB,mBAAO,CAAC,4FAAc;AACtC;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3Ha;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oBAAoB,EAAE,MAAM;AAC1C;AACA;AACA,6BAA6B,sBAAsB,EAAE,qBAAqB;AAC1E;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA,iCAAiC,WAAW,EAAE,0BAA0B,EAAE,QAAQ,EAAE,cAAc,EAAE,YAAY,EAAE,2BAA2B,EAAE,WAAW;AAC1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;;AClJN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,mBAAO,CAAC,wFAAc;AAClC,kBAAkB,mBAAO,CAAC,gGAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACbiBAAiB;;;;;;;;;;;;ACnRJ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,sBAAsB;;;;;;;;;;;;ACzBT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB,mBAAO,CAAC,+FAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,gCAAgC,KAAK;AACrC;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;;AC9TH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,WAAW;AACX,YAAY;AACZ,WAAW;AACX,UAAU;AACV,UAAU;AACV,UAAU;AACV,aAAa;AACb,cAAc;AACd,cAAc;AACd,cAAc;AACd,cAAc;AACd,YAAY;AACZ,YAAY;AACZ,aAAa;AACb,aAAa;AACb,WAAW;AACX,aAAa;AACb,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,cAAc;AACd,cAAc;AACd;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,gBAAgB;;;;;;;;;;;;ACpCH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA,eAAe;AACf;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;;;;;;;;;;;AC3Bf;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,mBAAO,CAAC,uFAAa;AACjC,WAAW;AACX,mBAAmB,mBAAO,CAAC,qFAAY;AACvC,cAAc;AACd,iBAAiB;AACjB,mBAAmB;AACnB,uBAAuB;AACvB,wBAAwB;AACxB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,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A;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,MAAM;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,gBAAgB,OAAO,EAAE,IAAI;AAC7B;AACA,CAAC,IAAI;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,wCAAwC,mBAAmB;AAC3D,iCAAiC,aAAa,EAAE,OAAO,UAAU,EAAE;AACnE,uDAAuD,wBAAwB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB,IAAI,0CAA0C,KAAK,yCAAyC,KAAK,0CAA0C;AAClL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6BAA6B,IAAI,+BAA+B,IAAI,8BAA8B,IAAI,0CAA0C;AACjK;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,4BAA4B;AAC5B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,2BAA2B;AAC3B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE;AAClC;AACA,aAAa,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,sCAAsC;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEoR;AACpR;;;;;;;;;;;;;;;;;;AC5ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV,uCAAuC,oFAAoF;AAC3H,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,mBAAmB;AAC1F,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM,mCAAmC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,wHAAwH,2EAA2E,IAAI;AACvM;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,4BAA4B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,4BAA4B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,4BAA4B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB,UAAU,SAAS;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAC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AACbre,MAAM/N,MAAM,CAACs2B;AACbvoB,MAAM/N,MAAM,CAACgvB;AAEe,CAC5B,iCAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACntIjC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA,kBAAkB,eAAe;AACjC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,gCAAgC;AAChC;AACA;AACA,iEAAiE;AACjE,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;AAMA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;;AAEA,IAAI;AACJ,uBAAuB,kEAAkE;AACzF;AACA;;AAEA,IAAI;AACJ;AACA,iCAAiC,kCAAkC;AACnE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA,+BAA+B;AAC/B,CAAC;;AAED;AACA;AACA,+BAA+B;AAC/B,CAAC;;AAED;AACA;AACA,+BAA+B;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,6BAA6B,gBAAgB;AAC7C,6BAA6B,gBAAgB;AAC7C,6BAA6B,gBAAgB;AAC7C,6BAA6B;AAC7B,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mCAAmC;AACtE,mCAAmC,mCAAmC;AACtE,mCAAmC;AACnC,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8EAA8E;AAChH,kCAAkC,gFAAgF;AAClH,kCAAkC,0BAA0B;AAC5D;AACA,kCAAkC;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA,mBAAmB;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;AAMA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA,gBAAgB,WAAW;AAC3B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0CAA0C,gBAAgB;AAC1D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,0CAA0C,gBAAgB;AAC1D;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,0CAA0C,gBAAgB;AAC1D;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AAQA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,6CAA6C,EAAE;AAC/C;AACA,oDAAoD,EAAE,eAAe,EAAE,YAAY;;;AAGnF,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,oDAAoD,qBAAqB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;;AAEA,gDAAgD,kBAAkB;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,kBAAkB;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kBAAkB;AACrE;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA,MAAM;AACN;AACA;;AAEA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA,MAAM;AACN;;AAEA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA,QAAQ;AACR;AACA;;AAEA,eAAe,eAAe;AAC9B;;AAEA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA;;AAEA;;AAEA,QAAQ;AACR;AACA;;AAEA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA,MAAM;AACN;;AAEA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA,IAAI,yBAAyB;AAC7B,sBAAsB,KAAK;AAC3B;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA,MAAM;AACN;AACA,6EAA6E;AAC7E,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,QAAQ;AACR,8BAA8B;AAC9B;AACA;;AAEA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ;AACR;AACA;AACA;;AAEA,QAAQ;AACR,6DAA6D,sBAAsB;AACnF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV,oEAAoE;;AAEpE,UAAU;AACV;AACA;AACA,uBAAuB;AACvB;;AAEA,QAAQ;AACR,+DAA+D;;AAE/D,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;;AAEA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA,IAAI;AACJ;;AAEA,IAAI;AACJ;;AAEA,IAAI;AACJ;;AAEA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;;AAEA,mEAAmE,0BAA0B;AAC7F;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA,0DAA0D,0BAA0B;AACpF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8EAA8E;AAC9E;;AAEA,kDAAkD;AAClD;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,iDAAiD,gBAAgB;AACjE;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;;AAEA;AACA,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC,KAAK;AAC3C,sCAAsC;AACtC,sCAAsC,KAAK;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,gBAAgB;AACxD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uDAAuD,gBAAgB;AACvE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,gBAAgB;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,gBAAgB;AAC1D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,gBAAgB;;AAEjE;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,iDAAiD,gBAAgB;AACjE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,GAAG;AAChC;;AAEA;AACA;;AAEA;;AAEA,4CAA4C,gBAAgB;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA,QAAQ;AACR;;AAEA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,kCAAkC,WAAW;AAC7C;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,MAAM,EAAC;AACyI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC1wH/J;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNkD;AACR;AAE1C,aAAa;AACbzT,gEAASA,CAAC;IAAEigB,MAAMz5B,+CAAMA;AAAC,GAAG;IAAC;CAAO,EAAE,EAAE,EAAE;IACxCiP,kBAAkB;IAClBC,cAAc;IACdC,mBAAmB;IACnByB,kBAAkB;IAClBU,2BAA2B;IAC3BtN,mBAAmB;IACnBoL,cAAc;AAChB","sources":["webpack://@tokens-studio/figma-plugin/../../node_modules/is-plain-object/index.js","webpack://@tokens-studio/figma-plugin/../../node_modules/isobject/index.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/factory.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/index.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/parser.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/reducer.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/resolved-type.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/stringifier.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/tokenizer.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/util/calc-notation.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/util/node-impl.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/util/unicode.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/css-calc/util/utils.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/index.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/types/ast/errors.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/dist/types/ast/index.js","webpack://@tokens-studio/figma-plugin/../../node_modules/postcss-calc-ast-parser/node_modules/postcss-value-parser/lib/unit.js","webpack://@tokens-studio/figma-plugin/./src/app/components/createTokenObj.tsx","webpack://@tokens-studio/figma-plugin/./src/constants/AliasRegex.ts","webpack://@tokens-studio/figma-plugin/./src/constants/BoxShadowTypes.ts","webpack://@tokens-studio/figma-plugin/./src/constants/ColorModifierTypes.ts","webpack://@tokens-studio/figma-plugin/./src/constants/ColorSpaceTypes.ts","webpack://@tokens-studio/figma-plugin/./src/constants/Properties.ts","webpack://@tokens-studio/figma-plugin/./src/constants/StorageProviderType.ts","webpack://@tokens-studio/figma-plugin/./src/constants/TokenSetStatus.ts","webpack://@tokens-studio/figma-plugin/./src/constants/TokenTypes.ts","webpack://@tokens-studio/figma-plugin/./src/plugin/TokenFormatStoreClass.ts","webpack://@tokens-studio/figma-plugin/./src/plugin/figmaTransforms/opacity.ts","webpack://@tokens-studio/figma-plugin/./src/utils/TokenResolver.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/convertToRgb.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/darken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/getColorSwatchStyle.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/getReferenceTokensFromGradient.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/index.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/isLightOrDark.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/lighten.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/mix.ts","webpack://@tokens-studio/figma-plugin/./src/utils/color/transparentize.ts","webpack://@tokens-studio/figma-plugin/./src/utils/convertModifiedColorToHex.ts","webpack://@tokens-studio/figma-plugin/./src/utils/convertToDefaultProperty.ts","webpack://@tokens-studio/figma-plugin/./src/utils/convertTokens.tsx","webpack://@tokens-studio/figma-plugin/./src/utils/convertTokensObjectToResolved.ts","webpack://@tokens-studio/figma-plugin/./src/utils/convertTokensToGroupedObject.ts","webpack://@tokens-studio/figma-plugin/./src/utils/detectFormat.tsx","webpack://@tokens-studio/figma-plugin/./src/utils/expand.ts","webpack://@tokens-studio/figma-plugin/./src/utils/getPathName.ts","webpack://@tokens-studio/figma-plugin/./src/utils/getTokenSetsOrder.ts","webpack://@tokens-studio/figma-plugin/./src/utils/getTokenTypeKey.ts","webpack://@tokens-studio/figma-plugin/./src/utils/getTokenValueKey.ts","webpack://@tokens-studio/figma-plugin/./src/utils/getValueWithReferences.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/index.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isGitProvider.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isMatchingStyle.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isPrimitiveValue.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isPropertyType.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleBorderToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleBoxShadowToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleBoxShadowValue.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleCompositionToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleTokenInJson.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleTokenValueObject.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleTypographyToken.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isSingleTypographyValue.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isTokenGroupWithType.ts","webpack://@tokens-studio/figma-plugin/./src/utils/is/isTokenType.ts","webpack://@tokens-studio/figma-plugin/./src/utils/math/checkAndEvaluateMath.ts","webpack://@tokens-studio/figma-plugin/./src/utils/math/index.ts","webpack://@tokens-studio/figma-plugin/./src/utils/modifyColor.ts","webpack://@tokens-studio/figma-plugin/./src/utils/parseTokenValues.ts","webpack://@tokens-studio/figma-plugin/./src/utils/sortSets.ts","webpack://@tokens-studio/figma-plugin/./src/utils/tokenHelpers.ts","webpack://@tokens-studio/figma-plugin/./src/utils/transform.ts","webpack://@tokens-studio/figma-plugin/./node_modules/set-value/index.js","webpack://@tokens-studio/figma-plugin/../../node_modules/color2k/dist/index.exports.import.es.mjs","webpack://@tokens-studio/figma-plugin/../../node_modules/expr-eval/dist/index.mjs","webpack://@tokens-studio/figma-plugin/../../node_modules/just-extend/index.mjs","webpack://@tokens-studio/figma-plugin/../../node_modules/colorjs.io/dist/color.js","webpack://@tokens-studio/figma-plugin/./node_modules/js-yaml/dist/js-yaml.mjs","webpack://@tokens-studio/figma-plugin/webpack/bootstrap","webpack://@tokens-studio/figma-plugin/webpack/runtime/compat get default export","webpack://@tokens-studio/figma-plugin/webpack/runtime/define property getters","webpack://@tokens-studio/figma-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://@tokens-studio/figma-plugin/webpack/runtime/make namespace object","webpack://@tokens-studio/figma-plugin/./benchmark/tests/transform_nest_2.ts"],"sourcesContent":["/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst valueParserUnit = require(\"postcss-value-parser/lib/unit\");\nconst Impl = require(\"./util/node-impl\");\nconst LENGTH_UNITS = [\n    \"em\",\n    \"ex\",\n    \"ch\",\n    \"rem\",\n    \"vw\",\n    \"vh\",\n    \"vmin\",\n    \"vmax\",\n    \"px\",\n    \"mm\",\n    \"cm\",\n    \"in\",\n    \"pt\",\n    \"pc\",\n    \"Q\",\n    \"vm\",\n];\nconst ANGLE_UNITS = [\"deg\", \"grad\", \"turn\", \"rad\"];\nconst TIME_UNITS = [\"s\", \"ms\"];\nconst FREQUENCY_UNITS = [\"Hz\", \"kHz\"];\nconst RESOLUTION_UNITS = [\"dpi\", \"dpcm\", \"dppm\"];\nconst FLEX_UNITS = [\"fr\"];\nconst L_LENGTH_UNITS = LENGTH_UNITS.map(u => u.toLowerCase());\nconst L_ANGLE_UNITS = ANGLE_UNITS.map(u => u.toLowerCase());\nconst L_TIME_UNITS = TIME_UNITS.map(u => u.toLowerCase());\nconst L_FREQUENCY_UNITS = FREQUENCY_UNITS.map(u => u.toLowerCase());\nconst L_RESOLUTION_UNITS = RESOLUTION_UNITS.map(u => u.toLowerCase());\nconst L_FLEX_UNITS = FLEX_UNITS.map(u => u.toLowerCase());\nfunction newPunctuator(token, before) {\n    if (token.value === \",\" || token.value === \")\") {\n        return newTokenNode(Impl.Punctuator, token, token.value, before);\n    }\n    throw new Error(`illegal argument error \"${token.value}\"`);\n}\nexports.newPunctuator = newPunctuator;\nfunction newOperator(token, before) {\n    return newTokenNode(Impl.Operator, token, token.value, before);\n}\nexports.newOperator = newOperator;\nfunction newString(token, before) {\n    return newTokenNode(Impl.StringNode, token, token.value, before);\n}\nexports.newString = newString;\nfunction newWordNode(token, before) {\n    return newValueNode(token, before);\n}\nexports.newWordNode = newWordNode;\nfunction newFunction(token, before, open) {\n    return new Impl.FunctionNode(token.value, before, {\n        start: token.source.start,\n        end: open.source.end,\n    });\n}\nexports.newFunction = newFunction;\nfunction newParentheses(token, before) {\n    return new Impl.Parentheses(before, {\n        start: token.source.start,\n        end: token.source.end,\n    });\n}\nexports.newParentheses = newParentheses;\nfunction newMathExpression(left, op, right) {\n    const opNode = typeof op === \"string\"\n        ? newTokenNode(Impl.Operator, { source: { start: { index: 0 }, end: { index: 0 } } }, op, \" \")\n        : op;\n    const { before } = left.raws;\n    left.raws.before = \"\";\n    return new Impl.MathExpression(left, opNode, right, before, {\n        start: left.source.start,\n        operator: opNode.source,\n        end: right.source.end,\n    });\n}\nexports.newMathExpression = newMathExpression;\nfunction newValueNode(token, before) {\n    if (token.type === \"word\") {\n        const parsedUnit = valueParserUnit(token.value);\n        if (parsedUnit) {\n            const n = newNumNode(parsedUnit, token, before);\n            if (n) {\n                return n;\n            }\n        }\n    }\n    return newTokenNode(Impl.Word, token, token.value, before);\n}\nfunction newNumNode(parsedUnit, token, before) {\n    const { source } = token;\n    if (!parsedUnit.unit) {\n        return new Impl.NumberValue(parsedUnit.number, before, source);\n    }\n    const lunit = parsedUnit.unit.toLowerCase();\n    function unitNode(WithUnitValue, unit) {\n        const n = new WithUnitValue(parsedUnit.number, unit, before, source);\n        if (unit !== parsedUnit.unit) {\n            n.raws.unit = {\n                raw: parsedUnit.unit,\n                value: unit,\n            };\n        }\n        return n;\n    }\n    let unitIndex;\n    if ((unitIndex = L_LENGTH_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.LengthValue, LENGTH_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_ANGLE_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.AngleValue, ANGLE_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_TIME_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.TimeValue, TIME_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_FREQUENCY_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.FrequencyValue, FREQUENCY_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_RESOLUTION_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.ResolutionValue, RESOLUTION_UNITS[unitIndex]);\n    }\n    if ((unitIndex = L_FLEX_UNITS.indexOf(lunit)) >= 0) {\n        return unitNode(Impl.FlexValue, FLEX_UNITS[unitIndex]);\n    }\n    if (lunit === \"%\") {\n        return unitNode(Impl.PercentageValue, \"%\");\n    }\n    return null;\n}\nfunction newTokenNode(TokenValue, token, value, before) {\n    const { source } = token;\n    return new TokenValue(value, before, source);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_1 = require(\"./parser\");\nexports.Parser = parser_1.Parser;\nvar tokenizer_1 = require(\"./tokenizer\");\nexports.Tokenizer = tokenizer_1.Tokenizer;\nvar stringifier_1 = require(\"./stringifier\");\nexports.Stringifier = stringifier_1.Stringifier;\nvar resolved_type_1 = require(\"./resolved-type\");\nexports.getResolvedType = resolved_type_1.getResolvedType;\nvar reducer_1 = require(\"./reducer\");\nexports.reduceExpression = reducer_1.reduce;\nvar factory_1 = require(\"./factory\");\nexports.newMathExpression = factory_1.newMathExpression;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AST = require(\"../types/ast\");\nconst Impl = require(\"./util/node-impl\");\nconst factory_1 = require(\"./factory\");\nconst calc_notation_1 = require(\"./util/calc-notation\");\nconst utils_1 = require(\"./util/utils\");\nconst MAYBE_FUNCTION = /^([^-+0-9.]|-[^+0-9.])/u;\nconst PRECEDENCE = {\n    \"*\": 3,\n    \"/\": 3,\n    \"+\": 2,\n    \"-\": 2,\n};\nfunction srcLoc(node) {\n    return node.source || { start: { index: 0 }, end: { index: 0 } };\n}\nfunction isExpression(node) {\n    if (node && node.type !== \"Punctuator\" && node.type !== \"Operator\") {\n        return node;\n    }\n    return null;\n}\nclass Parser {\n    constructor(tokenizer, _options) {\n        this.tokenizer = tokenizer;\n        this.root = new Impl.Root({\n            start: {\n                index: 0,\n            },\n            end: {\n                index: 0,\n            },\n        });\n        this.rescans = [];\n        this.tokens = this.root.tokens;\n        this.errors = this.root.errors;\n    }\n    parse() {\n        let state = {\n            container: this.root,\n            fnName: \"\",\n            post() {\n            },\n            eof() {\n            },\n        };\n        while (state) {\n            state = this.processExpressions(state);\n        }\n        const { tokens } = this;\n        if (tokens.length > 0) {\n            srcLoc(this.root).end.index =\n                tokens[tokens.length - 1].source.end.index;\n        }\n        this.errors.unshift(...this.tokenizer.errors);\n        this.errors.sort((e1, e2) => e1.index - e2.index);\n        return this.root;\n    }\n    reportParseError(code, index = 0) {\n        if (this.errors.find(e => e.code === code && e.index === index)) {\n            return;\n        }\n        const error = AST.ParseError.fromCode(code, index);\n        this.errors.push(error);\n    }\n    processExpressions(state) {\n        let tokenSet;\n        while ((tokenSet = this.scan())) {\n            const { token } = tokenSet;\n            switch (token.type) {\n                case \"word\":\n                    if (MAYBE_FUNCTION.test(token.value)) {\n                        const next = this.scan();\n                        if (next) {\n                            if (!next.raws &&\n                                next.token.type === \"punctuator\" &&\n                                next.token.value === \"(\") {\n                                return this.processFunction(token, tokenSet.raws, next.token, state);\n                            }\n                            this.back(next);\n                        }\n                    }\n                    state.container.push(factory_1.newWordNode(token, tokenSet.raws));\n                    break;\n                case \"string\":\n                    state.container.push(factory_1.newString(token, tokenSet.raws));\n                    break;\n                case \"operator\":\n                    this.checkAndMergeMathExpr(state, PRECEDENCE[token.value]);\n                    state.container.push(factory_1.newOperator(token, tokenSet.raws));\n                    break;\n                case \"punctuator\":\n                    this.checkAndMergeMathExpr(state);\n                    return this.processPunctuator(token, tokenSet.raws, state);\n                default:\n                    break;\n            }\n        }\n        this.postStack(state);\n        state.eof();\n        return null;\n    }\n    checkAndMergeMathExpr(state, currPrecedence) {\n        const { container } = state;\n        const { nodes } = container;\n        if (nodes.length >= 3) {\n            const bfOp = nodes[nodes.length - 2];\n            if (bfOp.type === \"Operator\" && PRECEDENCE[bfOp.value]) {\n                if (currPrecedence == null ||\n                    currPrecedence <= PRECEDENCE[bfOp.value]) {\n                    const math = this.mergeMathExpr(state);\n                    if (math) {\n                        container.push(math);\n                    }\n                }\n            }\n        }\n    }\n    processPunctuator(token, before, state) {\n        const { container, parent } = state;\n        if (token.value === \"(\") {\n            const node = factory_1.newParentheses(token, before);\n            container.push(node);\n            return this.createNestedStateContainer(node, state.fnName, state);\n        }\n        this.postStack(state);\n        if (token.value === \")\") {\n            if (parent) {\n                state.post(token, before);\n                return parent;\n            }\n            this.reportParseError(\"unexpected-parenthesis\", token.source.start.index);\n        }\n        container.push(factory_1.newPunctuator(token, before));\n        return state;\n    }\n    processFunction(token, before, open, state) {\n        const node = factory_1.newFunction(token, before, open);\n        state.container.push(node);\n        return this.createNestedStateContainer(node, node.name, state);\n    }\n    createNestedStateContainer(node, fnName, state) {\n        return {\n            container: node,\n            parent: state,\n            fnName,\n            post(close, beforeClose) {\n                if (beforeClose) {\n                    node.raws.beforeClose = beforeClose;\n                }\n                srcLoc(node).end = close.source.end;\n            },\n            eof: () => {\n                node.unclosed = true;\n                const last = this.tokens[this.tokens.length - 1];\n                const lastChild = node.last;\n                if (lastChild) {\n                    srcLoc(node).end = srcLoc(lastChild).end;\n                }\n                this.reportParseError(\"eof-in-bracket\", last.source.end.index);\n                state.eof();\n            },\n        };\n    }\n    mergeMathExpr(state) {\n        const { container: { nodes }, } = state;\n        const right = nodes.pop();\n        const op = nodes.pop();\n        const left = nodes.pop() || null;\n        const restore = () => {\n            if (left) {\n                nodes.push(left);\n            }\n            nodes.push(op, right);\n        };\n        const reportError = (node) => {\n            if (calc_notation_1.isMathFunction(state.fnName)) {\n                this.reportParseError(\"unexpected-calc-token\", srcLoc(node).start.index);\n            }\n        };\n        const rightExpr = isExpression(right);\n        if (utils_1.isComma(op)) {\n            if (!rightExpr) {\n                reportError(right);\n            }\n            restore();\n            return null;\n        }\n        if (!left) {\n            reportError(isExpression(op) ? right : op);\n            restore();\n            return null;\n        }\n        const leftExpr = isExpression(left);\n        if (!leftExpr) {\n            reportError(isExpression(nodes[nodes.length - 1]) ? op : left);\n            restore();\n            return null;\n        }\n        if (op.type !== \"Operator\") {\n            reportError(op);\n            restore();\n            return null;\n        }\n        if (!rightExpr) {\n            reportError(right);\n            restore();\n            return null;\n        }\n        return factory_1.newMathExpression(leftExpr, op, rightExpr);\n    }\n    postStack(state) {\n        const { container } = state;\n        const { nodes } = container;\n        while (nodes.length > 1) {\n            const math = this.mergeMathExpr(state);\n            if (math) {\n                container.push(math);\n            }\n            else {\n                return;\n            }\n        }\n    }\n    scan() {\n        const re = this.rescans.shift();\n        if (re) {\n            return re;\n        }\n        let raws = \"\";\n        let token = this.tokenizer.nextToken();\n        while (token) {\n            this.tokens.push(token);\n            if (token.type === \"whitespace\" ||\n                token.type === \"comment\" ||\n                token.type === \"inline-comment\") {\n                raws += token.value;\n            }\n            else {\n                return {\n                    token,\n                    raws,\n                };\n            }\n            token = this.tokenizer.nextToken();\n        }\n        if (raws) {\n            this.root.raws.after = raws;\n        }\n        return null;\n    }\n    back(tokenset) {\n        this.rescans.unshift(tokenset);\n    }\n}\nexports.Parser = Parser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst calc_notation_1 = require(\"./util/calc-notation\");\nconst utils_1 = require(\"./util/utils\");\nfunction reduce(expr) {\n    return reduceExpression(expr);\n}\nexports.reduce = reduce;\nfunction reduceMathExpression(expr) {\n    const left = reduceExpression(expr.left);\n    const right = reduceExpression(expr.right);\n    if (!left || !right) {\n        return null;\n    }\n    switch (expr.operator) {\n        case \"+\":\n        case \"-\":\n            return reduceAddSub(left, expr.operator, right);\n        case \"/\":\n            return reduceDivision(left, right);\n        case \"*\":\n            return reduceMultiple(left, right);\n        default:\n    }\n    return null;\n}\nfunction reduceAddSub(left, operator, right) {\n    if (left.type !== right.type) {\n        return null;\n    }\n    const ope = operator === \"-\"\n        ? (ln, rn) => ln - rn\n        : (ln, rn) => ln + rn;\n    if (left.type === \"Number\") {\n        return {\n            type: \"Number\",\n            value: ope(left.value, right.value),\n        };\n    }\n    const lunit = left.unit;\n    const runit = right.unit;\n    if (lunit === runit) {\n        return {\n            type: left.type,\n            value: ope(left.value, right.value),\n            unit: left.unit,\n        };\n    }\n    return null;\n}\nfunction reduceDivision(left, right) {\n    if (right.type !== \"Number\") {\n        return null;\n    }\n    if (left.type === \"Number\") {\n        return {\n            type: \"Number\",\n            value: left.value / right.value,\n        };\n    }\n    return {\n        type: left.type,\n        value: left.value / right.value,\n        unit: left.unit,\n    };\n}\nfunction reduceMultiple(left, right) {\n    if (left.type === \"Number\") {\n        if (right.type === \"Number\") {\n            return {\n                type: \"Number\",\n                value: left.value * right.value,\n            };\n        }\n        return {\n            type: right.type,\n            value: left.value * right.value,\n            unit: right.unit,\n        };\n    }\n    else if (right.type === \"Number\") {\n        return {\n            type: left.type,\n            value: left.value * right.value,\n            unit: left.unit,\n        };\n    }\n    return null;\n}\nfunction reduceExpression(expr) {\n    if (expr.type === \"Number\" ||\n        expr.type === \"Length\" ||\n        expr.type === \"Angle\" ||\n        expr.type === \"Time\" ||\n        expr.type === \"Frequency\" ||\n        expr.type === \"Resolution\" ||\n        expr.type === \"Percentage\" ||\n        expr.type === \"Flex\") {\n        return expr;\n    }\n    if (expr.type === \"MathExpression\") {\n        return reduceMathExpression(expr);\n    }\n    if (expr.type === \"Parentheses\" || expr.type === \"Root\") {\n        if (expr.nodes.length === 1) {\n            return reduceExpression(expr.nodes[0]);\n        }\n    }\n    else if (expr.type === \"Function\") {\n        if (expr.type === \"Function\") {\n            if (calc_notation_1.isCalc(expr.name)) {\n                return getCalcNumber(expr);\n            }\n        }\n    }\n    return null;\n}\nfunction getCalcNumber(fn) {\n    const args = utils_1.getFunctionArguments(fn);\n    if (args && args.length === 1) {\n        return reduceExpression(args[0]);\n    }\n    return null;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst calc_notation_1 = require(\"./util/calc-notation\");\nconst utils_1 = require(\"./util/utils\");\nfunction getResolvedType(expr) {\n    const left = getType(expr.left);\n    const right = getType(expr.right);\n    const { operator } = expr;\n    switch (operator) {\n        case \"+\":\n        case \"-\":\n            if (left === \"Unknown\" || right === \"Unknown\") {\n                return \"Unknown\";\n            }\n            if (left === right) {\n                return left;\n            }\n            if (left === \"Number\" || right === \"Number\") {\n                return \"invalid\";\n            }\n            if (left === \"Percentage\") {\n                return right;\n            }\n            if (right === \"Percentage\") {\n                return left;\n            }\n            return \"invalid\";\n        case \"*\":\n            if (left === \"Unknown\" || right === \"Unknown\") {\n                return \"Unknown\";\n            }\n            if (left === \"Number\") {\n                return right;\n            }\n            if (right === \"Number\") {\n                return left;\n            }\n            return \"invalid\";\n        case \"/\":\n            if (right === \"Unknown\") {\n                return \"Unknown\";\n            }\n            if (right === \"Number\") {\n                return left;\n            }\n            return \"invalid\";\n        default:\n    }\n    return \"Unknown\";\n}\nexports.getResolvedType = getResolvedType;\nfunction getExpressionType(expr) {\n    const { type } = expr;\n    if (type === \"Number\" ||\n        type === \"Length\" ||\n        type === \"Angle\" ||\n        type === \"Time\" ||\n        type === \"Frequency\" ||\n        type === \"Resolution\" ||\n        type === \"Percentage\" ||\n        type === \"Flex\") {\n        return type;\n    }\n    return \"Unknown\";\n}\nfunction getType(expr) {\n    if (expr.type === \"MathExpression\") {\n        const rtype = getResolvedType(expr);\n        return rtype === \"invalid\" ? \"Unknown\" : rtype;\n    }\n    if (expr.type === \"Parentheses\") {\n        if (expr.nodes.length === 1) {\n            return getType(expr.nodes[0]);\n        }\n        return \"Unknown\";\n    }\n    if (expr.type === \"Function\") {\n        if (calc_notation_1.isCalc(expr.name)) {\n            return getCalcFunctionType(expr);\n        }\n        if (calc_notation_1.isMin(expr.name) || calc_notation_1.isMax(expr.name)) {\n            return getMinMaxFunctionType(expr);\n        }\n        if (calc_notation_1.isClamp(expr.name)) {\n            return getClampFunctionType(expr);\n        }\n        return \"Unknown\";\n    }\n    return getExpressionType(expr);\n}\nfunction getCalcFunctionType(fn) {\n    if (fn.nodes.length === 1) {\n        return getFunctionArgumentsType(fn);\n    }\n    return \"Unknown\";\n}\nfunction getMinMaxFunctionType(fn) {\n    return getFunctionArgumentsType(fn);\n}\nfunction getClampFunctionType(fn) {\n    if (fn.nodes.length === 5) {\n        return getFunctionArgumentsType(fn);\n    }\n    return \"Unknown\";\n}\nfunction getFunctionArgumentsType(fn) {\n    const args = utils_1.getFunctionArguments(fn);\n    if (!args) {\n        return \"Unknown\";\n    }\n    const types = args.map(getType);\n    let result = null;\n    for (const type of types) {\n        if (!result || result === \"Percentage\") {\n            result = type;\n        }\n        else if (type === \"Percentage\") {\n        }\n        else if (result !== type) {\n            return \"Unknown\";\n        }\n    }\n    return result || \"Unknown\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction rawVal(node, name) {\n    const r = node.raws[name];\n    return r ? r.raw : `${node[name]}`;\n}\nfunction raw(node, name) {\n    const r = node.raws[name];\n    return r || \"\";\n}\nfunction wrapRaws(node, inner) {\n    return `${raw(node, \"before\")}${inner}`;\n}\nfunction numWithUnit(node) {\n    return wrapRaws(node, `${rawVal(node, \"value\")}${rawVal(node, \"unit\")}`);\n}\nclass Stringifier {\n    constructor(options) {\n        this.options = Object.assign({\n            autofix: false,\n        }, options || {});\n    }\n    stringify(node) {\n        return this[node.type](node);\n    }\n    Root(node) {\n        let s = \"\";\n        for (const c of node.nodes) {\n            s += this.stringify(c);\n        }\n        s += raw(node, \"after\");\n        return s;\n    }\n    Function(node) {\n        let s = `${node.name}(`;\n        for (const c of node.nodes) {\n            s += this.stringify(c);\n        }\n        s += raw(node, \"beforeClose\");\n        if (this.options.autofix || !node.unclosed) {\n            s += \")\";\n        }\n        return wrapRaws(node, s);\n    }\n    Parentheses(node) {\n        let s = \"(\";\n        for (const c of node.nodes) {\n            s += this.stringify(c);\n        }\n        s += raw(node, \"beforeClose\");\n        if (this.options.autofix || !node.unclosed) {\n            s += \")\";\n        }\n        return wrapRaws(node, s);\n    }\n    MathExpression(node) {\n        let beforeLeft = \"\";\n        let between = raw(node, \"between\");\n        let beforeRight = \"\";\n        let afterRight = \"\";\n        if (this.options.autofix) {\n            if (!between) {\n                between = \" \";\n            }\n            if (!node.right.raws.before) {\n                beforeRight = \" \";\n            }\n            if (node.left.type === \"MathExpression\") {\n                if ((node.left.operator === \"+\" ||\n                    node.left.operator === \"-\") &&\n                    (node.operator === \"*\" || node.operator === \"/\")) {\n                    beforeLeft += \"(\";\n                    between = `)${between}`;\n                }\n            }\n            if (node.right.type === \"MathExpression\") {\n                if ((node.operator === \"+\" && node.right.operator === \"-\") ||\n                    ((node.operator === \"-\" || node.operator === \"*\") &&\n                        (node.right.operator === \"+\" ||\n                            node.right.operator === \"-\")) ||\n                    node.operator === \"/\") {\n                    beforeRight += \"(\";\n                    afterRight = `)${afterRight}`;\n                }\n            }\n        }\n        return wrapRaws(node, `${beforeLeft}${this.stringify(node.left)}${between}${node.operator}${beforeRight}${this.stringify(node.right)}${afterRight}`);\n    }\n    Number(node) {\n        return wrapRaws(node, rawVal(node, \"value\"));\n    }\n    Punctuator(node) {\n        return wrapRaws(node, node.value);\n    }\n    Word(node) {\n        return wrapRaws(node, node.value);\n    }\n    String(node) {\n        return wrapRaws(node, node.value);\n    }\n    Operator(node) {\n        return wrapRaws(node, node.value);\n    }\n    Length(node) {\n        return numWithUnit(node);\n    }\n    Angle(node) {\n        return numWithUnit(node);\n    }\n    Time(node) {\n        return numWithUnit(node);\n    }\n    Frequency(node) {\n        return numWithUnit(node);\n    }\n    Resolution(node) {\n        return numWithUnit(node);\n    }\n    Percentage(node) {\n        return numWithUnit(node);\n    }\n    Flex(node) {\n        return numWithUnit(node);\n    }\n    word(node) {\n        return node.value;\n    }\n    punctuator(node) {\n        return node.value;\n    }\n    operator(node) {\n        return node.value;\n    }\n    whitespace(node) {\n        return node.value;\n    }\n    comment(node) {\n        return node.value;\n    }\n    string(node) {\n        return node.value;\n    }\n    \"inline-comment\"(node) {\n        return node.value;\n    }\n}\nexports.Stringifier = Stringifier;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AST = require(\"../types/ast\");\nconst unicode_1 = require(\"./util/unicode\");\nfunction isPunctuator(cc) {\n    return cc === unicode_1.LPAREN || cc === unicode_1.RPAREN || cc === unicode_1.COMMA;\n}\nfunction maybeNumber(cc) {\n    return unicode_1.isDigit(cc) || cc === unicode_1.DOT;\n}\nfunction isQuotes(cc) {\n    return cc === unicode_1.DQUOTE || cc === unicode_1.SQUOTE;\n}\nfunction getRightBracket(cc) {\n    if (cc === unicode_1.LPAREN) {\n        return unicode_1.RPAREN;\n    }\n    if (cc === unicode_1.LBRACE) {\n        return unicode_1.RBRACE;\n    }\n    return unicode_1.RBRACKET;\n}\nclass Tokenizer {\n    constructor(text, options) {\n        this.lastCode = unicode_1.NULL;\n        this.rescan = false;\n        this.token = null;\n        this.lastTokenType = null;\n        this.errors = [];\n        this.text = text;\n        this.offset = -1;\n        this.state = \"SCAN\";\n        this.nextTokenOffset = 0;\n        this.options = Object.assign({\n            allowInlineCommnets: true,\n        }, options || {});\n    }\n    nextToken() {\n        while (this.token == null) {\n            const cc = this.scan();\n            this.state = this[this.state](cc) || \"SCAN\";\n            if (cc === unicode_1.EOF && !this.rescan) {\n                break;\n            }\n        }\n        const { token } = this;\n        this.token = null;\n        return token;\n    }\n    scan() {\n        if (this.rescan) {\n            this.rescan = false;\n            return this.lastCode;\n        }\n        return this.next();\n    }\n    next() {\n        if (this.offset < this.text.length) {\n            this.offset++;\n        }\n        if (this.offset >= this.text.length) {\n            return (this.lastCode = unicode_1.EOF);\n        }\n        return (this.lastCode = this.text.charCodeAt(this.offset));\n    }\n    back() {\n        this.rescan = true;\n    }\n    reportParseError(code) {\n        const error = AST.ParseError.fromCode(code, this.offset);\n        this.errors.push(error);\n    }\n    getCode(indexOffset = 0) {\n        return this.text.charCodeAt(this.nextTokenOffset + indexOffset);\n    }\n    commitToken(type, indexOffset = 0) {\n        const start = this.nextTokenOffset;\n        const offset = this.offset + indexOffset + 1;\n        const value = this.text.slice(start, offset);\n        this.token = {\n            type,\n            value,\n            source: {\n                start: {\n                    index: start,\n                },\n                end: {\n                    index: offset,\n                },\n            },\n        };\n        this.nextTokenOffset = offset;\n        this.lastTokenType = type;\n    }\n    SCAN(cc) {\n        if (unicode_1.isWhitespace(cc)) {\n            return \"WHITESPACE\";\n        }\n        if (cc === unicode_1.DQUOTE) {\n            return \"DQUOTE\";\n        }\n        if (cc === unicode_1.SQUOTE) {\n            return \"SQUOTE\";\n        }\n        if (cc === unicode_1.SLASH) {\n            return \"SLASH\";\n        }\n        if (cc === unicode_1.MINUS) {\n            return \"MINUS\";\n        }\n        if (cc === unicode_1.PLUS) {\n            return \"PLUS\";\n        }\n        if (cc === unicode_1.STAR) {\n            this.commitToken(\"operator\");\n            return \"SCAN\";\n        }\n        if (isPunctuator(cc)) {\n            this.commitToken(\"punctuator\");\n            return \"SCAN\";\n        }\n        if (cc === unicode_1.LBRACKET) {\n            return \"LBRACKET\";\n        }\n        if (cc === unicode_1.LBRACE) {\n            return \"LBRACE\";\n        }\n        if (cc === unicode_1.EOF) {\n            return \"SCAN\";\n        }\n        return \"WORD\";\n    }\n    WORD(cc) {\n        while (!unicode_1.isWhitespace(cc) &&\n            !isPunctuator(cc) &&\n            cc !== unicode_1.PLUS &&\n            cc !== unicode_1.STAR &&\n            cc !== unicode_1.SLASH &&\n            !isQuotes(cc) &&\n            cc !== unicode_1.EOF) {\n            if (cc === unicode_1.MINUS) {\n                const st = this.getCode();\n                if (maybeNumber(st) ||\n                    ((st === unicode_1.MINUS || st === unicode_1.PLUS) &&\n                        maybeNumber(this.getCode(1)))) {\n                    this.commitToken(\"word\", -1);\n                    return \"MINUS\";\n                }\n            }\n            else if (cc === unicode_1.LBRACE || cc === unicode_1.LBRACKET || cc === unicode_1.LPAREN) {\n                this.skipBrakets(this.next(), getRightBracket(cc));\n            }\n            cc = this.next();\n        }\n        this.commitToken(\"word\", -1);\n        this.back();\n    }\n    LBRACKET(cc) {\n        this.skipBrakets(cc, unicode_1.RBRACKET);\n        return \"WORD\";\n    }\n    LBRACE(cc) {\n        this.skipBrakets(cc, unicode_1.RBRACE);\n        return \"WORD\";\n    }\n    WHITESPACE(cc) {\n        while (unicode_1.isWhitespace(cc)) {\n            cc = this.next();\n        }\n        this.commitToken(\"whitespace\", -1);\n        this.back();\n    }\n    SLASH(cc) {\n        if (cc === unicode_1.STAR) {\n            return \"COMMENT\";\n        }\n        if (cc === unicode_1.SLASH && this.options.allowInlineCommnets) {\n            return \"INLINE_COMMENT\";\n        }\n        this.commitToken(\"operator\", -1);\n        this.back();\n    }\n    COMMENT(cc) {\n        while (cc !== unicode_1.EOF) {\n            if (cc === unicode_1.STAR) {\n                cc = this.next();\n                if (cc === unicode_1.SLASH) {\n                    this.commitToken(\"comment\");\n                    return;\n                }\n            }\n            cc = this.next();\n        }\n        this.commitToken(\"comment\", -1);\n        this.reportParseError(\"eof-in-comment\");\n    }\n    INLINE_COMMENT(cc) {\n        while (cc !== unicode_1.EOF) {\n            if (cc === unicode_1.LF || cc === unicode_1.FF) {\n                this.commitToken(\"inline-comment\");\n                return;\n            }\n            if (cc === unicode_1.CR) {\n                cc = this.next();\n                if (cc === unicode_1.LF) {\n                    this.commitToken(\"inline-comment\");\n                    return;\n                }\n                this.commitToken(\"inline-comment\", -1);\n                return this.back();\n            }\n            cc = this.next();\n        }\n        this.commitToken(\"inline-comment\", -1);\n    }\n    MINUS(cc) {\n        if (this.lastTokenType === \"word\" ||\n            cc === unicode_1.EOF ||\n            (cc !== unicode_1.MINUS && !maybeNumber(cc) && !unicode_1.isLetter(cc))) {\n            this.commitToken(\"operator\", -1);\n            this.back();\n            return;\n        }\n        return \"WORD\";\n    }\n    PLUS(cc) {\n        if (this.lastTokenType !== \"word\") {\n            if (maybeNumber(cc)) {\n                return \"WORD\";\n            }\n        }\n        this.commitToken(\"operator\", -1);\n        this.back();\n    }\n    DQUOTE(cc) {\n        this.skipString(cc, unicode_1.DQUOTE);\n    }\n    SQUOTE(cc) {\n        this.skipString(cc, unicode_1.SQUOTE);\n    }\n    skipBrakets(cc, end) {\n        const closeStack = [];\n        while (cc !== unicode_1.EOF) {\n            if (end === cc) {\n                const nextTargetBracket = closeStack.pop() || null;\n                if (!nextTargetBracket) {\n                    return;\n                }\n                end = nextTargetBracket;\n            }\n            else if (cc === unicode_1.LBRACE || cc === unicode_1.LBRACKET || cc === unicode_1.LPAREN) {\n                if (end) {\n                    closeStack.push(end);\n                }\n                end = getRightBracket(cc);\n            }\n            cc = this.next();\n        }\n        this.reportParseError(\"eof-in-bracket\");\n    }\n    skipString(cc, end) {\n        while (cc !== unicode_1.EOF) {\n            if (cc === unicode_1.BACKSLASH) {\n                cc = this.next();\n            }\n            else if (cc === end) {\n                this.commitToken(\"string\");\n                return;\n            }\n            cc = this.next();\n        }\n        this.commitToken(\"string\", -1);\n        this.reportParseError(\"eof-in-string\");\n    }\n}\nexports.Tokenizer = Tokenizer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RE_CALC = /^(-(webkit|mox)-)?calc/iu;\nconst RE_MIN = /^(-(webkit|mox)-)?min/iu;\nconst RE_MAX = /^(-(webkit|mox)-)?max/iu;\nconst RE_CLAMP = /^(-(webkit|mox)-)?clamp/iu;\nfunction isCalc(name) {\n    return RE_CALC.test(name);\n}\nexports.isCalc = isCalc;\nfunction isMin(name) {\n    return RE_MIN.test(name);\n}\nexports.isMin = isMin;\nfunction isMax(name) {\n    return RE_MAX.test(name);\n}\nexports.isMax = isMax;\nfunction isClamp(name) {\n    return RE_CLAMP.test(name);\n}\nexports.isClamp = isClamp;\nfunction isMathFunction(name) {\n    return isCalc(name) || isClamp(name) || isMin(name) || isMax(name);\n}\nexports.isMathFunction = isMathFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stringifier_1 = require(\"../stringifier\");\nlet defaultStringifier = null;\nclass Node {\n    constructor() {\n        this.parent = null;\n    }\n    toString(stringifier) {\n        if (typeof stringifier === \"function\") {\n            return stringifier(this);\n        }\n        return (stringifier ||\n            defaultStringifier ||\n            (defaultStringifier = new stringifier_1.Stringifier())).stringify(this);\n    }\n    walk(type, callback) {\n        const node = this;\n        let result = undefined;\n        const nodes = [...(node.nodes || []), node.left, node.right].filter(n => Boolean(n));\n        const check = typeof type === \"string\"\n            ? (n) => n.type === type\n            : (n) => type.test(n.type);\n        for (const child of nodes) {\n            if (check(child)) {\n                result = callback(child);\n                if (result === false) {\n                    break;\n                }\n            }\n            if (child.walk) {\n                result = child.walk(type, callback);\n                if (result === false) {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n}\nclass Container extends Node {\n    push(...children) {\n        for (const child of children) {\n            if (child.type === \"Root\") {\n                this.push(...child.nodes);\n            }\n            else {\n                child.parent = this;\n                this.nodes.push(child);\n            }\n        }\n        return this;\n    }\n    unshift(...children) {\n        for (const child of children.reverse()) {\n            if (child.type === \"Root\") {\n                this.unshift(...child.nodes);\n            }\n            else {\n                child.parent = this;\n                this.nodes.unshift(child);\n            }\n        }\n        return this;\n    }\n    append(...children) {\n        return this.push(...children);\n    }\n    prepend(...children) {\n        return this.unshift(...children);\n    }\n    insertBefore(exist, add) {\n        if (add.type === \"Root\") {\n            const { nodes } = add;\n            if (nodes.length === 1) {\n                return this.insertBefore(exist, nodes[0]);\n            }\n            throw new Error(\"The given Root node is illegal.\");\n        }\n        const existIndex = this.nodes.indexOf(exist);\n        if (existIndex < 0) {\n            throw new Error(\"The given node could not be found.\");\n        }\n        add.parent = this;\n        this.nodes.splice(existIndex, 0, add);\n        return this;\n    }\n    insertAfter(exist, add) {\n        if (add.type === \"Root\") {\n            const { nodes } = add;\n            if (nodes.length === 1) {\n                return this.insertAfter(exist, nodes[0]);\n            }\n            throw new Error(\"The given Root node is illegal.\");\n        }\n        const existIndex = this.nodes.indexOf(exist);\n        if (existIndex < 0) {\n            throw new Error(\"The given node could not be found.\");\n        }\n        add.parent = this;\n        this.nodes.splice(existIndex + 1, 0, add);\n        return this;\n    }\n    removeAll() {\n        for (const node of this.nodes) {\n            node.parent = null;\n        }\n        this.nodes = [];\n        return this;\n    }\n    removeChild(child) {\n        const index = this.nodes.indexOf(child);\n        this.nodes[index].parent = null;\n        this.nodes.splice(index, 1);\n        return this;\n    }\n    get first() {\n        return this.nodes[0] || null;\n    }\n    get last() {\n        return this.nodes[this.nodes.length - 1] || null;\n    }\n}\nclass NumberValue extends Node {\n    constructor(value, before, source) {\n        super();\n        const num = parseFloat(value);\n        this.type = \"Number\";\n        this.value = num;\n        this.raws = {\n            before,\n            value: {\n                raw: value,\n                value: num,\n            },\n        };\n        this.source = source;\n    }\n}\nexports.NumberValue = NumberValue;\nclass NumWithUnitValue extends Node {\n    constructor(type, value, unit, before, source) {\n        super();\n        const num = parseFloat(value);\n        this.type = type;\n        this.value = num;\n        this.unit = unit;\n        this.raws = {\n            before,\n            value: {\n                raw: value,\n                value: num,\n            },\n        };\n        this.source = source;\n    }\n}\nclass LengthValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Length\", value, unit, before, source);\n    }\n}\nexports.LengthValue = LengthValue;\nclass AngleValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Angle\", value, unit, before, source);\n    }\n}\nexports.AngleValue = AngleValue;\nclass TimeValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Time\", value, unit, before, source);\n    }\n}\nexports.TimeValue = TimeValue;\nclass FrequencyValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Frequency\", value, unit, before, source);\n    }\n}\nexports.FrequencyValue = FrequencyValue;\nclass ResolutionValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Resolution\", value, unit, before, source);\n    }\n}\nexports.ResolutionValue = ResolutionValue;\nclass PercentageValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Percentage\", value, unit, before, source);\n    }\n}\nexports.PercentageValue = PercentageValue;\nclass FlexValue extends NumWithUnitValue {\n    constructor(value, unit, before, source) {\n        super(\"Flex\", value, unit, before, source);\n    }\n}\nexports.FlexValue = FlexValue;\nclass TokenValue extends Node {\n    constructor(type, value, before, source) {\n        super();\n        this.type = type;\n        this.value = value;\n        this.raws = {\n            before,\n        };\n        this.source = source;\n    }\n}\nclass Word extends TokenValue {\n    constructor(value, before, source) {\n        super(\"Word\", value, before, source);\n    }\n}\nexports.Word = Word;\nclass StringNode extends TokenValue {\n    constructor(value, before, source) {\n        super(\"String\", value, before, source);\n    }\n}\nexports.StringNode = StringNode;\nfunction defineAssessor(obj, name, setterProc) {\n    const localName = Symbol(`${name}`);\n    Object.defineProperties(obj, {\n        [localName]: { writable: true, enumerable: false },\n        [name]: {\n            get() {\n                return this[localName];\n            },\n            set(n) {\n                const o = this[localName];\n                this[localName] = setterProc(n, o);\n            },\n            enumerable: true,\n        },\n    });\n}\nclass MathExpression extends Node {\n    constructor(left, operator, right, before, source) {\n        super();\n        const ope = operator.value;\n        const between = operator.raws.before;\n        this.type = \"MathExpression\";\n        const setterProc = (n, o) => {\n            let e;\n            if (n.type === \"Root\") {\n                const { nodes } = n;\n                if (nodes.length === 1) {\n                    e = nodes[0];\n                }\n                else {\n                    throw new Error(\"The given Root node is illegal.\");\n                }\n            }\n            else {\n                e = n;\n            }\n            e.parent = this;\n            if (o) {\n                o.parent = null;\n            }\n            return e;\n        };\n        defineAssessor(this, \"left\", setterProc);\n        this.left = left;\n        this.operator = ope;\n        defineAssessor(this, \"right\", setterProc);\n        this.right = right;\n        this.raws = { before, between };\n        this.source = source;\n    }\n}\nexports.MathExpression = MathExpression;\nclass FunctionNode extends Container {\n    constructor(name, before, source) {\n        super();\n        this.type = \"Function\";\n        this.name = name;\n        this.nodes = [];\n        this.raws = { before };\n        this.source = source;\n    }\n}\nexports.FunctionNode = FunctionNode;\nclass Parentheses extends Container {\n    constructor(before, source) {\n        super();\n        this.type = \"Parentheses\";\n        this.nodes = [];\n        this.raws = { before };\n        this.source = source;\n    }\n}\nexports.Parentheses = Parentheses;\nclass Punctuator extends TokenValue {\n    constructor(value, before, source) {\n        super(\"Punctuator\", value, before, source);\n    }\n}\nexports.Punctuator = Punctuator;\nclass Root extends Container {\n    constructor(source) {\n        super();\n        this.type = \"Root\";\n        this.nodes = [];\n        this.tokens = [];\n        this.errors = [];\n        this.raws = { after: \"\" };\n        this.source = source;\n    }\n}\nexports.Root = Root;\nclass Operator extends TokenValue {\n    constructor(value, before, source) {\n        super(\"Operator\", value, before, source);\n    }\n}\nexports.Operator = Operator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EOF = -1;\nexports.NULL = 0x00;\nexports.TAB = 0x09;\nexports.CR = 0x0d;\nexports.LF = 0x0a;\nexports.FF = 0x0c;\nexports.SPACE = 0x20;\nexports.DQUOTE = 0x22;\nexports.SQUOTE = 0x27;\nexports.LPAREN = 0x28;\nexports.RPAREN = 0x29;\nexports.STAR = 0x2a;\nexports.PLUS = 0x2b;\nexports.COMMA = 0x2c;\nexports.MINUS = 0x2d;\nexports.DOT = 0x2e;\nexports.SLASH = 0x2f;\nexports.LBRACKET = 0x5b;\nexports.BACKSLASH = 0x5c;\nexports.RBRACKET = 0x5d;\nexports.LBRACE = 0x7b;\nexports.RBRACE = 0x7d;\nfunction isWhitespace(cc) {\n    return cc === exports.TAB || cc === exports.LF || cc === exports.FF || cc === exports.CR || cc === exports.SPACE;\n}\nexports.isWhitespace = isWhitespace;\nfunction isDigit(cc) {\n    return cc >= 0x30 && cc <= 0x39;\n}\nexports.isDigit = isDigit;\nfunction isLetter(cc) {\n    return ((cc >= 0x61 && cc <= 0x7a) ||\n        (cc >= 0x41 && cc <= 0x5a));\n}\nexports.isLetter = isLetter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isComma(node) {\n    return node.type === \"Punctuator\" && node.value === \",\";\n}\nexports.isComma = isComma;\nfunction getFunctionArguments(fn) {\n    const { nodes } = fn;\n    const first = nodes[0];\n    if (!first || isComma(first)) {\n        return null;\n    }\n    const result = [first];\n    const length = nodes.length;\n    for (let index = 1; index < length; index++) {\n        const comma = nodes[index++];\n        if (!isComma(comma)) {\n            return null;\n        }\n        const arg = nodes[index];\n        if (!arg || isComma(arg)) {\n            return null;\n        }\n        result.push(arg);\n    }\n    return result;\n}\nexports.getFunctionArguments = getFunctionArguments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AST = require(\"./types/ast\");\nexports.AST = AST;\nconst css_calc_1 = require(\"./css-calc\");\nexports.Parser = css_calc_1.Parser;\nexports.Tokenizer = css_calc_1.Tokenizer;\nexports.Stringifier = css_calc_1.Stringifier;\nexports.getResolvedType = css_calc_1.getResolvedType;\nexports.reduceExpression = css_calc_1.reduceExpression;\nexports.mathExpr = css_calc_1.newMathExpression;\nfunction parse(code, options) {\n    const tokenizer = new css_calc_1.Tokenizer(code, options);\n    return new css_calc_1.Parser(tokenizer, options).parse();\n}\nexports.parse = parse;\nfunction stringify(node, options) {\n    const stringifier = new css_calc_1.Stringifier(options);\n    return stringifier.stringify(node);\n}\nexports.stringify = stringify;\nexports.default = {\n    parse,\n    stringify,\n    getResolvedType: css_calc_1.getResolvedType,\n    reduceExpression: css_calc_1.reduceExpression,\n    mathExpr: css_calc_1.newMathExpression,\n    Parser: css_calc_1.Parser,\n    Tokenizer: css_calc_1.Tokenizer,\n    Stringifier: css_calc_1.Stringifier,\n    AST,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ParseError extends SyntaxError {\n    static fromCode(code, offset) {\n        return new ParseError(MESSAGES[code], code, offset);\n    }\n    constructor(message, code, offset) {\n        super(message);\n        this.code = code;\n        this.index = offset;\n    }\n}\nexports.ParseError = ParseError;\nconst MESSAGES = {\n    \"eof-in-string\": \"Unclosed string\",\n    \"eof-in-comment\": \"Unclosed comment\",\n    \"eof-in-bracket\": \"Unclosed bracket\",\n    \"unexpected-parenthesis\": \"Unexpected token\",\n    \"unexpected-calc-token\": \"Unexpected token\",\n};\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./errors\"));\n","var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var dotted = false;\n  var sciPos = -1;\n  var containsNumber = false;\n  var code;\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code >= 48 && code <= 57) {\n      containsNumber = true;\n    } else if (code === exp || code === EXP) {\n      if (sciPos > -1) {\n        break;\n      }\n      sciPos = pos;\n    } else if (code === dot) {\n      if (dotted) {\n        break;\n      }\n      dotted = true;\n    } else if (code === plus || code === minus) {\n      if (pos !== 0) {\n        break;\n      }\n    } else {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  if (sciPos + 1 === pos) pos--;\n\n  return containsNumber\n    ? {\n        number: value.slice(0, pos),\n        unit: value.slice(pos)\n      }\n    : false;\n};\n","import set from 'set-value';\nimport extend from 'just-extend';\nimport tokenTypes from '../../config/tokenType.defs.json';\nimport { DeepKeyTokenMap, SingleToken, TokenTypeSchema } from '@/types/tokens';\nimport { TokenTypes } from '@/constants/TokenTypes';\n\ntype CreateTokensObjectResult = Partial<Record<TokenTypes, {\n  values: DeepKeyTokenMap\n}>>;\n\nexport function transformName(name: string): TokenTypes {\n  switch (name) {\n    case 'color':\n    case 'colors':\n      return TokenTypes.COLOR;\n    case 'space':\n    case 'spacing':\n      return TokenTypes.SPACING;\n    case 'size':\n    case 'sizing':\n      return TokenTypes.SIZING;\n    case 'boxShadow':\n      return TokenTypes.BOX_SHADOW;\n    case 'borderRadius':\n      return TokenTypes.BORDER_RADIUS;\n    case 'borderWidth':\n      return TokenTypes.BORDER_WIDTH;\n    case 'opacity':\n      return TokenTypes.OPACITY;\n    case 'fontFamilies':\n      return TokenTypes.FONT_FAMILIES;\n    case 'fontWeights':\n      return TokenTypes.FONT_WEIGHTS;\n    case 'fontSizes':\n      return TokenTypes.FONT_SIZES;\n    case 'lineHeights':\n      return TokenTypes.LINE_HEIGHTS;\n    case 'typography':\n      return TokenTypes.TYPOGRAPHY;\n    case 'letterSpacing':\n      return TokenTypes.LETTER_SPACING;\n    case 'paragraphSpacing':\n      return TokenTypes.PARAGRAPH_SPACING;\n    case 'composition':\n      return TokenTypes.COMPOSITION;\n    case 'border':\n      return TokenTypes.BORDER;\n    case 'asset':\n      return TokenTypes.ASSET;\n    default:\n      return TokenTypes.OTHER;\n  }\n}\n\nexport function appendTypeToToken(token: Omit<SingleToken, 'type'> & { type?: TokenTypes; }): SingleToken {\n  const typeToSet = token.type ? token.type : transformName(token.name.split('.').slice(0, 1).toString());\n  return {\n    ...token,\n    type: typeToSet,\n  } as SingleToken;\n}\n\n// Creates a tokens object so that tokens are displayed in groups in the UI.\nexport function createTokensObject(tokens: (Omit<SingleToken, 'type'> & { type?: TokenTypes; })[], tokenFilter = '') {\n  if (tokens.length > 0) {\n    const obj = tokens.reduce<CreateTokensObjectResult>((acc, cur) => {\n      let hasSubstring:boolean = false;\n      try {\n        hasSubstring = cur.name?.toLowerCase().search(tokenFilter?.toLowerCase()) >= 0;\n      } catch {\n        hasSubstring = cur.name?.indexOf(tokenFilter) >= 0;\n      }\n      if (tokenFilter === '' || hasSubstring) {\n        const propToSet = cur.type ? cur.type : transformName(cur.name.split('.').slice(0, 1).toString());\n\n        if (!acc[propToSet]?.values) {\n          acc[propToSet] = { values: {} };\n        }\n\n        // we can use ! here because in the previous block we are ensuring\n        // the values object exists\n        set(acc[propToSet]!.values, cur.name, extend(true, {}, cur) as SingleToken);\n      }\n      return acc;\n    }, {});\n    return obj;\n  }\n  return {};\n}\n\n// Takes an array of tokens, transforms them into\n// an object and merges that with values we require for the UI\nexport function mappedTokens(tokens: SingleToken[], tokenFilter: string) {\n  const tokenObj = extend(true, {}, tokenTypes) as Record<\n  TokenTypes,\n  TokenTypeSchema & { values: DeepKeyTokenMap }\n  >;\n  const tokenObjects = createTokensObject(tokens, tokenFilter);\n\n  Object.entries(tokenObjects).forEach(([key, group]) => {\n    tokenObj[key as TokenTypes] = {\n      ...(tokenObj[key as TokenTypes] ?? {}),\n      values: group.values,\n    };\n  });\n\n  return Object.entries(tokenObj);\n}\n","// evaluates start of alias tokens such as $foo or {foo\nexport const checkAliasStartRegex = /(\\$[^\\s,]+\\w)|({([^]*))/g;\n\n// evaluates tokens such as $foo or {foo}\nexport const AliasRegex = /\\{((?:[^{}]|{[^{}]*})*)\\}|(?:\\$([^\\s,]+\\w))/g;\n\nexport const AliasDollarRegex = /(?:\\$([^\\s,]+\\w))/g;\n","export enum BoxShadowTypes {\n  DROP_SHADOW = 'dropShadow',\n  INNER_SHADOW = 'innerShadow',\n}\n","export enum ColorModifierTypes {\n  LIGHTEN = 'lighten',\n  DARKEN = 'darken',\n  MIX = 'mix',\n  ALPHA = 'alpha',\n}\n","export enum ColorSpaceTypes {\n  LCH = 'lch',\n  SRGB = 'srgb',\n  P3 = 'p3',\n  HSL = 'hsl',\n}\n","export enum Properties {\n  sizing = 'sizing',\n  height = 'height',\n  width = 'width',\n  minWidth = 'minWidth',\n  maxWidth = 'maxWidth',\n  minHeight = 'minHeight',\n  maxHeight = 'maxHeight',\n  spacing = 'spacing',\n  verticalPadding = 'verticalPadding',\n  horizontalPadding = 'horizontalPadding',\n  counterAxisSpacing = 'counterAxisSpacing',\n  paddingTop = 'paddingTop',\n  paddingRight = 'paddingRight',\n  paddingBottom = 'paddingBottom',\n  paddingLeft = 'paddingLeft',\n  itemSpacing = 'itemSpacing',\n  fill = 'fill',\n  backgroundBlur = 'backgroundBlur',\n  border = 'border',\n  borderTop = 'borderTop',\n  borderRight = 'borderRight',\n  borderBottom = 'borderBottom',\n  borderLeft = 'borderLeft',\n  borderColor = 'borderColor',\n  borderRadius = 'borderRadius',\n  borderRadiusTopLeft = 'borderRadiusTopLeft',\n  borderRadiusTopRight = 'borderRadiusTopRight',\n  borderRadiusBottomRight = 'borderRadiusBottomRight',\n  borderRadiusBottomLeft = 'borderRadiusBottomLeft',\n  borderWidth = 'borderWidth',\n  borderWidthTop = 'borderWidthTop',\n  borderWidthRight = 'borderWidthRight',\n  borderWidthBottom = 'borderWidthBottom',\n  borderWidthLeft = 'borderWidthLeft',\n  boxShadow = 'boxShadow',\n  opacity = 'opacity',\n  fontFamilies = 'fontFamilies',\n  fontWeights = 'fontWeights',\n  fontSizes = 'fontSizes',\n  lineHeights = 'lineHeights',\n  typography = 'typography',\n  composition = 'composition',\n  letterSpacing = 'letterSpacing',\n  paragraphSpacing = 'paragraphSpacing',\n  textCase = 'textCase',\n  dimension = 'dimension',\n  textDecoration = 'textDecoration',\n  asset = 'asset',\n  visibility = 'visibility',\n  text = 'text',\n  number = 'number',\n  tokenValue = 'tokenValue',\n  value = 'value',\n  tokenName = 'tokenName',\n  description = 'description',\n  rotation = 'rotation',\n  x = 'x',\n  y = 'y',\n}\n","export enum StorageProviderType {\n  LOCAL = 'local',\n  GENERIC_VERSIONED_STORAGE = 'genericVersionedStorage',\n  JSONBIN = 'jsonbin',\n  GITHUB = 'github',\n  GITLAB = 'gitlab',\n  SUPERNOVA = 'supernova',\n  ADO = 'ado',\n  URL = 'url',\n  BITBUCKET = 'bitbucket',\n  TOKENS_STUDIO = 'tokensstudio',\n}\n","export enum TokenSetStatus {\n  DISABLED = 'disabled', // @README this means the token set is completely disabled\n  SOURCE = 'source', // @README this means the token set will be used to resolve references, but will be excluded from styles creation\n  ENABLED = 'enabled', // @README this means the token set is fully enabled and will affect style creation\n}\n","export enum TokenTypes {\n  OTHER = 'other',\n  COLOR = 'color',\n  BORDER_RADIUS = 'borderRadius',\n  SIZING = 'sizing',\n  SPACING = 'spacing',\n  TEXT = 'text',\n  TYPOGRAPHY = 'typography',\n  OPACITY = 'opacity',\n  BORDER_WIDTH = 'borderWidth',\n  BOX_SHADOW = 'boxShadow',\n  FONT_FAMILIES = 'fontFamilies',\n  FONT_WEIGHTS = 'fontWeights',\n  LINE_HEIGHTS = 'lineHeights',\n  FONT_SIZES = 'fontSizes',\n  LETTER_SPACING = 'letterSpacing',\n  PARAGRAPH_SPACING = 'paragraphSpacing',\n  PARAGRAPH_INDENT = 'paragraphIndent',\n  TEXT_DECORATION = 'textDecoration',\n  TEXT_CASE = 'textCase',\n  COMPOSITION = 'composition',\n  DIMENSION = 'dimension',\n  BORDER = 'border',\n  ASSET = 'asset',\n  BOOLEAN = 'boolean',\n  NUMBER = 'number',\n}\n\nexport const ExportNumberVariablesTokenTypes = [\n  TokenTypes.BORDER_RADIUS,\n  TokenTypes.SIZING,\n  TokenTypes.SPACING,\n  TokenTypes.BORDER_WIDTH,\n  TokenTypes.DIMENSION,\n  TokenTypes.NUMBER,\n  TokenTypes.FONT_SIZES,\n  TokenTypes.LETTER_SPACING,\n  TokenTypes.LINE_HEIGHTS,\n  TokenTypes.PARAGRAPH_INDENT,\n  TokenTypes.PARAGRAPH_SPACING,\n  TokenTypes.OPACITY,\n];\n","export enum TokenFormatOptions {\n  DTCG = 'dtcg',\n  Legacy = 'legacy',\n}\n\nexport const TOKEN_FORMAT_OPTIONS = {\n  [TokenFormatOptions.DTCG]: { label: 'DTCG', value: TokenFormatOptions.DTCG },\n  [TokenFormatOptions.Legacy]: { label: 'Legacy', value: TokenFormatOptions.Legacy },\n};\n\nexport class TokenFormatStoreClass {\n  public tokenValueKey: 'value' | '$value';\n\n  public tokenTypeKey: 'type' | '$type';\n\n  public tokenDescriptionKey: 'description' | '$description';\n\n  public format: TokenFormatOptions;\n\n  constructor() {\n    this.tokenValueKey = 'value';\n    this.tokenTypeKey = 'type';\n    this.tokenDescriptionKey = 'description';\n    this.format = TokenFormatOptions.Legacy;\n  }\n\n  public setFormat = (format: TokenFormatOptions) => {\n    this.format = format;\n    this.tokenValueKey = format === TokenFormatOptions.DTCG ? '$value' : 'value';\n    this.tokenTypeKey = format === TokenFormatOptions.DTCG ? '$type' : 'type';\n    this.tokenDescriptionKey = format === TokenFormatOptions.DTCG ? '$description' : 'description';\n  };\n\n  public getFormat = () => this.format;\n}\n\nexport const TokenFormat = new TokenFormatStoreClass();\nexport const { setFormat, getFormat } = TokenFormat;\n","export default function convertOpacityToFigma(value: string, shouldOutputForVariables?: boolean) {\n  // Matches 50%, 100%, etc.\n  const matched = value.match(/(\\d+%)/);\n\n  if (matched) {\n    const matchedValue = Number(matched[0].slice(0, -1));\n    if (shouldOutputForVariables) {\n      return matchedValue;\n    }\n    return matchedValue / 100;\n  }\n\n  // Figma expects floats to be between 1 and 100, yet our users can enter opacity as 0-1 as well. We need to create appropriately.\n  const numericValue = Number(value);\n  if (shouldOutputForVariables && numericValue >= 0 && numericValue <= 1) {\n    return numericValue * 100;\n  }\n  return numericValue;\n}\n","import { dump } from 'js-yaml';\nimport { SingleToken } from '@/types/tokens';\nimport { TokenMap } from '../types/TokenMap';\n\nimport { AliasRegex } from '@/constants/AliasRegex';\nimport { checkAndEvaluateMath } from './math';\nimport { convertToRgb } from './color';\nimport { ColorModifierTypes } from '@/constants/ColorModifierTypes';\nimport { convertModifiedColorToHex } from './convertModifiedColorToHex';\nimport { getPathName } from './getPathName';\nimport { ResolveTokenValuesResult } from './tokenHelpers';\n\nclass TokenResolver {\n  public tokens: SingleToken[];\n\n  public tokenMap: TokenMap;\n\n  public memo: Map<string, ResolveTokenValuesResult>;\n\n  constructor(tokens: SingleToken[]) {\n    this.tokens = tokens;\n    this.tokenMap = new Map();\n    this.memo = new Map();\n\n    this.populateTokenMap();\n  }\n\n  // Set tokens and populate token map\n  private populateTokenMap(): void {\n    for (const token of this.tokens) {\n      this.tokenMap.set(token.name, token);\n    }\n  }\n\n  // When we get new tokens, we need to update the token map\n  public setTokens(tokens: SingleToken[]): ResolveTokenValuesResult[] {\n    this.tokens = tokens;\n    this.tokenMap = new Map();\n    this.memo = new Map();\n    this.populateTokenMap();\n\n    return this.resolveTokenValues();\n  }\n\n  // Initial function to iterate over all tokens and resolve references\n  public resolveTokenValues(): ResolveTokenValuesResult[] {\n    const resolvedTokens: ResolveTokenValuesResult[] = [];\n\n    for (const token of this.tokens) {\n      const resolvedValue = this.resolveReferences(token);\n      if (typeof resolvedValue.value === 'string' && AliasRegex.test(resolvedValue.value)) {\n        resolvedValue.failedToResolve = true;\n      }\n      resolvedTokens.push({\n        ...resolvedValue,\n        rawValue: token.value,\n      } as ResolveTokenValuesResult);\n    }\n\n    return resolvedTokens;\n  }\n\n  private isExponentialAndZero(str: string): boolean {\n    const regex = /^[+-]?\\d*\\.?\\d+([eE][+-]?\\d+)?$/;\n    const numericRegex = /^[+-]?\\d*\\.?\\d+$/;\n\n    // Needs to be more than a single zero otherwise \"0\" will get evaluated incorrectly\n    const allZerosRegex = /^00+$/;\n    const leadingZerosRegex = /^0+[1-9]\\d*$/;\n\n    return (regex.test(str) && !numericRegex.test(str)) || (allZerosRegex.test(str) || leadingZerosRegex.test(str));\n  }\n\n  // When we resolve references, we also need to calculate the value of the token, meaning color and math transformations\n  private calculateTokenValue(token: SingleToken, resolvedReferences: Set<string> = new Set()): SingleToken['value'] | undefined {\n    // Calculations only happen on strings.\n    if (typeof token.value === 'string') {\n      const couldBeNumberValue = !this.isExponentialAndZero(token.value) ? checkAndEvaluateMath(token.value) : token.value;\n\n      // if it's a number, we don't need to do anything else and can return it\n      if (typeof couldBeNumberValue === 'number') {\n        return couldBeNumberValue as SingleToken['value'];\n      }\n\n      // Transform non-conform colors such as rgba({color}, 0.5) to hex\n      const rgbColor = convertToRgb(couldBeNumberValue);\n\n      // If we have a color modifier, we need to apply it. As we need chained resolution to happen, this needs to be done here.\n      if (typeof token === 'object' && token?.$extensions?.['studio.tokens']?.modify && rgbColor) {\n        if (token?.$extensions?.['studio.tokens']?.modify?.type === ColorModifierTypes.MIX) {\n          // As we support references in color modifiers, we need to resolve them.\n          return convertModifiedColorToHex(rgbColor, {\n            ...token.$extensions?.['studio.tokens']?.modify,\n            value: String(this.resolveReferences({ value: token?.$extensions?.['studio.tokens']?.modify?.value } as SingleToken, resolvedReferences)?.value),\n            color: String(this.resolveReferences({ value: token?.$extensions?.['studio.tokens']?.modify?.color } as SingleToken, resolvedReferences)?.value) ?? undefined,\n          });\n        }\n\n        return convertModifiedColorToHex(rgbColor, {\n          ...token.$extensions?.['studio.tokens']?.modify,\n          value: String(this.resolveReferences({ value: token?.$extensions?.['studio.tokens']?.modify?.value } as SingleToken, resolvedReferences)?.value),\n        });\n      }\n      // If we don't have a color modifier, we can just return the color\n      return rgbColor;\n    }\n\n    // If it's not a string we just return the value.\n    return token.value;\n  }\n\n  public resolveReferences(token: SingleToken, resolvedReferences: Set<string> = new Set()): ResolveTokenValuesResult {\n    // We use the name as the memo key, if it exists\n    const memoKey = token.name || undefined;\n\n    // If we have a cache hit, we can return it\n    if (memoKey && this.memo.has(memoKey)) {\n      const cacheResult = this.memo.get(memoKey);\n      if (cacheResult) {\n        return cacheResult;\n      }\n    }\n\n    let foundToken;\n\n    // For strings, we need to check if there are any references, as those can only occur in strings\n    if (typeof token.value === 'string') {\n      const references = token.value.toString().match(AliasRegex) || [];\n\n      let finalValue: SingleToken['value'] = token.value;\n      let resolvedValueWithReferences: SingleToken['value'] | undefined;\n\n      // Resolve every reference, there could be more than 1, as in \"{color.primary} {color.secondary}\"\n      for (const reference of references) {\n        const path = getPathName(reference);\n\n        // We need to avoid circular references, so we check if we already resolved this reference\n        if (resolvedReferences.has(path)) {\n          return {\n            ...token,\n            rawValue: token.value,\n            failedToResolve: true,\n          } as ResolveTokenValuesResult;\n        }\n\n        // Users can nest references, so we need to make sure to resolve any nested references first.\n        let resolvedPath = path;\n        let matches: boolean = true;\n\n        // As long as we have matches, we need to resolve them. This is needed for multiple levels of nesting. Performance will suffer, but that's the user's choice.\n        while (matches !== false) {\n          const match = resolvedPath.match(AliasRegex);\n          matches = Boolean(match?.length);\n          if (!match?.length) break;\n\n          const nestedTokenName = getPathName(match[0]);\n          const nestedToken = this.tokenMap.get(nestedTokenName);\n\n          if (nestedToken && nestedToken.value) {\n            const resolvedNestedToken = this.resolveReferences({ ...nestedToken, name: nestedTokenName } as SingleToken, new Set(resolvedReferences));\n\n            if (typeof resolvedNestedToken.value === 'string' || typeof resolvedNestedToken.value === 'number') {\n              resolvedPath = resolvedPath.replace(match[0], resolvedNestedToken.value);\n            }\n          } else {\n            break;\n          }\n        }\n\n        // We have the special case of deep references where we can reference the .fontFamily property of a typography token.\n        // For that case, we need to split the path and get the last part, which might be the property name.\n        // However, it might not be. If we have a token called \"color.primary\" and we reference \"color.primary.fontFamily\", we need to check if \"color.primary\" exists. If it does, we prefer to return that one.\n        // If it doesn't it might be a composite token where we want to return the atomic property\n        const propertyPath = resolvedPath.split('.');\n        const propertyName = propertyPath.pop() as string;\n        const tokenNameWithoutLastPart = propertyPath.join('.');\n        foundToken = this.tokenMap.get(resolvedPath);\n\n        if (foundToken) {\n          // For composite tokens that are being referenced, we need to store the value of the found token so that we have something between raw value of a string and the final resolved token\n          if (typeof token.value === 'string' && (typeof foundToken.value === 'object' || Array.isArray(foundToken.value))) {\n            resolvedValueWithReferences = foundToken.value;\n          }\n          // We add the already resolved references to the new set, so we can check for circular references\n          const newResolvedReferences = new Set(resolvedReferences);\n          newResolvedReferences.add(resolvedPath);\n          // We initiate a new resolveReferences call, as we need to resolve the references of the reference\n          const resolvedTokenValue = this.resolveReferences({ ...foundToken, name: resolvedPath } as SingleToken, newResolvedReferences);\n          if (resolvedTokenValue.resolvedValueWithReferences) {\n            resolvedValueWithReferences = resolvedTokenValue.resolvedValueWithReferences;\n          }\n\n          // We weren't able to resolve the reference, so we return the token as is, but mark it as failed to resolve\n          if (resolvedTokenValue.value === undefined) {\n            return {\n              ...token, value: token.value, rawValue: token.value, failedToResolve: true,\n            } as ResolveTokenValuesResult;\n          }\n\n          // We replace the reference with the resolved value if needed\n          if (typeof finalValue === 'string' && (typeof resolvedTokenValue.value === 'string' || typeof resolvedTokenValue.value === 'number')) {\n            finalValue = finalValue.replace(reference, resolvedTokenValue.value);\n          } else if (resolvedTokenValue.value !== undefined) {\n            finalValue = resolvedTokenValue.value;\n          }\n        } else {\n          // If we didn't find a value, we need to check if we have a composite token\n          const tokenValueWithoutProperty = this.tokenMap.get(tokenNameWithoutLastPart)?.value;\n          if (tokenValueWithoutProperty && tokenValueWithoutProperty.hasOwnProperty(propertyName)) {\n            const propertyTokenValue = (tokenValueWithoutProperty as Record<string, unknown>)[propertyName];\n            const parsedValue = this.calculateTokenValue({ value: propertyTokenValue } as SingleToken, resolvedReferences);\n\n            if (parsedValue === undefined) {\n              finalValue = token.value;\n            } else {\n              finalValue = (typeof finalValue === 'string' && (typeof parsedValue === 'string' || typeof parsedValue === 'number')) ? finalValue.replace(reference, parsedValue) : parsedValue;\n            }\n          } else {\n            // Otherwise, we return the token as is, but mark it as failed to resolve\n            return {\n              ...token, value: token.value, rawValue: token.value, failedToResolve: true,\n            } as ResolveTokenValuesResult;\n          }\n        }\n      }\n\n      let resolvedToken: ResolveTokenValuesResult;\n      // When we have a string or number, we need to check if it's a valid token value.\n      if ((typeof finalValue === 'string' || typeof finalValue === 'number') && !AliasRegex.test(finalValue)) {\n        // We need to calculate the value of the token, as it might be a color or math transformation\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const calculated = this.calculateTokenValue({ ...token, value: finalValue } as SingleToken, resolvedReferences);\n        if (calculated === undefined) {\n          resolvedToken = token;\n        } else {\n          resolvedToken = { ...token, value: calculated } as ResolveTokenValuesResult;\n        }\n      } else {\n        // If it's not, we mark it as failed to resolve\n        const yamlString = dump(finalValue);\n\n        const hasFailingReferences = AliasRegex.test(yamlString);\n\n        // We combine the values, add the failing reference indicator.\n        // Also, if the originating reference is a string but the resolved value is a composite, we need to add the specific value of the composite token\n        // This is needed for cases like border tokens referencing other border tokens where we want to return the raw value of the border color so we can assign styles or variables.\n        resolvedToken = {\n          ...token, value: finalValue, rawValue: token.value, ...(hasFailingReferences ? { failedToResolve: true } : {}), ...(typeof resolvedValueWithReferences !== 'undefined' ? { resolvedValueWithReferences } : {}),\n        } as ResolveTokenValuesResult;\n      }\n\n      // When we have a string, we store the result in cache\n      if (typeof memoKey === 'string') {\n        this.memo.set(memoKey, resolvedToken);\n      }\n\n      // And then return it\n      return resolvedToken as ResolveTokenValuesResult;\n    }\n\n    // Shadow tokens can be of type array, so we need to resolve those too\n    if (Array.isArray(token.value)) {\n      const resolvedArray: any[] = [];\n\n      let failedToResolve = false;\n      for (const item of token.value) {\n        // We resolve each individual item, as it might be a reference\n        const resolvedItem = this.resolveReferences({ value: item } as SingleToken, resolvedReferences);\n        if (resolvedItem.failedToResolve) {\n          failedToResolve = true;\n        }\n\n        resolvedArray.push(resolvedItem.value);\n      }\n\n      // We bring back the resolved array into the token object, and set failedToResolve on the token if needed\n      const resolvedToken = {\n        ...token, value: resolvedArray, rawValue: token.value, ...(failedToResolve ? { failedToResolve } : {}),\n      } as ResolveTokenValuesResult;\n      // We save back to cache\n      if (typeof memoKey === 'string') {\n        this.memo.set(memoKey, resolvedToken);\n      }\n\n      resolvedToken.resolvedValueWithReferences = token.value;\n\n      return resolvedToken;\n    }\n\n    // If we have an object (typography, border, shadow, compositions), we need to resolve each property\n    if (typeof token.value === 'object' && token.value !== null) {\n      const resolvedObject: { [key: string]: any } = {};\n\n      let failedToResolve = false;\n      for (const key of Object.keys(token.value)) {\n        if (Object.prototype.hasOwnProperty.call(token.value, key)) {\n          const propertyTokenValue = (token.value as Record<string, unknown>)[key];\n          const resolvedValue = this.resolveReferences({ value: propertyTokenValue } as SingleToken, resolvedReferences);\n\n          if (resolvedValue.failedToResolve) {\n            failedToResolve = true;\n          }\n          // Note: This is technically incorrect. We should not be expecting this, but we need to mark those tokens that are referencing an object even though they should be expecting a string as invalid, e only have failedToResolve today. See https://github.com/tokens-studio/figma-plugin/issues/2450\n          if (typeof resolvedValue.value === 'object' && key in resolvedValue.value) {\n            failedToResolve = true;\n          }\n          resolvedObject[key] = resolvedValue.value;\n        }\n      }\n\n      const resolvedToken = { ...token, value: resolvedObject, ...(failedToResolve ? { failedToResolve } : {}) } as ResolveTokenValuesResult;\n      // If we have a value, we set it back to cache\n      if (typeof memoKey === 'string') {\n        this.memo.set(memoKey, resolvedToken);\n      }\n\n      // For all composite tokens we add the resolved value with references to the token.\n      // technically for composites this is not needed, but then we can rely on this one property to contain the original value\n      resolvedToken.resolvedValueWithReferences = token.value;\n\n      return resolvedToken;\n    }\n\n    return token;\n  }\n\n  public get(tokenName: string): SingleToken | undefined {\n    return this.tokenMap.get(tokenName);\n  }\n}\n\nconst defaultTokenResolver = new TokenResolver([]);\n\nexport { defaultTokenResolver };\n","import { parseToRgba, toHex } from 'color2k';\nimport convertOpacityToFigma from '@/plugin/figmaTransforms/opacity';\n\n// Convert non-conform colors to RGB value that can be used throughout the plugin\nexport function convertToRgb(color: string): string {\n  try {\n    if (typeof color !== 'string') {\n      return color;\n    }\n    const hexRegex = /#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})/g;\n    const hslaRegex = /(hsla?\\(.*?\\))/g;\n    const rgbaRegex = /(rgba?\\(.*?\\))/g;\n    let returnedColor = color;\n\n    try {\n      const matchesRgba = Array.from(returnedColor.matchAll(rgbaRegex), (m) => m[0]);\n      const matchesHsla = Array.from(returnedColor.matchAll(hslaRegex), (m) => m[0]);\n      if (matchesHsla.length > 0) {\n        matchesHsla.forEach((match) => {\n          returnedColor = returnedColor.replace(match, toHex(match));\n        });\n      }\n      if (matchesRgba.length > 0) {\n        matchesRgba.forEach((match) => {\n          const matchedString = match;\n          const matchedColor = match.replace(/rgba?\\(/g, '').replace(')', '');\n          const matchesHexInsideRgba = matchedColor.match(hexRegex);\n          let r;\n          let g;\n          let b;\n          let alpha = '1';\n          if (matchesHexInsideRgba) {\n            [r, g, b] = parseToRgba(matchesHexInsideRgba[0]);\n            alpha = matchedColor.split(',').pop()?.trim() ?? '0';\n          } else {\n            [r, g, b, alpha = '1'] = matchedColor.split(',').map((n) => n.trim());\n          }\n          const a = convertOpacityToFigma(alpha);\n          returnedColor = returnedColor.split(matchedString).join(toHex(`rgba(${r}, ${g}, ${b}, ${a})`));\n        });\n      }\n    } catch (e) {\n      console.log('error', e, color);\n    }\n    return returnedColor;\n  } catch (e) {\n    console.error(e);\n  }\n\n  return color;\n}\n","import Color from 'colorjs.io';\nimport { ColorSpaceTypes } from '@/constants/ColorSpaceTypes';\n\nexport function darken(color: Color, colorSpace: ColorSpaceTypes, amount: number) {\n  switch (colorSpace) {\n    case ColorSpaceTypes.LCH: {\n      const lightness = color.lch.l;\n      const difference = lightness;\n      const newChroma = Math.max(0, color.lch.c - amount * color.lch.c);\n      const newLightness = Math.max(0, lightness - difference * amount);\n      color.set('lch.l', newLightness);\n      color.set('lch.c', newChroma);\n      return color;\n    }\n    case ColorSpaceTypes.HSL: {\n      const lightness = color.hsl.l;\n      const difference = lightness;\n      const newLightness = Math.max(0, lightness - difference * amount);\n      color.set('hsl.l', newLightness);\n      return color;\n    }\n    case ColorSpaceTypes.P3: {\n      const colorInP3 = color.to('p3');\n      const newRed = Math.max(0, colorInP3.p3.r - amount * colorInP3.p3.r);\n      const newGreen = Math.max(0, colorInP3.p3.g - amount * colorInP3.p3.g);\n      const newBlue = Math.max(0, colorInP3.p3.b - amount * colorInP3.p3.b);\n      colorInP3.set('p3.r', newRed);\n      colorInP3.set('p3.g', newGreen);\n      colorInP3.set('p3.b', newBlue);\n      return colorInP3;\n    }\n\n    case ColorSpaceTypes.SRGB: {\n      const newRed = Math.max(0, color.srgb.r - amount * color.srgb.r);\n      const newGreen = Math.max(0, color.srgb.g - amount * color.srgb.g);\n      const newBlue = Math.max(0, color.srgb.b - amount * color.srgb.b);\n      color.set('srgb.r', newRed);\n      color.set('srgb.g', newGreen);\n      color.set('srgb.b', newBlue);\n      return color;\n    }\n\n    default: {\n      return color.darken(amount);\n    }\n  }\n}\n","export function getColorSwatchStyle(tokenValue: string) {\n  return tokenValue.includes(';') ? { background: tokenValue.replace(/;/g, '') } : { background: tokenValue };\n}\n","export const getReferenceTokensFromGradient = (rawValue: string): string[] => {\n  const rawValueDetails = rawValue.replace('linear-gradient(', '').replace(')', '').split(',');\n  const referenceTokens: string[] = rawValueDetails.reduce((acc: string[], curr: string) => {\n    // Check is the current part contains color value or reference token\n    if (curr.includes('#') || curr.includes('{')) {\n      const matches = curr.match(/{(.*?)}/g);\n      // Return empty string in case of not reference token\n      acc.push(matches ? matches[0].replace(/[{}]/g, '') : '');\n    }\n    return acc;\n  }, []);\n\n  return referenceTokens;\n};\n","export * from './convertToRgb';\nexport * from './isLightOrDark';\nexport * from './getReferenceTokensFromGradient';\nexport * from './getColorSwatchStyle';\n","import { readableColorIsBlack } from 'color2k';\n\n// Light or dark check for Token Buttons: If color is very bright e.g. white we show a different style\nexport function lightOrDark(color: string) {\n  if (typeof color !== 'string') {\n    return 'light';\n  }\n  try {\n    return readableColorIsBlack(color) ? 'light' : 'dark';\n  } catch (e) {\n    return 'light';\n  }\n}\n","import Color from 'colorjs.io';\nimport { ColorSpaceTypes } from '@/constants/ColorSpaceTypes';\n\nexport function lighten(color: Color, colorSpace: ColorSpaceTypes, amount: number) {\n  switch (colorSpace) {\n    case ColorSpaceTypes.LCH: {\n      const lightness = color.lch.l;\n      const difference = 100 - lightness;\n      const newChroma = Math.max(0, color.lch.c - amount * color.lch.c);\n      const newLightness = Math.min(100, lightness + difference * amount);\n      color.set('lch.l', newLightness);\n      color.set('lch.c', newChroma);\n      return color;\n    }\n    case ColorSpaceTypes.HSL: {\n      const lightness = color.hsl.l;\n      const difference = 100 - lightness;\n      const newLightness = Math.min(100, lightness + difference * amount);\n      color.set('hsl.l', newLightness);\n      return color;\n    }\n    case ColorSpaceTypes.P3: {\n      const colorInP3 = color.to('p3');\n      const newRed = Math.min(1, colorInP3.p3.r + amount * (1 - colorInP3.p3.r));\n      const newGreen = Math.min(1, colorInP3.p3.g + amount * (1 - colorInP3.p3.g));\n      const newBlue = Math.min(1, colorInP3.p3.b + amount * (1 - colorInP3.p3.b));\n      colorInP3.set('p3.r', newRed);\n      colorInP3.set('p3.g', newGreen);\n      colorInP3.set('p3.b', newBlue);\n      return colorInP3;\n    }\n    case ColorSpaceTypes.SRGB: {\n      const newRed = Math.min(1, color.srgb.r + amount * (1 - color.srgb.r));\n      const newGreen = Math.min(1, color.srgb.g + amount * (1 - color.srgb.g));\n      const newBlue = Math.min(1, color.srgb.b + amount * (1 - color.srgb.b));\n      color.set('srgb.r', newRed);\n      color.set('srgb.g', newGreen);\n      color.set('srgb.b', newBlue);\n      return color;\n    }\n    default: {\n      return color.lighten(amount);\n    }\n  }\n}\n","import Color from 'colorjs.io';\nimport { ColorSpaceTypes } from '@/constants/ColorSpaceTypes';\n\nexport function mix(color: Color, colorSpace: ColorSpaceTypes, amount: number, mixColor: Color) {\n  const mixValue = Math.max(0, Math.min(1, Number(amount)));\n\n  return new Color(color.mix(mixColor, mixValue, { space: colorSpace }).toString());\n}\n","import Color from 'colorjs.io';\n\nexport function transparentize(color: Color, amount: number) {\n  color.alpha = Math.max(0, Math.min(1, Number(amount)));\n  return color;\n}\n","import Color from 'colorjs.io';\nimport { ColorModifier } from '@/types/Modifier';\nimport { modifyColor } from './modifyColor';\n\nexport function convertModifiedColorToHex(baseColor: string, modifier: ColorModifier) {\n  let returnedColor = baseColor;\n  try {\n    returnedColor = modifyColor(baseColor, modifier);\n    const returnedColorInSpace = new Color(returnedColor);\n    return returnedColorInSpace.to('srgb').toString({ format: 'hex' });\n  } catch (e) {\n    return baseColor;\n  }\n}\n","import { Properties } from '@/constants/Properties';\n\nexport function convertToDefaultProperty(property: string): string {\n  let type: string = '';\n  switch (property) {\n    case Properties.width:\n    case Properties.height:\n    case Properties.sizing:\n    case Properties.itemSpacing:\n    case Properties.verticalPadding:\n    case Properties.horizontalPadding:\n    case Properties.paddingTop:\n    case Properties.paddingLeft:\n    case Properties.paddingBottom:\n    case Properties.paddingRight:\n      type = Properties.dimension;\n      break;\n    case Properties.borderRadiusTopLeft:\n    case Properties.borderRadiusTopRight:\n    case Properties.borderRadiusBottomLeft:\n    case Properties.borderRadiusBottomRight:\n      type = Properties.borderRadius;\n      break;\n    case Properties.borderColor:\n      type = Properties.fill;\n      break;\n    case Properties.borderWidthTop:\n    case Properties.borderWidthLeft:\n    case Properties.borderWidthRight:\n    case Properties.borderWidthBottom:\n      type = Properties.borderWidth;\n      break;\n    case 'fontFamily':\n      type = Properties.fontFamilies;\n      break;\n    case 'fontSize':\n      type = Properties.fontSizes;\n      break;\n    case 'fontWeight':\n      type = Properties.fontWeights;\n      break;\n    case 'lineHeights':\n    case 'lineHeight':\n      type = Properties.lineHeights;\n      break;\n    case 'style':\n      type = 'strokeStyle';\n      break;\n    default:\n      type = property;\n      break;\n  }\n  return type;\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleToken } from '@/types/tokens';\nimport {\n  isSingleBorderToken,\n  isSingleBoxShadowToken,\n  isSingleCompositionToken,\n  isSingleTokenValueObject,\n  isSingleTypographyToken,\n} from './is';\nimport { TokenGroupInJSON, isTokenGroupWithType } from './is/isTokenGroupWithType';\nimport { TokenFormat } from '@/plugin/TokenFormatStoreClass';\nimport { isSingleTokenInJSON } from './is/isSingleTokenInJson';\n\n// This is a token as it is incoming, so we can't be sure of the values or types\nexport type TokenInJSON<T extends TokenTypes = any, V = any> = {\n  $extensions?: {\n    [key: string]: any;\n    'studio.tokens'?: {\n      [key: string]: any;\n      id?: string;\n      modify?: any;\n    };\n    id?: string;\n  };\n} & (\n  | {\n    type: T;\n    value: V;\n    description?: string;\n  }\n  | {\n    $type: T;\n    $value: V;\n    $description?: string;\n  }\n);\n\nexport type Tokens =\n  | Partial<Record<string, Partial<Record<TokenTypes, Record<string, TokenInJSON>>>>>\n  | TokenGroupInJSON;\n\n  type OptionalDTCGKeys = {\n    $type?: TokenTypes;\n    $value?: SingleToken['value'];\n    $description?: string;\n  };\n\n// @TODO fix typings\nfunction checkForTokens({\n  obj,\n  token,\n  root = null,\n  returnValuesOnly = false,\n  expandTypography = false,\n  expandShadow = false,\n  expandComposition = false,\n  expandBorder = false,\n  inheritType,\n  groupLevel = 0,\n  currentTypeLevel = 0,\n}: {\n  obj: SingleToken<true>[];\n  token: Tokens | TokenGroupInJSON;\n  root: string | null;\n  returnValuesOnly?: boolean;\n  expandTypography?: boolean;\n  expandShadow?: boolean;\n  expandComposition?: boolean;\n  expandBorder?: boolean;\n  inheritType?: string;\n  groupLevel?: number;\n  currentTypeLevel?: number;\n}): [(SingleToken & SingleToken & OptionalDTCGKeys)[], SingleToken & OptionalDTCGKeys | undefined] {\n  let returnValue:\n  | Pick<SingleToken<false>, 'name' | 'value' | 'type' | 'description' | 'inheritTypeLevel'>\n  | {\n    type: TokenTypes;\n    value: Record<string, SingleToken['value']>;\n    description?: string;\n    inheritTypeLevel?: number;\n  }\n  | undefined;\n  if (isSingleTokenInJSON(token)) {\n    returnValue = token as SingleToken<false>;\n    returnValue.value = token[TokenFormat.tokenValueKey];\n\n    if (token[TokenFormat.tokenDescriptionKey] && typeof token[TokenFormat.tokenDescriptionKey] === 'string') {\n      returnValue.description = token[TokenFormat.tokenDescriptionKey] as string;\n    }\n    if (!token[TokenFormat.tokenTypeKey] && inheritType) {\n      returnValue.type = inheritType as TokenTypes;\n      returnValue.inheritTypeLevel = currentTypeLevel as number;\n    } else {\n      returnValue.type = token[TokenFormat.tokenTypeKey];\n      if (inheritType === token[TokenFormat.tokenTypeKey] && currentTypeLevel > 0) {\n        returnValue.inheritTypeLevel = currentTypeLevel as number;\n      }\n    }\n  } else if (\n    isSingleTypographyToken(token)\n    || isSingleBoxShadowToken(token)\n    || isSingleCompositionToken(token)\n    || isSingleBorderToken(token)\n  ) {\n    returnValue = token as SingleToken<false>;\n    returnValue.value = Object.entries(token).reduce<Record<string, SingleToken['value']>>((acc, [key, val]) => {\n      acc[key] = isSingleTokenValueObject(val) && returnValuesOnly ? val[TokenFormat.tokenValueKey] : val;\n      return acc;\n    }, {});\n    if (token[TokenFormat.tokenDescriptionKey] && typeof token[TokenFormat.tokenDescriptionKey] === 'string') {\n      returnValue.description = token[TokenFormat.tokenDescriptionKey] as string;\n    }\n    if (!token[TokenFormat.tokenTypeKey] && inheritType) {\n      returnValue.type = inheritType as TokenTypes;\n      returnValue.inheritTypeLevel = currentTypeLevel as number;\n    } else {\n      returnValue.type = token[TokenFormat.tokenTypeKey] as TokenTypes;\n    }\n  } else if (typeof token === 'object') {\n    // We dont have a single token value key yet, so it's likely a group which we need to iterate over\n    // This would be where we push a `group` entity to the array, once we do want to tackle group descriptions or group metadata\n    let tokenToCheck = token;\n    groupLevel += 1;\n    // When token groups are typed, we need to inherit the type to their children\n    if (isTokenGroupWithType(token)) {\n      const { [TokenFormat.tokenTypeKey]: groupType, ...tokenValues } = token;\n      inheritType = groupType as unknown as TokenTypes;\n      currentTypeLevel = groupLevel;\n      tokenToCheck = tokenValues as Tokens;\n    }\n\n    if (typeof tokenToCheck !== 'undefined' || tokenToCheck !== null) {\n      Object.entries(tokenToCheck).forEach(([key, value]) => {\n        const [, result] = checkForTokens({\n          obj,\n          token: value as TokenGroupInJSON,\n          root: [root, key].filter((n) => n).join('.'),\n          returnValuesOnly,\n          expandTypography,\n          expandShadow,\n          expandComposition,\n          expandBorder,\n          inheritType,\n          groupLevel,\n          currentTypeLevel,\n        });\n        if (root && result) {\n          obj.push({ ...result, name: [root, key].join('.') });\n        } else if (result) {\n          obj.push({ ...result, name: key });\n        }\n      });\n    }\n  } else {\n    // If all else fails, we just return the token as the value, and type as other\n    returnValue = {\n      value: token,\n      type: TokenTypes.OTHER,\n    };\n  }\n\n  if (typeof returnValue === 'object' && 'name' in returnValue && returnValue?.name) {\n    returnValue.name = returnValue.name.split('/').join('.');\n  }\n\n  return [obj, returnValue as SingleToken | undefined];\n}\n\nexport default function convertToTokenArray({ tokens }: { tokens: Tokens }) {\n  const [result] = checkForTokens({\n    obj: [],\n    root: null,\n    token: tokens,\n  });\n\n  // Internally we dont care about $value or value, we always use value, so remove it\n  return Object.values(result).map((token) => {\n    if ('$value' in token) delete token.$value;\n    if ('$description' in token) delete token.$description;\n    if ('$type' in token) delete token.$type;\n    return token;\n  });\n}\n","import { mergeTokenGroups } from '@/utils/tokenHelpers';\nimport { TransformerOptions } from './types';\nimport convertTokensToGroupedObject from './convertTokensToGroupedObject';\nimport parseTokenValues from './parseTokenValues';\nimport { SetTokenDataPayload } from '@/types/payloads';\nimport { TokenSetStatus } from '@/constants/TokenSetStatus';\nimport { defaultTokenResolver } from './TokenResolver';\n\n// Takes Figma Tokens input, resolves all aliases while respecting user's theme choice and outputs an object with resolved tokens, ready to be consumed by style dictionary.\nexport default function convertTokensObjectToResolved(\n  tokens: SetTokenDataPayload['values'],\n  usedSets: string[] = [],\n  excludedSets: string[] = [],\n  options: TransformerOptions = {\n    expandTypography: false,\n    expandShadow: false,\n    expandComposition: false,\n    expandBorder: false,\n    preserveRawValue: false,\n    resolveReferences: true,\n  },\n) {\n  // Parse tokens into array structure\n  const parsed = parseTokenValues(tokens);\n  // Merge to one giant array\n  const merged = mergeTokenGroups(\n    parsed,\n    // @README this function is only used in the utils/transform file\n    // which in turn is only used for a local script -- in which case for now we do not\n    // need to fully support the SOURCE state\n    Object.fromEntries(usedSets.map((tokenSet) => ([tokenSet, TokenSetStatus.ENABLED]))),\n  );\n  // Resolve aliases\n  const resolved = defaultTokenResolver.setTokens(merged);\n  // Group back into one object\n  const object = convertTokensToGroupedObject(resolved, excludedSets, options);\n  return object;\n}\n","import set from 'set-value';\nimport { appendTypeToToken } from '@/app/components/createTokenObj';\nimport { TransformerOptions } from './types';\nimport { expand } from '@/utils/expand';\nimport { getValueWithReferences } from '@/utils/getValueWithReferences';\nimport { ResolveTokenValuesResult } from '@/utils/tokenHelpers';\nimport { SingleToken } from '@/types/tokens';\nimport { TokenTypes } from '@/constants/TokenTypes';\n\n// @TODO fix tokenObj\nexport default function convertTokensToGroupedObject(\n  tokens: ResolveTokenValuesResult[],\n  excludedSets: string[],\n  options: TransformerOptions,\n) {\n  let tokenObj = {};\n  tokenObj = tokens.reduce((acc, token) => {\n    if (options.throwErrorWhenNotResolved && token.failedToResolve) {\n      throw new Error(`ERROR: failed to resolve token \"${token.name}\"`);\n    }\n    if (token.internal__Parent && excludedSets.includes(token.internal__Parent)) {\n      return acc;\n    }\n    const obj = acc || {};\n    const tokenWithType = appendTypeToToken(token) as SingleToken<false>;\n    delete tokenWithType.name;\n    if (options.resolveReferences !== true) {\n      tokenWithType.value = getValueWithReferences(tokenWithType as SingleToken, options);\n    } else {\n      delete tokenWithType.$extensions;\n    }\n\n    if (!options.preserveRawValue) {\n      delete tokenWithType.rawValue;\n    }\n    delete tokenWithType.internal__Parent;\n    delete tokenWithType.resolvedValueWithReferences;\n    if (\n      (!!options.expandTypography && tokenWithType.type === TokenTypes.TYPOGRAPHY)\n      || (!!options.expandShadow && tokenWithType.type === TokenTypes.BOX_SHADOW)\n      || (!!options.expandComposition && tokenWithType.type === TokenTypes.COMPOSITION)\n      || (!!options.expandBorder && tokenWithType.type === TokenTypes.BORDER)\n    ) {\n      const expanded = expand(tokenWithType.value);\n      set(obj, token.name, { ...expanded });\n    } else {\n      set(obj, token.name, tokenWithType);\n    }\n    return acc;\n  }, {});\n\n  return tokenObj;\n}\n","import { TokenFormat, TokenFormatOptions } from '@/plugin/TokenFormatStoreClass';\nimport { Tokens } from './convertTokens';\n\nexport function detectFormat(tokens: Tokens, shouldSet: boolean) {\n  const stringifiedTokens = JSON.stringify(tokens);\n  if (stringifiedTokens.includes('$value')) {\n    if (shouldSet) TokenFormat.setFormat(TokenFormatOptions.DTCG);\n    return TokenFormatOptions.DTCG;\n  }\n  if (shouldSet) TokenFormat.setFormat(TokenFormatOptions.Legacy);\n  return TokenFormatOptions.Legacy;\n}\n","import { SingleToken } from '@/types/tokens';\nimport { convertToDefaultProperty } from './convertToDefaultProperty';\nimport { TokenFormat } from '@/plugin/TokenFormatStoreClass';\n\ninterface BaseResult {\n  type: string;\n  value: string | number;\n}\n\ninterface Result {\n  [key: string]: BaseResult | Result;\n}\n\nexport function expand(token: SingleToken['value']) {\n  return Object.entries(token).reduce<Result>((acc, [key, val]) => {\n    if (typeof val === 'string' || typeof val === 'number') {\n      // Temporarily cast to 'any' to bypass TypeScript's static type checking. Our keys can either be value or $value (same for type)\n      const resultItem: any = {};\n      resultItem[TokenFormat.tokenValueKey] = val;\n      resultItem[TokenFormat.tokenTypeKey] = convertToDefaultProperty(key);\n\n      // Now cast back to BaseResult\n      acc[key] = resultItem as BaseResult;\n    } else {\n      acc[key] = expand(val);\n    }\n\n    return acc;\n  }, {});\n}\n","export function getPathName(ref: string) {\n  if (ref.startsWith('{')) {\n    return ref.slice(1, ref.length - 1);\n  }\n  return ref.substring(1);\n}\n","import { TokenSetStatus } from '@/constants/TokenSetStatus';\nimport { UsedTokenSetsMap } from '@/types';\nimport { SingleToken } from '@/types/tokens';\nimport { sortSets } from './sortSets';\n\nexport function getTokenSetsOrder(\n  tokens: Record<string, SingleToken[]>,\n  usedSets: UsedTokenSetsMap,\n  overallConfig: UsedTokenSetsMap,\n  activeTokenSet?: string,\n): { tokenSetsOrder: string[]; usedSetsList: string[]; overallSets: string[]; } {\n  const originalTokenSetOrder = Object.keys(tokens);\n  const usedSetsList = originalTokenSetOrder.filter((key) => usedSets[key] === TokenSetStatus.ENABLED || usedSets[key] === TokenSetStatus.SOURCE);\n  const overallSets = originalTokenSetOrder\n    .filter((set) => !usedSetsList.includes(set))\n    .sort((a, b) => sortSets(a, b, overallConfig));\n\n  if (activeTokenSet) {\n    usedSetsList.splice(usedSetsList.indexOf(activeTokenSet), 1);\n    usedSetsList.push(activeTokenSet);\n  }\n\n  const tokenSetsOrder = [...overallSets, ...usedSetsList];\n\n  return { tokenSetsOrder, usedSetsList, overallSets };\n}\n","import { TokenFormat } from '@/plugin/TokenFormatStoreClass';\n\nexport function getTokenTypeKey(ignoreTokenFormat: boolean = false): string {\n  const key = TokenFormat.tokenTypeKey;\n  return ignoreTokenFormat && key.startsWith('$') ? key.slice(1) : key;\n}\n","import { TokenFormat } from '@/plugin/TokenFormatStoreClass';\n\nexport function getTokenValueKey(ignoreTokenFormat: boolean = false): string {\n  const key = TokenFormat.tokenValueKey;\n  return ignoreTokenFormat && key.startsWith('$') ? key.slice(1) : key;\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SingleToken } from '@/types/tokens';\nimport { TokenBoxshadowValue, TokenTypographyValue } from '@/types/values';\nimport { TransformerOptions } from './types';\n\nfunction getSimpleValue(resolvedValue: SingleToken['value'], rawValue: SingleToken['value'], options: TransformerOptions) {\n  let value = resolvedValue;\n  /*\n   * ***************************************************************************\n   * TOKEN EXAMPLES WHEN USING --resolveReferences='math'\n   * ***************************************************************************\n   * {spacing.xs} * 2                 =>  MATH EXPRESSION       => RESOLVE\n   * {spacing.xs} * {spacing.scale}   =>  MATH EXPRESSION       => RESOLVE\n   *\n   * {spacing.xs}                     =>  SINGLE TOKEN          => DON'T RESOLVE\n   * {spacing.xs}rem                  =>  SINGLE TOKEN + UNIT   => DON'T RESOLVE\n   * {spacing.xs}{spacing.unit}       =>  MULTIPLE TOKENS       => DON'T RESOLVE\n   *\n   * rgba(255, 0, 0, {opacity.low})   =>  CSS FUNCTION          => DON'T RESOLVE\n   * calc({spacing.xl} * 2)           =>  CSS FUNCTION          => DON'T RESOLVE\n   * 20% {border-radius.smooth}       =>  CSS LIST VALUE        => DON'T RESOLVE\n   * ***************************************************************************\n   */\n\n  if (typeof rawValue === 'string' && resolvedValue.toString() !== rawValue) {\n    if (options.resolveReferences === false) {\n      value = rawValue;\n    }\n    if (options.resolveReferences === 'math') {\n      const singleAliasRegEx = /^{[^}]*}$|^\\$[^$]*$/;\n      const oneOrMoreAliasRegEx = /{[^}]*}|\\$[\\w.-]*/g;\n      const aliasRegEx = typeof resolvedValue === 'number' ? singleAliasRegEx : oneOrMoreAliasRegEx;\n      if (aliasRegEx.test(rawValue)) {\n        value = rawValue;\n      }\n    }\n  }\n  return value as string; // TODO: remove `as string` when SingleGenericToken supports value as `string|number`\n}\n\nfunction getComplexValue<T extends SingleToken['value']>(\n  resolvedValue: T,\n  rawValue: T,\n  options: TransformerOptions,\n) {\n  type IndexedValueType = Record<string, string | number>;\n  if (typeof resolvedValue === 'object') {\n    return Object.entries(resolvedValue).reduce((acc, [key, val]) => {\n      const rawVal = (rawValue as IndexedValueType)[key];\n      // TODO: Remove as SingleToken[\"value\"]\n      acc[key] = getSimpleValue(val as SingleToken['value'], rawVal as SingleToken['value'], options);\n      return acc;\n    }, {} as IndexedValueType) as T;\n  }\n  return getSimpleValue(resolvedValue as SingleToken['value'], rawValue as SingleToken['value'], options) as T;\n}\n\nexport function getValueWithReferences(token: SingleToken, options: TransformerOptions) {\n  if (token.rawValue === undefined) {\n    return token.value;\n  }\n\n  if (token.type === TokenTypes.TYPOGRAPHY || token.type === TokenTypes.BOX_SHADOW || token.type === TokenTypes.COMPOSITION || token.type === TokenTypes.BORDER) {\n    if (Array.isArray(token.value)) {\n      const rawValue = token.rawValue as TokenBoxshadowValue[];\n      return token.value.map((shadow, index) => getComplexValue(shadow, rawValue[index], options));\n    }\n    return getComplexValue(token.value, token.rawValue as TokenTypographyValue | TokenBoxshadowValue, options);\n  }\n\n  return getSimpleValue(token.value, token.rawValue, options);\n}\n","export * from './isSingleTokenValueObject';\nexport * from './isSingleTypographyToken';\nexport * from './isSingleCompositionToken';\nexport * from './isSingleToken';\nexport * from './isPropertyType';\nexport * from './isSingleBoxShadowToken';\nexport * from './isTokenType';\nexport * from './isGitProvider';\nexport * from './isPrimitiveValue';\nexport * from './isSingleBoxShadowValue';\nexport * from './isSingleTypographyValue';\nexport * from './isMatchingStyle';\nexport * from './isSingleBorderToken';\n","import { StorageProviderType } from '@/constants/StorageProviderType';\nimport { StorageType, StorageTypeCredentials, StorageTypeFormValues } from '@/types/StorageType';\n\nexport function isGitProvider<\n  T extends StorageType | StorageTypeCredentials | StorageTypeFormValues<false> | StorageTypeFormValues<true>,\n>(\n  provider: T,\n): provider is\n  | Extract<T, { provider: StorageProviderType.ADO }>\n  | Extract<T, { provider: StorageProviderType.GITHUB | StorageProviderType.GITLAB }>\n  | Extract<T, { provider: StorageProviderType.BITBUCKET }> {\n  return (\n    provider.provider === StorageProviderType.ADO\n    || provider.provider === StorageProviderType.GITHUB\n    || provider.provider === StorageProviderType.GITLAB\n    || provider.provider === StorageProviderType.BITBUCKET\n  );\n}\n","export function isMatchingStyle(\n  tokenPath: string,\n  style: EffectStyle | PaintStyle | TextStyle,\n) {\n  const splitName = style.name.split('/').map((name) => name.trim());\n  const trimmedName = splitName.join('/');\n\n  return trimmedName === tokenPath;\n}\n","export function isPrimitiveValue<V>(value: V): value is Extract<V, boolean | number | string> {\n  return (\n    typeof value === 'string'\n    || typeof value === 'boolean'\n    || typeof value === 'number'\n  );\n}\n","import { Properties } from '@/constants/Properties';\n\nexport function isPropertyType(input: string | Properties): input is Properties {\n  return Object.values<string>(Properties).includes(input);\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { TokenFormat } from '@/plugin/TokenFormatStoreClass';\nimport { SingleBorderToken, SingleBorderTokenInJSON, SingleToken } from '@/types/tokens';\nimport { TokenInJSON, Tokens } from '../convertTokens';\nimport { getTokenTypeKey } from '../getTokenTypeKey';\nimport { getTokenValueKey } from '../getTokenValueKey';\n\nexport function isSingleBorderToken(\n  token: SingleToken | any,\n  ignoreTokenFormat: boolean = false,\n): token is SingleBorderToken {\n  if (typeof token !== 'object') return false;\n  const tokenTypeKey = getTokenTypeKey(ignoreTokenFormat);\n  const tokenValueKey = getTokenValueKey(ignoreTokenFormat);\n  return (\n    token[tokenTypeKey] === TokenTypes.BORDER\n    && (typeof token[tokenValueKey] === 'string'\n      || (typeof token[tokenValueKey] === 'object' && !(tokenValueKey in token[tokenValueKey])))\n  );\n}\n\nexport function isSingleBorderTokenInJSON(token: TokenInJSON | Tokens): token is SingleBorderTokenInJSON {\n  if (typeof token !== 'object') return false;\n  return (\n    token[TokenFormat.tokenTypeKey] === TokenTypes.BORDER\n    && (typeof token[TokenFormat.tokenValueKey] === 'string'\n      || (typeof token[TokenFormat.tokenValueKey] === 'object'\n        && !(TokenFormat.tokenValueKey in token[TokenFormat.tokenValueKey])))\n  );\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { TokenFormat } from '@/plugin/TokenFormatStoreClass';\nimport { SingleBoxShadowToken, SingleBoxShadowTokenInJSON, SingleToken } from '@/types/tokens';\nimport { TokenInJSON, Tokens } from '../convertTokens';\nimport { getTokenTypeKey } from '../getTokenTypeKey';\nimport { getTokenValueKey } from '../getTokenValueKey';\n\nexport function isSingleBoxShadowToken(\n  token: SingleToken | any,\n  ignoreTokenFormat: boolean = false,\n): token is SingleBoxShadowToken {\n  if (typeof token !== 'object') return false;\n  const tokenTypeKey = getTokenTypeKey(ignoreTokenFormat);\n  const tokenValueKey = getTokenValueKey(ignoreTokenFormat);\n  return (\n    token[tokenTypeKey] === TokenTypes.BOX_SHADOW\n    && (typeof token[tokenValueKey] === 'string'\n      || Array.isArray(token[tokenValueKey])\n      || (typeof token[tokenValueKey] === 'object' && !(tokenValueKey in token[tokenValueKey])))\n  );\n}\n\nexport function isSingleBoxShadowTokenInJSON(token: TokenInJSON | Tokens): token is SingleBoxShadowTokenInJSON {\n  if (typeof token !== 'object') return false;\n  return (\n    token[TokenFormat.tokenTypeKey] === TokenTypes.BOX_SHADOW\n    && (typeof token[TokenFormat.tokenValueKey] === 'string'\n      || Array.isArray(token[TokenFormat.tokenValueKey])\n      || (typeof token[TokenFormat.tokenValueKey] === 'object'\n        && !(TokenFormat.tokenValueKey in token[TokenFormat.tokenValueKey])))\n  );\n}\n","import { BoxShadowTypes } from '@/constants/BoxShadowTypes';\nimport type { MapValuesToTokensResult } from '@/types';\nimport type { SingleBoxShadowToken } from '@/types/tokens';\nimport type { TokenBoxshadowValue } from '@/types/values';\n\nexport function isSingleBoxShadowValue(value: MapValuesToTokensResult[string]): value is SingleBoxShadowToken['value'] {\n  return Boolean(\n    value\n    && (\n      typeof value === 'string'\n      || ((Array.isArray(value) ? value : [value]) as (\n        (TokenBoxshadowValue | Extract<MapValuesToTokensResult[string], { property: string }[]>[number])[]\n      )).every((v) => (\n        v && typeof v === 'object'\n        && ('type' in v && 'color' in v)\n        && (\n          v.type === BoxShadowTypes.DROP_SHADOW\n          || v.type === BoxShadowTypes.INNER_SHADOW\n        )\n      ))\n    ),\n  );\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { TokenFormat } from '@/plugin/TokenFormatStoreClass';\nimport { SingleCompositionToken, SingleToken } from '@/types/tokens';\nimport { TokenInJSON, Tokens } from '../convertTokens';\nimport { getTokenTypeKey } from '../getTokenTypeKey';\nimport { getTokenValueKey } from '../getTokenValueKey';\n\nexport function isSingleCompositionToken(\n  token: SingleToken | any,\n  ignoreTokenFormat: boolean = false,\n): token is SingleCompositionToken {\n  if (typeof token !== 'object') return false;\n  const tokenTypeKey = getTokenTypeKey(ignoreTokenFormat);\n  const tokenValueKey = getTokenValueKey(ignoreTokenFormat);\n  return (\n    token[tokenTypeKey] === TokenTypes.COMPOSITION\n    && (typeof token[tokenValueKey] === 'string'\n      || (typeof token[tokenValueKey] === 'object' && !(tokenValueKey in token[tokenValueKey])))\n  );\n}\n\nexport function isSingleCompositionTokenInJSON(token: TokenInJSON | Tokens): token is SingleCompositionToken {\n  if (typeof token !== 'object') return false;\n  return (\n    token[TokenFormat.tokenTypeKey] === TokenTypes.COMPOSITION\n    && (typeof token[TokenFormat.tokenValueKey] === 'string'\n      || (typeof token[TokenFormat.tokenValueKey] === 'object'\n        && !(TokenFormat.tokenValueKey in token[TokenFormat.tokenValueKey])))\n  );\n}\n","import { SingleToken } from '@/types/tokens';\n\nexport function isSingleToken(token: SingleToken | any): token is SingleToken {\n  return !!(\n    token\n    && typeof token === 'object'\n    && 'value' in token\n    && 'name' in token\n  );\n}\n","import { TokenFormat } from '@/plugin/TokenFormatStoreClass';\nimport { TokenInJSON, Tokens } from '../convertTokens';\n\nexport function isSingleTokenInJSON(token: TokenInJSON | Tokens): token is TokenInJSON {\n  return !!(\n    token\n    && typeof token === 'object'\n    && TokenFormat.tokenValueKey in token\n    && (\n      typeof token[TokenFormat.tokenValueKey] !== 'undefined'\n      && token[TokenFormat.tokenValueKey] !== null\n      && !(typeof token[TokenFormat.tokenValueKey] === 'object' && (token && TokenFormat.tokenValueKey in token[TokenFormat.tokenValueKey]))\n    )\n  );\n}\n","import { TokenFormat } from '@/plugin/TokenFormatStoreClass';\nimport { SingleToken } from '@/types/tokens';\n\nexport type SingleTokenValueObject = Pick<SingleToken, 'value'>;\n\nexport function isSingleTokenValueObject(token: SingleTokenValueObject | any): token is SingleTokenValueObject {\n  return !!(\n    token\n    && typeof token === 'object'\n    && TokenFormat.tokenValueKey in token\n    && (\n      typeof token[TokenFormat.tokenValueKey] !== 'undefined'\n      && token[TokenFormat.tokenValueKey] !== null\n      && !(typeof token[TokenFormat.tokenValueKey] === 'object' && (token && TokenFormat.tokenValueKey in token[TokenFormat.tokenValueKey]))\n    )\n  );\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { TokenFormat } from '@/plugin/TokenFormatStoreClass';\nimport { SingleTypographyToken, SingleTypographyTokenInJSON, SingleToken } from '@/types/tokens';\nimport { TokenInJSON, Tokens } from '../convertTokens';\nimport { getTokenTypeKey } from '../getTokenTypeKey';\nimport { getTokenValueKey } from '../getTokenValueKey';\n\nexport function isSingleTypographyToken(\n  token: SingleToken | any,\n  ignoreTokenFormat: boolean = false,\n): token is SingleTypographyToken {\n  if (typeof token !== 'object') return false;\n  const tokenTypeKey = getTokenTypeKey(ignoreTokenFormat);\n  const tokenValueKey = getTokenValueKey(ignoreTokenFormat);\n  return (\n    token[tokenTypeKey] === TokenTypes.TYPOGRAPHY\n    && (typeof token[tokenValueKey] === 'string'\n      || (typeof token[tokenValueKey] === 'object' && !(tokenValueKey in token[tokenValueKey])))\n  );\n}\n\nexport function isSingleTypographyTokenInJSON(token: TokenInJSON | Tokens): token is SingleTypographyTokenInJSON {\n  if (typeof token !== 'object') return false;\n  return (\n    token[TokenFormat.tokenTypeKey] === TokenTypes.TYPOGRAPHY\n    && (typeof token[TokenFormat.tokenValueKey] === 'string'\n      || (typeof token[TokenFormat.tokenValueKey] === 'object'\n        && !(TokenFormat.tokenValueKey in token[TokenFormat.tokenValueKey])))\n  );\n}\n","import type { MapValuesToTokensResult } from '@/types';\nimport type { SingleTypographyToken } from '@/types/tokens';\nimport type { TokenTypographyValue } from '@/types/values';\n\nexport function isSingleTypographyValue(value: MapValuesToTokensResult[string]): value is SingleTypographyToken['value'] {\n  return Boolean(\n    value\n    && (\n      typeof value === 'string'\n      || ((Array.isArray(value) ? value : [value]) as (\n        (TokenTypographyValue | Extract<MapValuesToTokensResult[string], { property: string }[]>[number])[]\n      )).every((v) => (\n        v && typeof v === 'object'\n        && (\n          'fontFamily' in v\n          || 'fontWeight' in v\n          || 'fontSize' in v\n          || 'lineHeight' in v\n          || 'letterSpacing' in v\n          || 'paragraphSpacing' in v\n          || 'paragraphIndent' in v\n          || 'textCase' in v\n          || 'textDecoration' in v\n        )\n      ))\n    ),\n  );\n}\n","import { TokenFormat } from '@/plugin/TokenFormatStoreClass';\nimport { TokenInJSON, Tokens } from '../convertTokens';\nimport { TokenTypes } from '@/constants/TokenTypes';\n\nexport type TokenGroupInJSON = {\n  [key: string]: TokenInJSON | TokenGroupInJSON;\n} & (\n  | {\n    type?: TokenTypes;\n  }\n  | {\n    $type?: TokenTypes;\n  }\n);\n\nexport function isTokenGroupWithType(token: Tokens): token is TokenGroupInJSON {\n  return !!(\n    token\n    && typeof token === 'object'\n    // There is no value key defined (which means it's a group) / or there is a value key defined and it's content is an object containing a value key (only relevant for the old format)\n    && (!(TokenFormat.tokenValueKey in token) || (TokenFormat.tokenValueKey in token && typeof token[TokenFormat.tokenValueKey] === 'object' && TokenFormat.tokenValueKey in token[TokenFormat.tokenValueKey]!))\n    && TokenFormat.tokenTypeKey in token\n    && typeof token[TokenFormat.tokenTypeKey] === 'string'\n  );\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\n\nexport function isTokenType(input: string | TokenTypes): input is TokenTypes {\n  return Object.values<string>(TokenTypes).includes(input);\n}\n","import { Parser } from 'expr-eval';\nimport calcAstParser from 'postcss-calc-ast-parser';\nimport { Root } from 'postcss-calc-ast-parser/dist/types/ast';\n\nconst parser = new Parser();\n\n/**\n * Clamps the value of x between min and max\n * @param x\n * @param min\n * @param max\n * @returns\n */\nparser.functions.clamped = (x: number, min: number, max: number): number => Math.max(Math.min(x, max), min);\n\n/**\n * One dimensional linear interpolation\n * @param x Normalized value between 0 and 1\n * @param min\n * @param max\n * @returns\n */\nparser.functions.lerp = (x: number, start: number, end: number): number => start + (end - start) * x;\n\n/**\n * Returns a normalized value between 0 - 1.\n * @param x\n * @param start\n * @param end\n * @returns\n */\nparser.functions.norm = (x: number, start: number, end: number): number => (x - start) / (end - start);\n\n/**\n * Creates a one dimensional cubicBezier\n * @remarks We have to do a significant overhaul to the system to support multidimensional functions. Seems like expr-eval can support neither array or property accessors\n * @param x1\n * @param x2\n * @returns\n */\nparser.functions.cubicBezier1D = (x1: number, x2: number) => {\n  const xx = [0, x1, x2, 1];\n\n  return (t: number) => {\n    const coeffs = [(1 - t) ** 3, 3 * (1 - t) ** 2 * t, 3 * (1 - t) * t ** 2, t ** 3];\n    const x = coeffs.reduce((acc, c, i) => acc + c * xx[i], 0);\n    return x;\n  };\n};\n\n// eslint-disable-next-line\nparser.functions.sample = (func: Function, ...args: any[]) => {\n  return func(...args);\n};\n\nexport function checkAndEvaluateMath(expr: string) {\n  let calcParsed: Root;\n\n  try {\n    calcParsed = calcAstParser.parse(expr);\n  } catch (ex) {\n    return expr;\n  }\n\n  const calcReduced = calcAstParser.reduceExpression(calcParsed);\n\n  let unitlessExpr = expr;\n  let unit;\n\n  if (calcReduced && calcReduced.type !== 'Number') {\n    unitlessExpr = expr.replace(new RegExp(calcReduced.unit, 'ig'), '');\n    unit = calcReduced.unit;\n  }\n\n  let evaluated: number;\n\n  try {\n    evaluated = parser.evaluate(`${unitlessExpr}`);\n  } catch (ex) {\n    return expr;\n  }\n  try {\n    return unit ? `${evaluated}${unit}` : Number.parseFloat(evaluated.toFixed(3));\n  } catch (ex) {\n    return expr;\n  }\n}\n","export * from './checkAndEvaluateMath';\n","import Color from 'colorjs.io';\nimport { ColorModifierTypes } from '@/constants/ColorModifierTypes';\nimport { ColorModifier } from '@/types/Modifier';\nimport { transparentize } from './color/transparentize';\nimport { mix } from './color/mix';\nimport { darken } from './color/darken';\nimport { lighten } from './color/lighten';\n\nexport function modifyColor(baseColor: string, modifier: ColorModifier) {\n  const color = new Color(baseColor);\n  let returnedColor = color;\n  try {\n    switch (modifier.type) {\n      case ColorModifierTypes.LIGHTEN:\n        returnedColor = lighten(color, modifier.space, Number(modifier.value)) as Color;\n        break;\n      case ColorModifierTypes.DARKEN:\n        returnedColor = darken(color, modifier.space, Number(modifier.value)) as Color;\n        break;\n      case ColorModifierTypes.MIX:\n        returnedColor = mix(color, modifier.space, Number(modifier.value), new Color(modifier.color));\n        break;\n      case ColorModifierTypes.ALPHA: {\n        returnedColor = transparentize(color, Number(modifier.value));\n        break;\n      }\n      default:\n        returnedColor = color;\n        break;\n    }\n    returnedColor = returnedColor.to(modifier.space);\n    return returnedColor.toString({ inGamut: true, precision: 3 });\n  } catch (e) {\n    return baseColor;\n  }\n}\n","import { TokenTypes } from '@/constants/TokenTypes';\nimport { SetTokenDataPayload } from '@/types/payloads';\nimport { AnyTokenList, SingleToken, TokenStore } from '@/types/tokens';\nimport convertToTokenArray from './convertTokens';\nimport { detectFormat } from './detectFormat';\n\nexport default function parseTokenValues(tokens: SetTokenDataPayload['values']): TokenStore['values'] {\n  // If we receive an array of tokens, move them all to the global set\n  if (Array.isArray(tokens)) {\n    return {\n      global: tokens,\n    };\n  }\n\n  // For a regular token-schema go through each and convert their values to a token array\n  // reducing them down to a entries list which can be picked up using Object.fromEntries\n  type TokenEntry = [string, AnyTokenList | Record<string, Partial<Record<TokenTypes, Record<string, SingleToken<false>>>>>];\n  const reducedTokens = Object.entries(tokens).reduce<[string, AnyTokenList][]>((prev, group: TokenEntry) => {\n    const parsedGroup = group[1];\n\n    if (Array.isArray(parsedGroup)) {\n      prev.push([group[0], parsedGroup]);\n      return prev;\n    }\n\n    if (typeof parsedGroup === 'object') {\n      detectFormat(parsedGroup, true);\n\n      const convertedToArray = convertToTokenArray({ tokens: parsedGroup });\n      prev.push([group[0], convertedToArray]);\n      return prev;\n    }\n\n    return prev;\n  }, []);\n\n  return Object.fromEntries(reducedTokens);\n}\n","import { TokenSetStatus } from '@/constants/TokenSetStatus';\nimport { UsedTokenSetsMap } from '@/types';\n\n// Helper function to sort token sets based on their status in the configuration. Basically, ENABLED and SOURCE sets are treated equally and come before DISABLED.\nexport function sortSets(a: string, b: string, config: UsedTokenSetsMap) {\n  // Get the status of each set, defaulting to DISABLED if not found in config\n  const statusA = config[a] || TokenSetStatus.DISABLED;\n  const statusB = config[b] || TokenSetStatus.DISABLED;\n\n  // If both sets have the same status, maintain their original order\n  if (statusA === statusB) return 0;\n\n  // DISABLED sets should come before ENABLED and SOURCE, which are treated equally\n  if (statusA === TokenSetStatus.DISABLED && (statusB === TokenSetStatus.ENABLED || statusB === TokenSetStatus.SOURCE)) return -1;\n  if ((statusA === TokenSetStatus.ENABLED || statusA === TokenSetStatus.SOURCE) && statusB === TokenSetStatus.DISABLED) return 1;\n\n  // If we reach here, it means both are ENABLED or SOURCE, or both are DISABLED\n  return 0;\n}\n","import { appendTypeToToken } from '@/app/components/createTokenObj';\nimport { SingleToken } from '@/types/tokens';\nimport { ThemeObject, UsedTokenSetsMap } from '@/types';\nimport { TokenSetStatus } from '@/constants/TokenSetStatus';\nimport { getTokenSetsOrder } from './getTokenSetsOrder';\n\nexport type ResolveTokenValuesResult = SingleToken<\ntrue,\n{\n  failedToResolve?: boolean;\n}\n>;\n\nexport function getOverallConfig(themes: ThemeObject[], selectedThemes: string[]) {\n  return selectedThemes.reduce((acc, themeId) => {\n    const currentTheme = themes.find((theme) => theme.id === themeId);\n    if (!currentTheme) return acc;\n\n    Object.entries(currentTheme.selectedTokenSets).forEach(([tokenSet, status]) => {\n      // If the set is enabled, set it. Meaning, it should always win.\n      if (status === TokenSetStatus.ENABLED) {\n        acc[tokenSet] = status;\n        // If the set is source, only set it to source if it wasnt set to enabled.\n      } else if (status === TokenSetStatus.SOURCE && acc[tokenSet] !== TokenSetStatus.ENABLED) {\n        acc[tokenSet] = status;\n      }\n    });\n    return acc;\n  }, {} as Record<string, TokenSetStatus>);\n}\n\nexport function getEnabledTokenSets(usedSets: UsedTokenSetsMap = {}) {\n  return Object.keys(usedSets)\n    .filter((key) => usedSets[key] === TokenSetStatus.ENABLED)\n    .map((tokenSet) => tokenSet);\n}\n\nexport function mergeTokenGroups(\n  tokens: Record<string, SingleToken[]>,\n  usedSets: UsedTokenSetsMap = {},\n  overallConfig: UsedTokenSetsMap = {},\n  activeTokenSet?: string,\n): SingleToken[] {\n  const { tokenSetsOrder, usedSetsList, overallSets } = getTokenSetsOrder(\n    tokens,\n    usedSets,\n    overallConfig,\n    activeTokenSet,\n  );\n\n  // Helper to determine if a token should be merged. We only merge object tokens if the current set is enabled (to avoid accidental merges)\n  const shouldMerge = (currentSet: string, existingToken: SingleToken) => usedSetsList.includes(currentSet)\n    && existingToken.internal__Parent\n    && !overallSets.includes(existingToken.internal__Parent);\n\n  return tokenSetsOrder.reduce((mergedTokens, setName) => {\n    const setTokens = tokens[setName] || [];\n    setTokens.forEach((token) => {\n      const existingIndex = mergedTokens.findIndex((t) => t.name === token.name);\n      const existingToken = mergedTokens[existingIndex];\n      const newToken = {\n        ...appendTypeToToken(token),\n        internal__Parent: setName,\n      } as SingleToken;\n\n      if (existingIndex === -1) {\n        // If the token does not exist yet, add it.\n        mergedTokens.push(newToken);\n      } else if (\n        shouldMerge(setName, existingToken)\n        && existingIndex > -1\n        && typeof existingToken.value === 'object'\n        && typeof newToken.value === 'object'\n        && !Array.isArray(existingToken.value)\n        && !Array.isArray(newToken.value)\n      ) {\n        // If the token should be merged, and is an object - and not an array, merge them (e.g. composition, typography)\n        mergedTokens.splice(existingIndex, 1, {\n          ...newToken,\n          value: {\n            ...existingToken.value,\n            ...newToken.value,\n          },\n        } as SingleToken);\n      } else {\n        // In all other cases, just replace.\n        mergedTokens[existingIndex] = newToken;\n      }\n    });\n    return mergedTokens;\n  }, [] as SingleToken[]);\n}\n","import { SetTokenDataPayload } from '@/types/payloads';\nimport convertTokensObjectToResolved from './convertTokensObjectToResolved';\nimport { TransformerOptions } from './types';\n\ntype Input = SetTokenDataPayload['values'];\n\nfunction transform(input: Input, sets: string[], excludes: string[], options: TransformerOptions) {\n  return convertTokensObjectToResolved(input, sets, excludes, options);\n}\n\nexport default transform;\n","/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isPlain = require('is-plain-object');\n\nfunction set(target, path, value, options) {\n  if (!isObject(target)) {\n    return target;\n  }\n\n  let opts = options || {};\n  const isArray = Array.isArray(path);\n  if (!isArray && typeof path !== 'string') {\n    return target;\n  }\n\n  let merge = opts.merge;\n  if (merge && typeof merge !== 'function') {\n    merge = Object.assign;\n  }\n\n  const keys = (isArray ? path : split(path, opts)).filter(isValidKey);\n  const len = keys.length;\n  const orig = target;\n\n  if (!options && keys.length === 1) {\n    result(target, keys[0], value, merge);\n    return target;\n  }\n\n  for (let i = 0; i < len; i++) {\n    let prop = keys[i];\n\n    if (!isObject(target[prop])) {\n      target[prop] = {};\n    }\n\n    if (i === len - 1) {\n      result(target, prop, value, merge);\n      break;\n    }\n\n    target = target[prop];\n  }\n\n  return orig;\n}\n\nfunction result(target, path, value, merge) {\n  if (merge && isPlain(target[path]) && isPlain(value)) {\n    target[path] = merge({}, target[path], value);\n  } else {\n    target[path] = value;\n  }\n}\n\nfunction split(path, options) {\n  const id = createKey(path, options);\n  if (set.memo[id]) return set.memo[id];\n\n  const char = (options && options.separator) ? options.separator : '.';\n  let keys = [];\n  let res = [];\n\n  if (options && typeof options.split === 'function') {\n    keys = options.split(path);\n  } else {\n    keys = path.split(char);\n  }\n\n  for (let i = 0; i < keys.length; i++) {\n    let prop = keys[i];\n    while (prop && prop.slice(-1) === '\\\\' && keys[i + 1] != null) {\n      prop = prop.slice(0, -1) + char + keys[++i];\n    }\n    res.push(prop);\n  }\n  set.memo[id] = res;\n  return res;\n}\n\nfunction createKey(pattern, options) {\n  let id = pattern;\n  if (typeof options === 'undefined') {\n    return id + '';\n  }\n  const keys = Object.keys(options);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    id += ';' + key + '=' + String(options[key]);\n  }\n  return id;\n}\n\nfunction isValidKey(key) {\n  if (typeof key !== 'string' && typeof key !== 'number') {\n    key = String(key);\n  }\n\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}\n\nfunction isObject(val) {\n  return val !== null && (typeof val === 'object' || typeof val === 'function');\n}\n\nset.memo = {};\nmodule.exports = set;\n","/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low, high, value) {\n  return Math.min(Math.max(low, value), high);\n}\n\nclass ColorError extends Error {\n  constructor(color) {\n    super(`Failed to parse color: \"${color}\"`);\n  }\n}\nvar ColorError$1 = ColorError;\n\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\nfunction parseToRgba(color) {\n  if (typeof color !== 'string') throw new ColorError$1(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n  let normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n  const reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n  if (reducedHexMatch) {\n    const arr = Array.from(reducedHexMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(r(x, 2), 16)), parseInt(r(arr[3] || 'f', 2), 16) / 255];\n  }\n  const hexMatch = hexRegex.exec(normalizedColor);\n  if (hexMatch) {\n    const arr = Array.from(hexMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(x, 16)), parseInt(arr[3] || 'ff', 16) / 255];\n  }\n  const rgbaMatch = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatch) {\n    const arr = Array.from(rgbaMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(x, 10)), parseFloat(arr[3] || '1')];\n  }\n  const hslaMatch = hslaRegex.exec(normalizedColor);\n  if (hslaMatch) {\n    const [h, s, l, a] = Array.from(hslaMatch).slice(1).map(parseFloat);\n    if (guard(0, 100, s) !== s) throw new ColorError$1(color);\n    if (guard(0, 100, l) !== l) throw new ColorError$1(color);\n    return [...hslToRgb(h, s, l), Number.isNaN(a) ? 1 : a];\n  }\n  throw new ColorError$1(color);\n}\nfunction hash(str) {\n  let hash = 5381;\n  let i = str.length;\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return (hash >>> 0) % 2341;\n}\nconst colorToInt = x => parseInt(x.replace(/_/g, ''), 36);\nconst compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'.split(' ').reduce((acc, next) => {\n  const key = colorToInt(next.substring(0, 3));\n  const hex = colorToInt(next.substring(3)).toString(16);\n\n  // NOTE: padStart could be used here but it breaks Node 6 compat\n  // https://github.com/ricokahler/color2k/issues/351\n  let prefix = '';\n  for (let i = 0; i < 6 - hex.length; i++) {\n    prefix += '0';\n  }\n  acc[key] = `${prefix}${hex}`;\n  return acc;\n}, {});\n\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\nfunction nameToHex(color) {\n  const normalizedColorName = color.toLowerCase().trim();\n  const result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError$1(color);\n  return `#${result}`;\n}\nconst r = (str, amount) => Array.from(Array(amount)).map(() => str).join('');\nconst reducedHexRegex = new RegExp(`^#${r('([a-f0-9])', 3)}([a-f0-9])?$`, 'i');\nconst hexRegex = new RegExp(`^#${r('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i');\nconst rgbaRegex = new RegExp(`^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*${r(',\\\\s*(\\\\d+)\\\\s*', 2)}(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$`, 'i');\nconst hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nconst namedColorRegex = /^[a-z]+$/i;\nconst roundColor = color => {\n  return Math.round(color * 255);\n};\nconst hslToRgb = (hue, saturation, lightness) => {\n  let l = lightness / 100;\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor);\n  }\n\n  // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n  const huePrime = (hue % 360 + 360) % 360 / 60;\n  const chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  const secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n  const lightnessModification = l - chroma / 2;\n  const finalRed = red + lightnessModification;\n  const finalGreen = green + lightnessModification;\n  const finalBlue = blue + lightnessModification;\n  return [finalRed, finalGreen, finalBlue].map(roundColor);\n};\n\n// taken from:\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\nfunction parseToHsla(color) {\n  const [red, green, blue, alpha] = parseToRgba(color).map((value, index) =>\n  // 3rd index is alpha channel which is already normalized\n  index === 3 ? value : value / 255);\n  const max = Math.max(red, green, blue);\n  const min = Math.min(red, green, blue);\n  const lightness = (max + min) / 2;\n\n  // achromatic\n  if (max === min) return [0, 0, lightness, alpha];\n  const delta = max - min;\n  const saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n  const hue = 60 * (red === max ? (green - blue) / delta + (green < blue ? 6 : 0) : green === max ? (blue - red) / delta + 2 : (red - green) / delta + 4);\n  return [hue, saturation, lightness, alpha];\n}\n\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction hsla(hue, saturation, lightness, alpha) {\n  return `hsla(${(hue % 360).toFixed()}, ${guard(0, 100, saturation * 100).toFixed()}%, ${guard(0, 100, lightness * 100).toFixed()}%, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;\n}\n\n/**\n * Adjusts the current hue of the color by the given degrees. Wraps around when\n * over 360.\n *\n * @param color input color\n * @param degrees degrees to adjust the input color, accepts degree integers\n * (0 - 360) and wraps around on overflow\n */\nfunction adjustHue(color, degrees) {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h + degrees, s, l, a);\n}\n\n/**\n * Darkens using lightness. This is equivalent to subtracting the lightness\n * from the L in HSL.\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction darken(color, amount) {\n  const [hue, saturation, lightness, alpha] = parseToHsla(color);\n  return hsla(hue, saturation, lightness - amount, alpha);\n}\n\n/**\n * Desaturates the input color by the given amount via subtracting from the `s`\n * in `hsla`.\n *\n * @param amount The amount to desaturate, given as a decimal between 0 and 1\n */\nfunction desaturate(color, amount) {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h, s - amount, l, a);\n}\n\n// taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getLuminance.js\n\n/**\n * Returns a number (float) representing the luminance of a color.\n */\nfunction getLuminance(color) {\n  if (color === 'transparent') return 0;\n  function f(x) {\n    const channel = x / 255;\n    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }\n  const [r, g, b] = parseToRgba(color);\n  return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n}\n\n// taken from:\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n */\nfunction getContrast(color1, color2) {\n  const luminance1 = getLuminance(color1);\n  const luminance2 = getLuminance(color2);\n  return luminance1 > luminance2 ? (luminance1 + 0.05) / (luminance2 + 0.05) : (luminance2 + 0.05) / (luminance1 + 0.05);\n}\n\n/**\n * Takes in rgba parts and returns an rgba string\n *\n * @param red The amount of red in the red channel, given in a number between 0 and 255 inclusive\n * @param green The amount of green in the red channel, given in a number between 0 and 255 inclusive\n * @param blue The amount of blue in the red channel, given in a number between 0 and 255 inclusive\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction rgba(red, green, blue, alpha) {\n  return `rgba(${guard(0, 255, red).toFixed()}, ${guard(0, 255, green).toFixed()}, ${guard(0, 255, blue).toFixed()}, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;\n}\n\n/**\n * Mixes two colors together. Taken from sass's implementation.\n */\nfunction mix(color1, color2, weight) {\n  const normalize = (n, index) =>\n  // 3rd index is alpha channel which is already normalized\n  index === 3 ? n : n / 255;\n  const [r1, g1, b1, a1] = parseToRgba(color1).map(normalize);\n  const [r2, g2, b2, a2] = parseToRgba(color2).map(normalize);\n\n  // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n  const alphaDelta = a2 - a1;\n  const normalizedWeight = weight * 2 - 1;\n  const combinedWeight = normalizedWeight * alphaDelta === -1 ? normalizedWeight : normalizedWeight + alphaDelta / (1 + normalizedWeight * alphaDelta);\n  const weight2 = (combinedWeight + 1) / 2;\n  const weight1 = 1 - weight2;\n  const r = (r1 * weight1 + r2 * weight2) * 255;\n  const g = (g1 * weight1 + g2 * weight2) * 255;\n  const b = (b1 * weight1 + b2 * weight2) * 255;\n  const a = a2 * weight + a1 * (1 - weight);\n  return rgba(r, g, b, a);\n}\n\n/**\n * Given a series colors, this function will return a `scale(x)` function that\n * accepts a percentage as a decimal between 0 and 1 and returns the color at\n * that percentage in the scale.\n *\n * ```js\n * const scale = getScale('red', 'yellow', 'green');\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(0.5)); // rgba(255, 255, 0, 1)\n * console.log(scale(1)); // rgba(0, 128, 0, 1)\n * ```\n *\n * If you'd like to limit the domain and range like chroma-js, we recommend\n * wrapping scale again.\n *\n * ```js\n * const _scale = getScale('red', 'yellow', 'green');\n * const scale = x => _scale(x / 100);\n *\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(50)); // rgba(255, 255, 0, 1)\n * console.log(scale(100)); // rgba(0, 128, 0, 1)\n * ```\n */\nfunction getScale(...colors) {\n  return n => {\n    const lastIndex = colors.length - 1;\n    const lowIndex = guard(0, lastIndex, Math.floor(n * lastIndex));\n    const highIndex = guard(0, lastIndex, Math.ceil(n * lastIndex));\n    const color1 = colors[lowIndex];\n    const color2 = colors[highIndex];\n    const unit = 1 / lastIndex;\n    const weight = (n - unit * lowIndex) / unit;\n    return mix(color1, color2, weight);\n  };\n}\n\nconst guidelines = {\n  decorative: 1.5,\n  readable: 3,\n  aa: 4.5,\n  aaa: 7\n};\n\n/**\n * Returns whether or not a color has bad contrast against a background\n * according to a given standard.\n */\nfunction hasBadContrast(color, standard = 'aa', background = '#fff') {\n  return getContrast(color, background) < guidelines[standard];\n}\n\n/**\n * Lightens a color by a given amount. This is equivalent to\n * `darken(color, -amount)`\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction lighten(color, amount) {\n  return darken(color, -amount);\n}\n\n/**\n * Takes in a color and makes it more transparent by convert to `rgba` and\n * decreasing the amount in the alpha channel.\n *\n * @param amount The amount to increase the transparency by, given as a decimal between 0 and 1\n */\nfunction transparentize(color, amount) {\n  const [r, g, b, a] = parseToRgba(color);\n  return rgba(r, g, b, a - amount);\n}\n\n/**\n * Takes a color and un-transparentizes it. Equivalent to\n * `transparentize(color, -amount)`\n *\n * @param amount The amount to increase the opacity by, given as a decimal between 0 and 1\n */\nfunction opacify(color, amount) {\n  return transparentize(color, -amount);\n}\n\n/**\n * An alternative function to `readableColor`. Returns whether or not the \n * readable color (i.e. the color to be place on top the input color) should be\n * black.\n */\nfunction readableColorIsBlack(color) {\n  return getLuminance(color) > 0.179;\n}\n\n/**\n * Returns black or white for best contrast depending on the luminosity of the\n * given color.\n */\nfunction readableColor(color) {\n  return readableColorIsBlack(color) ? '#000' : '#fff';\n}\n\n/**\n * Saturates a color by converting it to `hsl` and increasing the saturation\n * amount. Equivalent to `desaturate(color, -amount)`\n * \n * @param color Input color\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction saturate(color, amount) {\n  return desaturate(color, -amount);\n}\n\n/**\n * Takes in any color and returns it as a hex code.\n */\nfunction toHex(color) {\n  const [r, g, b, a] = parseToRgba(color);\n  let hex = x => {\n    const h = guard(0, 255, x).toString(16);\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    return h.length === 1 ? `0${h}` : h;\n  };\n  return `#${hex(r)}${hex(g)}${hex(b)}${a < 1 ? hex(Math.round(a * 255)) : ''}`;\n}\n\n/**\n * Takes in any color and returns it as an rgba string.\n */\nfunction toRgba(color) {\n  return rgba(...parseToRgba(color));\n}\n\n/**\n * Takes in any color and returns it as an hsla string.\n */\nfunction toHsla(color) {\n  return hsla(...parseToHsla(color));\n}\n\nexport { ColorError$1 as ColorError, adjustHue, darken, desaturate, getContrast, getLuminance, getScale, guard, hasBadContrast, hsla, lighten, mix, opacify, parseToHsla, parseToRgba, readableColor, readableColorIsBlack, rgba, saturate, toHex, toHsla, toRgba, transparentize };\n//# sourceMappingURL=index.exports.import.es.mjs.map\n","var INUMBER = 'INUMBER';\nvar IOP1 = 'IOP1';\nvar IOP2 = 'IOP2';\nvar IOP3 = 'IOP3';\nvar IVAR = 'IVAR';\nvar IVARNAME = 'IVARNAME';\nvar IFUNCALL = 'IFUNCALL';\nvar IFUNDEF = 'IFUNDEF';\nvar IEXPR = 'IEXPR';\nvar IEXPREVAL = 'IEXPREVAL';\nvar IMEMBER = 'IMEMBER';\nvar IENDSTATEMENT = 'IENDSTATEMENT';\nvar IARRAY = 'IARRAY';\n\nfunction Instruction(type, value) {\n  this.type = type;\n  this.value = (value !== undefined && value !== null) ? value : 0;\n}\n\nInstruction.prototype.toString = function () {\n  switch (this.type) {\n    case INUMBER:\n    case IOP1:\n    case IOP2:\n    case IOP3:\n    case IVAR:\n    case IVARNAME:\n    case IENDSTATEMENT:\n      return this.value;\n    case IFUNCALL:\n      return 'CALL ' + this.value;\n    case IFUNDEF:\n      return 'DEF ' + this.value;\n    case IARRAY:\n      return 'ARRAY ' + this.value;\n    case IMEMBER:\n      return '.' + this.value;\n    default:\n      return 'Invalid Instruction';\n  }\n};\n\nfunction unaryInstruction(value) {\n  return new Instruction(IOP1, value);\n}\n\nfunction binaryInstruction(value) {\n  return new Instruction(IOP2, value);\n}\n\nfunction ternaryInstruction(value) {\n  return new Instruction(IOP3, value);\n}\n\nfunction simplify(tokens, unaryOps, binaryOps, ternaryOps, values) {\n  var nstack = [];\n  var newexpression = [];\n  var n1, n2, n3;\n  var f;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER || type === IVARNAME) {\n      if (Array.isArray(item.value)) {\n        nstack.push.apply(nstack, simplify(item.value.map(function (x) {\n          return new Instruction(INUMBER, x);\n        }).concat(new Instruction(IARRAY, item.value.length)), unaryOps, binaryOps, ternaryOps, values));\n      } else {\n        nstack.push(item);\n      }\n    } else if (type === IVAR && values.hasOwnProperty(item.value)) {\n      item = new Instruction(INUMBER, values[item.value]);\n      nstack.push(item);\n    } else if (type === IOP2 && nstack.length > 1) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = binaryOps[item.value];\n      item = new Instruction(INUMBER, f(n1.value, n2.value));\n      nstack.push(item);\n    } else if (type === IOP3 && nstack.length > 2) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === '?') {\n        nstack.push(n1.value ? n2.value : n3.value);\n      } else {\n        f = ternaryOps[item.value];\n        item = new Instruction(INUMBER, f(n1.value, n2.value, n3.value));\n        nstack.push(item);\n      }\n    } else if (type === IOP1 && nstack.length > 0) {\n      n1 = nstack.pop();\n      f = unaryOps[item.value];\n      item = new Instruction(INUMBER, f(n1.value));\n      nstack.push(item);\n    } else if (type === IEXPR) {\n      while (nstack.length > 0) {\n        newexpression.push(nstack.shift());\n      }\n      newexpression.push(new Instruction(IEXPR, simplify(item.value, unaryOps, binaryOps, ternaryOps, values)));\n    } else if (type === IMEMBER && nstack.length > 0) {\n      n1 = nstack.pop();\n      nstack.push(new Instruction(INUMBER, n1.value[item.value]));\n    } /* else if (type === IARRAY && nstack.length >= item.value) {\n      var length = item.value;\n      while (length-- > 0) {\n        newexpression.push(nstack.pop());\n      }\n      newexpression.push(new Instruction(IARRAY, item.value));\n    } */ else {\n      while (nstack.length > 0) {\n        newexpression.push(nstack.shift());\n      }\n      newexpression.push(item);\n    }\n  }\n  while (nstack.length > 0) {\n    newexpression.push(nstack.shift());\n  }\n  return newexpression;\n}\n\nfunction substitute(tokens, variable, expr) {\n  var newexpression = [];\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === IVAR && item.value === variable) {\n      for (var j = 0; j < expr.tokens.length; j++) {\n        var expritem = expr.tokens[j];\n        var replitem;\n        if (expritem.type === IOP1) {\n          replitem = unaryInstruction(expritem.value);\n        } else if (expritem.type === IOP2) {\n          replitem = binaryInstruction(expritem.value);\n        } else if (expritem.type === IOP3) {\n          replitem = ternaryInstruction(expritem.value);\n        } else {\n          replitem = new Instruction(expritem.type, expritem.value);\n        }\n        newexpression.push(replitem);\n      }\n    } else if (type === IEXPR) {\n      newexpression.push(new Instruction(IEXPR, substitute(item.value, variable, expr)));\n    } else {\n      newexpression.push(item);\n    }\n  }\n  return newexpression;\n}\n\nfunction evaluate(tokens, expr, values) {\n  var nstack = [];\n  var n1, n2, n3;\n  var f, args, argCount;\n\n  if (isExpressionEvaluator(tokens)) {\n    return resolveExpression(tokens, values);\n  }\n\n  var numTokens = tokens.length;\n\n  for (var i = 0; i < numTokens; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER || type === IVARNAME) {\n      nstack.push(item.value);\n    } else if (type === IOP2) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === 'and') {\n        nstack.push(n1 ? !!evaluate(n2, expr, values) : false);\n      } else if (item.value === 'or') {\n        nstack.push(n1 ? true : !!evaluate(n2, expr, values));\n      } else if (item.value === '=') {\n        f = expr.binaryOps[item.value];\n        nstack.push(f(n1, evaluate(n2, expr, values), values));\n      } else {\n        f = expr.binaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values)));\n      }\n    } else if (type === IOP3) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      if (item.value === '?') {\n        nstack.push(evaluate(n1 ? n2 : n3, expr, values));\n      } else {\n        f = expr.ternaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values), resolveExpression(n3, values)));\n      }\n    } else if (type === IVAR) {\n      if (item.value in expr.functions) {\n        nstack.push(expr.functions[item.value]);\n      } else if (item.value in expr.unaryOps && expr.parser.isOperatorEnabled(item.value)) {\n        nstack.push(expr.unaryOps[item.value]);\n      } else {\n        var v = values[item.value];\n        if (v !== undefined) {\n          nstack.push(v);\n        } else {\n          throw new Error('undefined variable: ' + item.value);\n        }\n      }\n    } else if (type === IOP1) {\n      n1 = nstack.pop();\n      f = expr.unaryOps[item.value];\n      nstack.push(f(resolveExpression(n1, values)));\n    } else if (type === IFUNCALL) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(resolveExpression(nstack.pop(), values));\n      }\n      f = nstack.pop();\n      if (f.apply && f.call) {\n        nstack.push(f.apply(undefined, args));\n      } else {\n        throw new Error(f + ' is not a function');\n      }\n    } else if (type === IFUNDEF) {\n      // Create closure to keep references to arguments and expression\n      nstack.push((function () {\n        var n2 = nstack.pop();\n        var args = [];\n        var argCount = item.value;\n        while (argCount-- > 0) {\n          args.unshift(nstack.pop());\n        }\n        var n1 = nstack.pop();\n        var f = function () {\n          var scope = Object.assign({}, values);\n          for (var i = 0, len = args.length; i < len; i++) {\n            scope[args[i]] = arguments[i];\n          }\n          return evaluate(n2, expr, scope);\n        };\n        // f.name = n1\n        Object.defineProperty(f, 'name', {\n          value: n1,\n          writable: false\n        });\n        values[n1] = f;\n        return f;\n      })());\n    } else if (type === IEXPR) {\n      nstack.push(createExpressionEvaluator(item, expr));\n    } else if (type === IEXPREVAL) {\n      nstack.push(item);\n    } else if (type === IMEMBER) {\n      n1 = nstack.pop();\n      nstack.push(n1[item.value]);\n    } else if (type === IENDSTATEMENT) {\n      nstack.pop();\n    } else if (type === IARRAY) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      nstack.push(args);\n    } else {\n      throw new Error('invalid Expression');\n    }\n  }\n  if (nstack.length > 1) {\n    throw new Error('invalid Expression (parity)');\n  }\n  // Explicitly return zero to avoid test issues caused by -0\n  return nstack[0] === 0 ? 0 : resolveExpression(nstack[0], values);\n}\n\nfunction createExpressionEvaluator(token, expr, values) {\n  if (isExpressionEvaluator(token)) return token;\n  return {\n    type: IEXPREVAL,\n    value: function (scope) {\n      return evaluate(token.value, expr, scope);\n    }\n  };\n}\n\nfunction isExpressionEvaluator(n) {\n  return n && n.type === IEXPREVAL;\n}\n\nfunction resolveExpression(n, values) {\n  return isExpressionEvaluator(n) ? n.value(values) : n;\n}\n\nfunction expressionToString(tokens, toJS) {\n  var nstack = [];\n  var n1, n2, n3;\n  var f, args, argCount;\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    var type = item.type;\n    if (type === INUMBER) {\n      if (typeof item.value === 'number' && item.value < 0) {\n        nstack.push('(' + item.value + ')');\n      } else if (Array.isArray(item.value)) {\n        nstack.push('[' + item.value.map(escapeValue).join(', ') + ']');\n      } else {\n        nstack.push(escapeValue(item.value));\n      }\n    } else if (type === IOP2) {\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = item.value;\n      if (toJS) {\n        if (f === '^') {\n          nstack.push('Math.pow(' + n1 + ', ' + n2 + ')');\n        } else if (f === 'and') {\n          nstack.push('(!!' + n1 + ' && !!' + n2 + ')');\n        } else if (f === 'or') {\n          nstack.push('(!!' + n1 + ' || !!' + n2 + ')');\n        } else if (f === '||') {\n          nstack.push('(function(a,b){ return Array.isArray(a) && Array.isArray(b) ? a.concat(b) : String(a) + String(b); }((' + n1 + '),(' + n2 + ')))');\n        } else if (f === '==') {\n          nstack.push('(' + n1 + ' === ' + n2 + ')');\n        } else if (f === '!=') {\n          nstack.push('(' + n1 + ' !== ' + n2 + ')');\n        } else if (f === '[') {\n          nstack.push(n1 + '[(' + n2 + ') | 0]');\n        } else {\n          nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n        }\n      } else {\n        if (f === '[') {\n          nstack.push(n1 + '[' + n2 + ']');\n        } else {\n          nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n        }\n      }\n    } else if (type === IOP3) {\n      n3 = nstack.pop();\n      n2 = nstack.pop();\n      n1 = nstack.pop();\n      f = item.value;\n      if (f === '?') {\n        nstack.push('(' + n1 + ' ? ' + n2 + ' : ' + n3 + ')');\n      } else {\n        throw new Error('invalid Expression');\n      }\n    } else if (type === IVAR || type === IVARNAME) {\n      nstack.push(item.value);\n    } else if (type === IOP1) {\n      n1 = nstack.pop();\n      f = item.value;\n      if (f === '-' || f === '+') {\n        nstack.push('(' + f + n1 + ')');\n      } else if (toJS) {\n        if (f === 'not') {\n          nstack.push('(' + '!' + n1 + ')');\n        } else if (f === '!') {\n          nstack.push('fac(' + n1 + ')');\n        } else {\n          nstack.push(f + '(' + n1 + ')');\n        }\n      } else if (f === '!') {\n        nstack.push('(' + n1 + '!)');\n      } else {\n        nstack.push('(' + f + ' ' + n1 + ')');\n      }\n    } else if (type === IFUNCALL) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      f = nstack.pop();\n      nstack.push(f + '(' + args.join(', ') + ')');\n    } else if (type === IFUNDEF) {\n      n2 = nstack.pop();\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      n1 = nstack.pop();\n      if (toJS) {\n        nstack.push('(' + n1 + ' = function(' + args.join(', ') + ') { return ' + n2 + ' })');\n      } else {\n        nstack.push('(' + n1 + '(' + args.join(', ') + ') = ' + n2 + ')');\n      }\n    } else if (type === IMEMBER) {\n      n1 = nstack.pop();\n      nstack.push(n1 + '.' + item.value);\n    } else if (type === IARRAY) {\n      argCount = item.value;\n      args = [];\n      while (argCount-- > 0) {\n        args.unshift(nstack.pop());\n      }\n      nstack.push('[' + args.join(', ') + ']');\n    } else if (type === IEXPR) {\n      nstack.push('(' + expressionToString(item.value, toJS) + ')');\n    } else if (type === IENDSTATEMENT) ; else {\n      throw new Error('invalid Expression');\n    }\n  }\n  if (nstack.length > 1) {\n    if (toJS) {\n      nstack = [ nstack.join(',') ];\n    } else {\n      nstack = [ nstack.join(';') ];\n    }\n  }\n  return String(nstack[0]);\n}\n\nfunction escapeValue(v) {\n  if (typeof v === 'string') {\n    return JSON.stringify(v).replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n  }\n  return v;\n}\n\nfunction contains(array, obj) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getSymbols(tokens, symbols, options) {\n  options = options || {};\n  var withMembers = !!options.withMembers;\n  var prevVar = null;\n\n  for (var i = 0; i < tokens.length; i++) {\n    var item = tokens[i];\n    if (item.type === IVAR || item.type === IVARNAME) {\n      if (!withMembers && !contains(symbols, item.value)) {\n        symbols.push(item.value);\n      } else if (prevVar !== null) {\n        if (!contains(symbols, prevVar)) {\n          symbols.push(prevVar);\n        }\n        prevVar = item.value;\n      } else {\n        prevVar = item.value;\n      }\n    } else if (item.type === IMEMBER && withMembers && prevVar !== null) {\n      prevVar += '.' + item.value;\n    } else if (item.type === IEXPR) {\n      getSymbols(item.value, symbols, options);\n    } else if (prevVar !== null) {\n      if (!contains(symbols, prevVar)) {\n        symbols.push(prevVar);\n      }\n      prevVar = null;\n    }\n  }\n\n  if (prevVar !== null && !contains(symbols, prevVar)) {\n    symbols.push(prevVar);\n  }\n}\n\nfunction Expression(tokens, parser) {\n  this.tokens = tokens;\n  this.parser = parser;\n  this.unaryOps = parser.unaryOps;\n  this.binaryOps = parser.binaryOps;\n  this.ternaryOps = parser.ternaryOps;\n  this.functions = parser.functions;\n}\n\nExpression.prototype.simplify = function (values) {\n  values = values || {};\n  return new Expression(simplify(this.tokens, this.unaryOps, this.binaryOps, this.ternaryOps, values), this.parser);\n};\n\nExpression.prototype.substitute = function (variable, expr) {\n  if (!(expr instanceof Expression)) {\n    expr = this.parser.parse(String(expr));\n  }\n\n  return new Expression(substitute(this.tokens, variable, expr), this.parser);\n};\n\nExpression.prototype.evaluate = function (values) {\n  values = values || {};\n  return evaluate(this.tokens, this, values);\n};\n\nExpression.prototype.toString = function () {\n  return expressionToString(this.tokens, false);\n};\n\nExpression.prototype.symbols = function (options) {\n  options = options || {};\n  var vars = [];\n  getSymbols(this.tokens, vars, options);\n  return vars;\n};\n\nExpression.prototype.variables = function (options) {\n  options = options || {};\n  var vars = [];\n  getSymbols(this.tokens, vars, options);\n  var functions = this.functions;\n  return vars.filter(function (name) {\n    return !(name in functions);\n  });\n};\n\nExpression.prototype.toJSFunction = function (param, variables) {\n  var expr = this;\n  var f = new Function(param, 'with(this.functions) with (this.ternaryOps) with (this.binaryOps) with (this.unaryOps) { return ' + expressionToString(this.simplify(variables).tokens, true) + '; }'); // eslint-disable-line no-new-func\n  return function () {\n    return f.apply(expr, arguments);\n  };\n};\n\nvar TEOF = 'TEOF';\nvar TOP = 'TOP';\nvar TNUMBER = 'TNUMBER';\nvar TSTRING = 'TSTRING';\nvar TPAREN = 'TPAREN';\nvar TBRACKET = 'TBRACKET';\nvar TCOMMA = 'TCOMMA';\nvar TNAME = 'TNAME';\nvar TSEMICOLON = 'TSEMICOLON';\n\nfunction Token(type, value, index) {\n  this.type = type;\n  this.value = value;\n  this.index = index;\n}\n\nToken.prototype.toString = function () {\n  return this.type + ': ' + this.value;\n};\n\nfunction TokenStream(parser, expression) {\n  this.pos = 0;\n  this.current = null;\n  this.unaryOps = parser.unaryOps;\n  this.binaryOps = parser.binaryOps;\n  this.ternaryOps = parser.ternaryOps;\n  this.consts = parser.consts;\n  this.expression = expression;\n  this.savedPosition = 0;\n  this.savedCurrent = null;\n  this.options = parser.options;\n  this.parser = parser;\n}\n\nTokenStream.prototype.newToken = function (type, value, pos) {\n  return new Token(type, value, pos != null ? pos : this.pos);\n};\n\nTokenStream.prototype.save = function () {\n  this.savedPosition = this.pos;\n  this.savedCurrent = this.current;\n};\n\nTokenStream.prototype.restore = function () {\n  this.pos = this.savedPosition;\n  this.current = this.savedCurrent;\n};\n\nTokenStream.prototype.next = function () {\n  if (this.pos >= this.expression.length) {\n    return this.newToken(TEOF, 'EOF');\n  }\n\n  if (this.isWhitespace() || this.isComment()) {\n    return this.next();\n  } else if (this.isRadixInteger() ||\n      this.isNumber() ||\n      this.isOperator() ||\n      this.isString() ||\n      this.isParen() ||\n      this.isBracket() ||\n      this.isComma() ||\n      this.isSemicolon() ||\n      this.isNamedOp() ||\n      this.isConst() ||\n      this.isName()) {\n    return this.current;\n  } else {\n    this.parseError('Unknown character \"' + this.expression.charAt(this.pos) + '\"');\n  }\n};\n\nTokenStream.prototype.isString = function () {\n  var r = false;\n  var startPos = this.pos;\n  var quote = this.expression.charAt(startPos);\n\n  if (quote === '\\'' || quote === '\"') {\n    var index = this.expression.indexOf(quote, startPos + 1);\n    while (index >= 0 && this.pos < this.expression.length) {\n      this.pos = index + 1;\n      if (this.expression.charAt(index - 1) !== '\\\\') {\n        var rawString = this.expression.substring(startPos + 1, index);\n        this.current = this.newToken(TSTRING, this.unescape(rawString), startPos);\n        r = true;\n        break;\n      }\n      index = this.expression.indexOf(quote, index + 1);\n    }\n  }\n  return r;\n};\n\nTokenStream.prototype.isParen = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === '(' || c === ')') {\n    this.current = this.newToken(TPAREN, c);\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isBracket = function () {\n  var c = this.expression.charAt(this.pos);\n  if ((c === '[' || c === ']') && this.isOperatorEnabled('[')) {\n    this.current = this.newToken(TBRACKET, c);\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isComma = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === ',') {\n    this.current = this.newToken(TCOMMA, ',');\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isSemicolon = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === ';') {\n    this.current = this.newToken(TSEMICOLON, ';');\n    this.pos++;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isConst = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos || (c !== '_' && c !== '.' && (c < '0' || c > '9'))) {\n        break;\n      }\n    }\n  }\n  if (i > startPos) {\n    var str = this.expression.substring(startPos, i);\n    if (str in this.consts) {\n      this.current = this.newToken(TNUMBER, this.consts[str]);\n      this.pos += str.length;\n      return true;\n    }\n  }\n  return false;\n};\n\nTokenStream.prototype.isNamedOp = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos || (c !== '_' && (c < '0' || c > '9'))) {\n        break;\n      }\n    }\n  }\n  if (i > startPos) {\n    var str = this.expression.substring(startPos, i);\n    if (this.isOperatorEnabled(str) && (str in this.binaryOps || str in this.unaryOps || str in this.ternaryOps)) {\n      this.current = this.newToken(TOP, str);\n      this.pos += str.length;\n      return true;\n    }\n  }\n  return false;\n};\n\nTokenStream.prototype.isName = function () {\n  var startPos = this.pos;\n  var i = startPos;\n  var hasLetter = false;\n  for (; i < this.expression.length; i++) {\n    var c = this.expression.charAt(i);\n    if (c.toUpperCase() === c.toLowerCase()) {\n      if (i === this.pos && (c === '$' || c === '_')) {\n        if (c === '_') {\n          hasLetter = true;\n        }\n        continue;\n      } else if (i === this.pos || !hasLetter || (c !== '_' && (c < '0' || c > '9'))) {\n        break;\n      }\n    } else {\n      hasLetter = true;\n    }\n  }\n  if (hasLetter) {\n    var str = this.expression.substring(startPos, i);\n    this.current = this.newToken(TNAME, str);\n    this.pos += str.length;\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isWhitespace = function () {\n  var r = false;\n  var c = this.expression.charAt(this.pos);\n  while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {\n    r = true;\n    this.pos++;\n    if (this.pos >= this.expression.length) {\n      break;\n    }\n    c = this.expression.charAt(this.pos);\n  }\n  return r;\n};\n\nvar codePointPattern = /^[0-9a-f]{4}$/i;\n\nTokenStream.prototype.unescape = function (v) {\n  var index = v.indexOf('\\\\');\n  if (index < 0) {\n    return v;\n  }\n\n  var buffer = v.substring(0, index);\n  while (index >= 0) {\n    var c = v.charAt(++index);\n    switch (c) {\n      case '\\'':\n        buffer += '\\'';\n        break;\n      case '\"':\n        buffer += '\"';\n        break;\n      case '\\\\':\n        buffer += '\\\\';\n        break;\n      case '/':\n        buffer += '/';\n        break;\n      case 'b':\n        buffer += '\\b';\n        break;\n      case 'f':\n        buffer += '\\f';\n        break;\n      case 'n':\n        buffer += '\\n';\n        break;\n      case 'r':\n        buffer += '\\r';\n        break;\n      case 't':\n        buffer += '\\t';\n        break;\n      case 'u':\n        // interpret the following 4 characters as the hex of the unicode code point\n        var codePoint = v.substring(index + 1, index + 5);\n        if (!codePointPattern.test(codePoint)) {\n          this.parseError('Illegal escape sequence: \\\\u' + codePoint);\n        }\n        buffer += String.fromCharCode(parseInt(codePoint, 16));\n        index += 4;\n        break;\n      default:\n        throw this.parseError('Illegal escape sequence: \"\\\\' + c + '\"');\n    }\n    ++index;\n    var backslash = v.indexOf('\\\\', index);\n    buffer += v.substring(index, backslash < 0 ? v.length : backslash);\n    index = backslash;\n  }\n\n  return buffer;\n};\n\nTokenStream.prototype.isComment = function () {\n  var c = this.expression.charAt(this.pos);\n  if (c === '/' && this.expression.charAt(this.pos + 1) === '*') {\n    this.pos = this.expression.indexOf('*/', this.pos) + 2;\n    if (this.pos === 1) {\n      this.pos = this.expression.length;\n    }\n    return true;\n  }\n  return false;\n};\n\nTokenStream.prototype.isRadixInteger = function () {\n  var pos = this.pos;\n\n  if (pos >= this.expression.length - 2 || this.expression.charAt(pos) !== '0') {\n    return false;\n  }\n  ++pos;\n\n  var radix;\n  var validDigit;\n  if (this.expression.charAt(pos) === 'x') {\n    radix = 16;\n    validDigit = /^[0-9a-f]$/i;\n    ++pos;\n  } else if (this.expression.charAt(pos) === 'b') {\n    radix = 2;\n    validDigit = /^[01]$/i;\n    ++pos;\n  } else {\n    return false;\n  }\n\n  var valid = false;\n  var startPos = pos;\n\n  while (pos < this.expression.length) {\n    var c = this.expression.charAt(pos);\n    if (validDigit.test(c)) {\n      pos++;\n      valid = true;\n    } else {\n      break;\n    }\n  }\n\n  if (valid) {\n    this.current = this.newToken(TNUMBER, parseInt(this.expression.substring(startPos, pos), radix));\n    this.pos = pos;\n  }\n  return valid;\n};\n\nTokenStream.prototype.isNumber = function () {\n  var valid = false;\n  var pos = this.pos;\n  var startPos = pos;\n  var resetPos = pos;\n  var foundDot = false;\n  var foundDigits = false;\n  var c;\n\n  while (pos < this.expression.length) {\n    c = this.expression.charAt(pos);\n    if ((c >= '0' && c <= '9') || (!foundDot && c === '.')) {\n      if (c === '.') {\n        foundDot = true;\n      } else {\n        foundDigits = true;\n      }\n      pos++;\n      valid = foundDigits;\n    } else {\n      break;\n    }\n  }\n\n  if (valid) {\n    resetPos = pos;\n  }\n\n  if (c === 'e' || c === 'E') {\n    pos++;\n    var acceptSign = true;\n    var validExponent = false;\n    while (pos < this.expression.length) {\n      c = this.expression.charAt(pos);\n      if (acceptSign && (c === '+' || c === '-')) {\n        acceptSign = false;\n      } else if (c >= '0' && c <= '9') {\n        validExponent = true;\n        acceptSign = false;\n      } else {\n        break;\n      }\n      pos++;\n    }\n\n    if (!validExponent) {\n      pos = resetPos;\n    }\n  }\n\n  if (valid) {\n    this.current = this.newToken(TNUMBER, parseFloat(this.expression.substring(startPos, pos)));\n    this.pos = pos;\n  } else {\n    this.pos = resetPos;\n  }\n  return valid;\n};\n\nTokenStream.prototype.isOperator = function () {\n  var startPos = this.pos;\n  var c = this.expression.charAt(this.pos);\n\n  if (c === '+' || c === '-' || c === '*' || c === '/' || c === '%' || c === '^' || c === '?' || c === ':' || c === '.') {\n    this.current = this.newToken(TOP, c);\n  } else if (c === '∙' || c === '•') {\n    this.current = this.newToken(TOP, '*');\n  } else if (c === '>') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '>=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, '>');\n    }\n  } else if (c === '<') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '<=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, '<');\n    }\n  } else if (c === '|') {\n    if (this.expression.charAt(this.pos + 1) === '|') {\n      this.current = this.newToken(TOP, '||');\n      this.pos++;\n    } else {\n      return false;\n    }\n  } else if (c === '=') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '==');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, c);\n    }\n  } else if (c === '!') {\n    if (this.expression.charAt(this.pos + 1) === '=') {\n      this.current = this.newToken(TOP, '!=');\n      this.pos++;\n    } else {\n      this.current = this.newToken(TOP, c);\n    }\n  } else {\n    return false;\n  }\n  this.pos++;\n\n  if (this.isOperatorEnabled(this.current.value)) {\n    return true;\n  } else {\n    this.pos = startPos;\n    return false;\n  }\n};\n\nTokenStream.prototype.isOperatorEnabled = function (op) {\n  return this.parser.isOperatorEnabled(op);\n};\n\nTokenStream.prototype.getCoordinates = function () {\n  var line = 0;\n  var column;\n  var newline = -1;\n  do {\n    line++;\n    column = this.pos - newline;\n    newline = this.expression.indexOf('\\n', newline + 1);\n  } while (newline >= 0 && newline < this.pos);\n\n  return {\n    line: line,\n    column: column\n  };\n};\n\nTokenStream.prototype.parseError = function (msg) {\n  var coords = this.getCoordinates();\n  throw new Error('parse error [' + coords.line + ':' + coords.column + ']: ' + msg);\n};\n\nfunction ParserState(parser, tokenStream, options) {\n  this.parser = parser;\n  this.tokens = tokenStream;\n  this.current = null;\n  this.nextToken = null;\n  this.next();\n  this.savedCurrent = null;\n  this.savedNextToken = null;\n  this.allowMemberAccess = options.allowMemberAccess !== false;\n}\n\nParserState.prototype.next = function () {\n  this.current = this.nextToken;\n  return (this.nextToken = this.tokens.next());\n};\n\nParserState.prototype.tokenMatches = function (token, value) {\n  if (typeof value === 'undefined') {\n    return true;\n  } else if (Array.isArray(value)) {\n    return contains(value, token.value);\n  } else if (typeof value === 'function') {\n    return value(token);\n  } else {\n    return token.value === value;\n  }\n};\n\nParserState.prototype.save = function () {\n  this.savedCurrent = this.current;\n  this.savedNextToken = this.nextToken;\n  this.tokens.save();\n};\n\nParserState.prototype.restore = function () {\n  this.tokens.restore();\n  this.current = this.savedCurrent;\n  this.nextToken = this.savedNextToken;\n};\n\nParserState.prototype.accept = function (type, value) {\n  if (this.nextToken.type === type && this.tokenMatches(this.nextToken, value)) {\n    this.next();\n    return true;\n  }\n  return false;\n};\n\nParserState.prototype.expect = function (type, value) {\n  if (!this.accept(type, value)) {\n    var coords = this.tokens.getCoordinates();\n    throw new Error('parse error [' + coords.line + ':' + coords.column + ']: Expected ' + (value || type));\n  }\n};\n\nParserState.prototype.parseAtom = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  if (this.accept(TNAME) || this.accept(TOP, isPrefixOperator)) {\n    instr.push(new Instruction(IVAR, this.current.value));\n  } else if (this.accept(TNUMBER)) {\n    instr.push(new Instruction(INUMBER, this.current.value));\n  } else if (this.accept(TSTRING)) {\n    instr.push(new Instruction(INUMBER, this.current.value));\n  } else if (this.accept(TPAREN, '(')) {\n    this.parseExpression(instr);\n    this.expect(TPAREN, ')');\n  } else if (this.accept(TBRACKET, '[')) {\n    if (this.accept(TBRACKET, ']')) {\n      instr.push(new Instruction(IARRAY, 0));\n    } else {\n      var argCount = this.parseArrayList(instr);\n      instr.push(new Instruction(IARRAY, argCount));\n    }\n  } else {\n    throw new Error('unexpected ' + this.nextToken);\n  }\n};\n\nParserState.prototype.parseExpression = function (instr) {\n  var exprInstr = [];\n  if (this.parseUntilEndStatement(instr, exprInstr)) {\n    return;\n  }\n  this.parseVariableAssignmentExpression(exprInstr);\n  if (this.parseUntilEndStatement(instr, exprInstr)) {\n    return;\n  }\n  this.pushExpression(instr, exprInstr);\n};\n\nParserState.prototype.pushExpression = function (instr, exprInstr) {\n  for (var i = 0, len = exprInstr.length; i < len; i++) {\n    instr.push(exprInstr[i]);\n  }\n};\n\nParserState.prototype.parseUntilEndStatement = function (instr, exprInstr) {\n  if (!this.accept(TSEMICOLON)) return false;\n  if (this.nextToken && this.nextToken.type !== TEOF && !(this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n    exprInstr.push(new Instruction(IENDSTATEMENT));\n  }\n  if (this.nextToken.type !== TEOF) {\n    this.parseExpression(exprInstr);\n  }\n  instr.push(new Instruction(IEXPR, exprInstr));\n  return true;\n};\n\nParserState.prototype.parseArrayList = function (instr) {\n  var argCount = 0;\n\n  while (!this.accept(TBRACKET, ']')) {\n    this.parseExpression(instr);\n    ++argCount;\n    while (this.accept(TCOMMA)) {\n      this.parseExpression(instr);\n      ++argCount;\n    }\n  }\n\n  return argCount;\n};\n\nParserState.prototype.parseVariableAssignmentExpression = function (instr) {\n  this.parseConditionalExpression(instr);\n  while (this.accept(TOP, '=')) {\n    var varName = instr.pop();\n    var varValue = [];\n    var lastInstrIndex = instr.length - 1;\n    if (varName.type === IFUNCALL) {\n      if (!this.tokens.isOperatorEnabled('()=')) {\n        throw new Error('function definition is not permitted');\n      }\n      for (var i = 0, len = varName.value + 1; i < len; i++) {\n        var index = lastInstrIndex - i;\n        if (instr[index].type === IVAR) {\n          instr[index] = new Instruction(IVARNAME, instr[index].value);\n        }\n      }\n      this.parseVariableAssignmentExpression(varValue);\n      instr.push(new Instruction(IEXPR, varValue));\n      instr.push(new Instruction(IFUNDEF, varName.value));\n      continue;\n    }\n    if (varName.type !== IVAR && varName.type !== IMEMBER) {\n      throw new Error('expected variable for assignment');\n    }\n    this.parseVariableAssignmentExpression(varValue);\n    instr.push(new Instruction(IVARNAME, varName.value));\n    instr.push(new Instruction(IEXPR, varValue));\n    instr.push(binaryInstruction('='));\n  }\n};\n\nParserState.prototype.parseConditionalExpression = function (instr) {\n  this.parseOrExpression(instr);\n  while (this.accept(TOP, '?')) {\n    var trueBranch = [];\n    var falseBranch = [];\n    this.parseConditionalExpression(trueBranch);\n    this.expect(TOP, ':');\n    this.parseConditionalExpression(falseBranch);\n    instr.push(new Instruction(IEXPR, trueBranch));\n    instr.push(new Instruction(IEXPR, falseBranch));\n    instr.push(ternaryInstruction('?'));\n  }\n};\n\nParserState.prototype.parseOrExpression = function (instr) {\n  this.parseAndExpression(instr);\n  while (this.accept(TOP, 'or')) {\n    var falseBranch = [];\n    this.parseAndExpression(falseBranch);\n    instr.push(new Instruction(IEXPR, falseBranch));\n    instr.push(binaryInstruction('or'));\n  }\n};\n\nParserState.prototype.parseAndExpression = function (instr) {\n  this.parseComparison(instr);\n  while (this.accept(TOP, 'and')) {\n    var trueBranch = [];\n    this.parseComparison(trueBranch);\n    instr.push(new Instruction(IEXPR, trueBranch));\n    instr.push(binaryInstruction('and'));\n  }\n};\n\nvar COMPARISON_OPERATORS = ['==', '!=', '<', '<=', '>=', '>', 'in'];\n\nParserState.prototype.parseComparison = function (instr) {\n  this.parseAddSub(instr);\n  while (this.accept(TOP, COMPARISON_OPERATORS)) {\n    var op = this.current;\n    this.parseAddSub(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nvar ADD_SUB_OPERATORS = ['+', '-', '||'];\n\nParserState.prototype.parseAddSub = function (instr) {\n  this.parseTerm(instr);\n  while (this.accept(TOP, ADD_SUB_OPERATORS)) {\n    var op = this.current;\n    this.parseTerm(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nvar TERM_OPERATORS = ['*', '/', '%'];\n\nParserState.prototype.parseTerm = function (instr) {\n  this.parseFactor(instr);\n  while (this.accept(TOP, TERM_OPERATORS)) {\n    var op = this.current;\n    this.parseFactor(instr);\n    instr.push(binaryInstruction(op.value));\n  }\n};\n\nParserState.prototype.parseFactor = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  this.save();\n  if (this.accept(TOP, isPrefixOperator)) {\n    if (this.current.value !== '-' && this.current.value !== '+') {\n      if (this.nextToken.type === TPAREN && this.nextToken.value === '(') {\n        this.restore();\n        this.parseExponential(instr);\n        return;\n      } else if (this.nextToken.type === TSEMICOLON || this.nextToken.type === TCOMMA || this.nextToken.type === TEOF || (this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n        this.restore();\n        this.parseAtom(instr);\n        return;\n      }\n    }\n\n    var op = this.current;\n    this.parseFactor(instr);\n    instr.push(unaryInstruction(op.value));\n  } else {\n    this.parseExponential(instr);\n  }\n};\n\nParserState.prototype.parseExponential = function (instr) {\n  this.parsePostfixExpression(instr);\n  while (this.accept(TOP, '^')) {\n    this.parseFactor(instr);\n    instr.push(binaryInstruction('^'));\n  }\n};\n\nParserState.prototype.parsePostfixExpression = function (instr) {\n  this.parseFunctionCall(instr);\n  while (this.accept(TOP, '!')) {\n    instr.push(unaryInstruction('!'));\n  }\n};\n\nParserState.prototype.parseFunctionCall = function (instr) {\n  var unaryOps = this.tokens.unaryOps;\n  function isPrefixOperator(token) {\n    return token.value in unaryOps;\n  }\n\n  if (this.accept(TOP, isPrefixOperator)) {\n    var op = this.current;\n    this.parseAtom(instr);\n    instr.push(unaryInstruction(op.value));\n  } else {\n    this.parseMemberExpression(instr);\n    while (this.accept(TPAREN, '(')) {\n      if (this.accept(TPAREN, ')')) {\n        instr.push(new Instruction(IFUNCALL, 0));\n      } else {\n        var argCount = this.parseArgumentList(instr);\n        instr.push(new Instruction(IFUNCALL, argCount));\n      }\n    }\n  }\n};\n\nParserState.prototype.parseArgumentList = function (instr) {\n  var argCount = 0;\n\n  while (!this.accept(TPAREN, ')')) {\n    this.parseExpression(instr);\n    ++argCount;\n    while (this.accept(TCOMMA)) {\n      this.parseExpression(instr);\n      ++argCount;\n    }\n  }\n\n  return argCount;\n};\n\nParserState.prototype.parseMemberExpression = function (instr) {\n  this.parseAtom(instr);\n  while (this.accept(TOP, '.') || this.accept(TBRACKET, '[')) {\n    var op = this.current;\n\n    if (op.value === '.') {\n      if (!this.allowMemberAccess) {\n        throw new Error('unexpected \".\", member access is not permitted');\n      }\n\n      this.expect(TNAME);\n      instr.push(new Instruction(IMEMBER, this.current.value));\n    } else if (op.value === '[') {\n      if (!this.tokens.isOperatorEnabled('[')) {\n        throw new Error('unexpected \"[]\", arrays are disabled');\n      }\n\n      this.parseExpression(instr);\n      this.expect(TBRACKET, ']');\n      instr.push(binaryInstruction('['));\n    } else {\n      throw new Error('unexpected symbol: ' + op.value);\n    }\n  }\n};\n\nfunction add(a, b) {\n  return Number(a) + Number(b);\n}\n\nfunction sub(a, b) {\n  return a - b;\n}\n\nfunction mul(a, b) {\n  return a * b;\n}\n\nfunction div(a, b) {\n  return a / b;\n}\n\nfunction mod(a, b) {\n  return a % b;\n}\n\nfunction concat(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.concat(b);\n  }\n  return '' + a + b;\n}\n\nfunction equal(a, b) {\n  return a === b;\n}\n\nfunction notEqual(a, b) {\n  return a !== b;\n}\n\nfunction greaterThan(a, b) {\n  return a > b;\n}\n\nfunction lessThan(a, b) {\n  return a < b;\n}\n\nfunction greaterThanEqual(a, b) {\n  return a >= b;\n}\n\nfunction lessThanEqual(a, b) {\n  return a <= b;\n}\n\nfunction andOperator(a, b) {\n  return Boolean(a && b);\n}\n\nfunction orOperator(a, b) {\n  return Boolean(a || b);\n}\n\nfunction inOperator(a, b) {\n  return contains(b, a);\n}\n\nfunction sinh(a) {\n  return ((Math.exp(a) - Math.exp(-a)) / 2);\n}\n\nfunction cosh(a) {\n  return ((Math.exp(a) + Math.exp(-a)) / 2);\n}\n\nfunction tanh(a) {\n  if (a === Infinity) return 1;\n  if (a === -Infinity) return -1;\n  return (Math.exp(a) - Math.exp(-a)) / (Math.exp(a) + Math.exp(-a));\n}\n\nfunction asinh(a) {\n  if (a === -Infinity) return a;\n  return Math.log(a + Math.sqrt((a * a) + 1));\n}\n\nfunction acosh(a) {\n  return Math.log(a + Math.sqrt((a * a) - 1));\n}\n\nfunction atanh(a) {\n  return (Math.log((1 + a) / (1 - a)) / 2);\n}\n\nfunction log10(a) {\n  return Math.log(a) * Math.LOG10E;\n}\n\nfunction neg(a) {\n  return -a;\n}\n\nfunction not(a) {\n  return !a;\n}\n\nfunction trunc(a) {\n  return a < 0 ? Math.ceil(a) : Math.floor(a);\n}\n\nfunction random(a) {\n  return Math.random() * (a || 1);\n}\n\nfunction factorial(a) { // a!\n  return gamma(a + 1);\n}\n\nfunction isInteger(value) {\n  return isFinite(value) && (value === Math.round(value));\n}\n\nvar GAMMA_G = 4.7421875;\nvar GAMMA_P = [\n  0.99999999999999709182,\n  57.156235665862923517, -59.597960355475491248,\n  14.136097974741747174, -0.49191381609762019978,\n  0.33994649984811888699e-4,\n  0.46523628927048575665e-4, -0.98374475304879564677e-4,\n  0.15808870322491248884e-3, -0.21026444172410488319e-3,\n  0.21743961811521264320e-3, -0.16431810653676389022e-3,\n  0.84418223983852743293e-4, -0.26190838401581408670e-4,\n  0.36899182659531622704e-5\n];\n\n// Gamma function from math.js\nfunction gamma(n) {\n  var t, x;\n\n  if (isInteger(n)) {\n    if (n <= 0) {\n      return isFinite(n) ? Infinity : NaN;\n    }\n\n    if (n > 171) {\n      return Infinity; // Will overflow\n    }\n\n    var value = n - 2;\n    var res = n - 1;\n    while (value > 1) {\n      res *= value;\n      value--;\n    }\n\n    if (res === 0) {\n      res = 1; // 0! is per definition 1\n    }\n\n    return res;\n  }\n\n  if (n < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * n) * gamma(1 - n));\n  }\n\n  if (n >= 171.35) {\n    return Infinity; // will overflow\n  }\n\n  if (n > 85.0) { // Extended Stirling Approx\n    var twoN = n * n;\n    var threeN = twoN * n;\n    var fourN = threeN * n;\n    var fiveN = fourN * n;\n    return Math.sqrt(2 * Math.PI / n) * Math.pow((n / Math.E), n) *\n      (1 + (1 / (12 * n)) + (1 / (288 * twoN)) - (139 / (51840 * threeN)) -\n      (571 / (2488320 * fourN)) + (163879 / (209018880 * fiveN)) +\n      (5246819 / (75246796800 * fiveN * n)));\n  }\n\n  --n;\n  x = GAMMA_P[0];\n  for (var i = 1; i < GAMMA_P.length; ++i) {\n    x += GAMMA_P[i] / (n + i);\n  }\n\n  t = n + GAMMA_G + 0.5;\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;\n}\n\nfunction stringOrArrayLength(s) {\n  if (Array.isArray(s)) {\n    return s.length;\n  }\n  return String(s).length;\n}\n\nfunction hypot() {\n  var sum = 0;\n  var larg = 0;\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = Math.abs(arguments[i]);\n    var div;\n    if (larg < arg) {\n      div = larg / arg;\n      sum = (sum * div * div) + 1;\n      larg = arg;\n    } else if (arg > 0) {\n      div = arg / larg;\n      sum += div * div;\n    } else {\n      sum += arg;\n    }\n  }\n  return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n}\n\nfunction condition(cond, yep, nope) {\n  return cond ? yep : nope;\n}\n\n/**\n* Decimal adjustment of a number.\n* From @escopecz.\n*\n* @param {Number} value The number.\n* @param {Integer} exp  The exponent (the 10 logarithm of the adjustment base).\n* @return {Number} The adjusted value.\n*/\nfunction roundTo(value, exp) {\n  // If the exp is undefined or zero...\n  if (typeof exp === 'undefined' || +exp === 0) {\n    return Math.round(value);\n  }\n  value = +value;\n  exp = -(+exp);\n  // If the value is not a number or the exp is not an integer...\n  if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n    return NaN;\n  }\n  // Shift\n  value = value.toString().split('e');\n  value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n  // Shift back\n  value = value.toString().split('e');\n  return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n}\n\nfunction setVar(name, value, variables) {\n  if (variables) variables[name] = value;\n  return value;\n}\n\nfunction arrayIndex(array, index) {\n  return array[index | 0];\n}\n\nfunction max(array) {\n  if (arguments.length === 1 && Array.isArray(array)) {\n    return Math.max.apply(Math, array);\n  } else {\n    return Math.max.apply(Math, arguments);\n  }\n}\n\nfunction min(array) {\n  if (arguments.length === 1 && Array.isArray(array)) {\n    return Math.min.apply(Math, array);\n  } else {\n    return Math.min.apply(Math, arguments);\n  }\n}\n\nfunction arrayMap(f, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to map is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to map is not an array');\n  }\n  return a.map(function (x, i) {\n    return f(x, i);\n  });\n}\n\nfunction arrayFold(f, init, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to fold is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to fold is not an array');\n  }\n  return a.reduce(function (acc, x, i) {\n    return f(acc, x, i);\n  }, init);\n}\n\nfunction arrayFilter(f, a) {\n  if (typeof f !== 'function') {\n    throw new Error('First argument to filter is not a function');\n  }\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to filter is not an array');\n  }\n  return a.filter(function (x, i) {\n    return f(x, i);\n  });\n}\n\nfunction stringOrArrayIndexOf(target, s) {\n  if (!(Array.isArray(s) || typeof s === 'string')) {\n    throw new Error('Second argument to indexOf is not a string or array');\n  }\n\n  return s.indexOf(target);\n}\n\nfunction arrayJoin(sep, a) {\n  if (!Array.isArray(a)) {\n    throw new Error('Second argument to join is not an array');\n  }\n\n  return a.join(sep);\n}\n\nfunction sign(x) {\n  return ((x > 0) - (x < 0)) || +x;\n}\n\nvar ONE_THIRD = 1/3;\nfunction cbrt(x) {\n  return x < 0 ? -Math.pow(-x, ONE_THIRD) : Math.pow(x, ONE_THIRD);\n}\n\nfunction expm1(x) {\n  return Math.exp(x) - 1;\n}\n\nfunction log1p(x) {\n  return Math.log(1 + x);\n}\n\nfunction log2(x) {\n  return Math.log(x) / Math.LN2;\n}\n\nfunction Parser(options) {\n  this.options = options || {};\n  this.unaryOps = {\n    sin: Math.sin,\n    cos: Math.cos,\n    tan: Math.tan,\n    asin: Math.asin,\n    acos: Math.acos,\n    atan: Math.atan,\n    sinh: Math.sinh || sinh,\n    cosh: Math.cosh || cosh,\n    tanh: Math.tanh || tanh,\n    asinh: Math.asinh || asinh,\n    acosh: Math.acosh || acosh,\n    atanh: Math.atanh || atanh,\n    sqrt: Math.sqrt,\n    cbrt: Math.cbrt || cbrt,\n    log: Math.log,\n    log2: Math.log2 || log2,\n    ln: Math.log,\n    lg: Math.log10 || log10,\n    log10: Math.log10 || log10,\n    expm1: Math.expm1 || expm1,\n    log1p: Math.log1p || log1p,\n    abs: Math.abs,\n    ceil: Math.ceil,\n    floor: Math.floor,\n    round: Math.round,\n    trunc: Math.trunc || trunc,\n    '-': neg,\n    '+': Number,\n    exp: Math.exp,\n    not: not,\n    length: stringOrArrayLength,\n    '!': factorial,\n    sign: Math.sign || sign\n  };\n\n  this.binaryOps = {\n    '+': add,\n    '-': sub,\n    '*': mul,\n    '/': div,\n    '%': mod,\n    '^': Math.pow,\n    '||': concat,\n    '==': equal,\n    '!=': notEqual,\n    '>': greaterThan,\n    '<': lessThan,\n    '>=': greaterThanEqual,\n    '<=': lessThanEqual,\n    and: andOperator,\n    or: orOperator,\n    'in': inOperator,\n    '=': setVar,\n    '[': arrayIndex\n  };\n\n  this.ternaryOps = {\n    '?': condition\n  };\n\n  this.functions = {\n    random: random,\n    fac: factorial,\n    min: min,\n    max: max,\n    hypot: Math.hypot || hypot,\n    pyt: Math.hypot || hypot, // backward compat\n    pow: Math.pow,\n    atan2: Math.atan2,\n    'if': condition,\n    gamma: gamma,\n    roundTo: roundTo,\n    map: arrayMap,\n    fold: arrayFold,\n    filter: arrayFilter,\n    indexOf: stringOrArrayIndexOf,\n    join: arrayJoin\n  };\n\n  this.consts = {\n    E: Math.E,\n    PI: Math.PI,\n    'true': true,\n    'false': false\n  };\n}\n\nParser.prototype.parse = function (expr) {\n  var instr = [];\n  var parserState = new ParserState(\n    this,\n    new TokenStream(this, expr),\n    { allowMemberAccess: this.options.allowMemberAccess }\n  );\n\n  parserState.parseExpression(instr);\n  parserState.expect(TEOF, 'EOF');\n\n  return new Expression(instr, this);\n};\n\nParser.prototype.evaluate = function (expr, variables) {\n  return this.parse(expr).evaluate(variables);\n};\n\nvar sharedParser = new Parser();\n\nParser.parse = function (expr) {\n  return sharedParser.parse(expr);\n};\n\nParser.evaluate = function (expr, variables) {\n  return sharedParser.parse(expr).evaluate(variables);\n};\n\nvar optionNameMap = {\n  '+': 'add',\n  '-': 'subtract',\n  '*': 'multiply',\n  '/': 'divide',\n  '%': 'remainder',\n  '^': 'power',\n  '!': 'factorial',\n  '<': 'comparison',\n  '>': 'comparison',\n  '<=': 'comparison',\n  '>=': 'comparison',\n  '==': 'comparison',\n  '!=': 'comparison',\n  '||': 'concatenate',\n  'and': 'logical',\n  'or': 'logical',\n  'not': 'logical',\n  '?': 'conditional',\n  ':': 'conditional',\n  '=': 'assignment',\n  '[': 'array',\n  '()=': 'fndef'\n};\n\nfunction getOptionName(op) {\n  return optionNameMap.hasOwnProperty(op) ? optionNameMap[op] : op;\n}\n\nParser.prototype.isOperatorEnabled = function (op) {\n  var optionName = getOptionName(op);\n  var operators = this.options.operators || {};\n\n  return !(optionName in operators) || !!operators[optionName];\n};\n\n/*!\n Based on ndef.parser, by Raphael Graf(r@undefined.ch)\n http://www.undefined.ch/mparser/index.html\n\n Ported to JavaScript and modified by Matthew Crumley (email@matthewcrumley.com, http://silentmatt.com/)\n\n You are free to use and modify this code in anyway you find useful. Please leave this comment in the code\n to acknowledge its original source. If you feel like it, I enjoy hearing about projects that use my code,\n but don't feel like you have to let me know or ask permission.\n*/\n\n// Backwards compatibility\nvar index = {\n  Parser: Parser,\n  Expression: Expression\n};\n\nexport default index;\nexport { Expression, Parser };\n","var objectExtend = extend;\n\n/*\n  var obj = {a: 3, b: 5};\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 4, b: 5, c: 8}\n\n  var obj = {a: 3, b: 5};\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\n  obj; // {a: 3, b: 5}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\n\n  var arr = [1, 2, 3];\n  var obj = {a: 3, b: 5};\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\n  arr.push(4);\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\n\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\n  extend('hello', {a: 4, b: 5}); // throws\n  extend(3, {a: 4, b: 5}); // throws\n*/\n\nfunction extend(/* [deep], obj1, obj2, [objn] */) {\n  var args = [].slice.call(arguments);\n  var deep = false;\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n  var result = args[0];\n  if (isUnextendable(result)) {\n    throw new Error('extendee must be an object');\n  }\n  var extenders = args.slice(1);\n  var len = extenders.length;\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n    for (var key in extender) {\n      if (Object.prototype.hasOwnProperty.call(extender, key)) {\n        var value = extender[key];\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(\n            true,\n            Object.prototype.hasOwnProperty.call(result, key) && !isUnextendable(result[key])\n              ? result[key]\n              : base,\n            value\n          );\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n\nfunction isUnextendable(val) {\n  return !val || (typeof val != 'object' && typeof val != 'function');\n}\n\nexport {objectExtend as default};\n","// A is m x n. B is n x p. product is m x p.\nfunction multiplyMatrices (A, B) {\n\tlet m = A.length;\n\n\tif (!Array.isArray(A[0])) {\n\t\t// A is vector, convert to [[a, b, c, ...]]\n\t\tA = [A];\n\t}\n\n\tif (!Array.isArray(B[0])) {\n\t\t// B is vector, convert to [[a], [b], [c], ...]]\n\t\tB = B.map(x => [x]);\n\t}\n\n\tlet p = B[0].length;\n\tlet B_cols = B[0].map((_, i) => B.map(x => x[i])); // transpose B\n\tlet product = A.map(row => B_cols.map(col => {\n\t\tlet ret = 0;\n\n\t\tif (!Array.isArray(row)) {\n\t\t\tfor (let c of col) {\n\t\t\t\tret += row * c;\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tfor (let i=0; i < row.length; i++) {\n\t\t\tret += row[i] * (col[i] || 0);\n\t\t}\n\n\t\treturn ret;\n\t}));\n\n\tif (m === 1) {\n\t\tproduct = product[0]; // Avoid [[a, b, c, ...]]\n\t}\n\n\tif (p === 1) {\n\t\treturn product.map(x => x[0]); // Avoid [[a], [b], [c], ...]]\n\t}\n\n\treturn product;\n}\n\n/**\n * Various utility functions\n */\n\n\n/**\n * Check if a value is a string (including a String object)\n * @param {*} str - Value to check\n * @returns {boolean}\n */\nfunction isString (str) {\n\treturn type(str) === \"string\";\n}\n\n/**\n * Determine the internal JavaScript [[Class]] of an object.\n * @param {*} o - Value to check\n * @returns {string}\n */\nfunction type (o) {\n\tlet str = Object.prototype.toString.call(o);\n\n\treturn (str.match(/^\\[object\\s+(.*?)\\]$/)[1] || \"\").toLowerCase();\n}\n\n/**\n * Round a number to a certain number of significant digits\n * @param {number} n - The number to round\n * @param {number} precision - Number of significant digits\n */\nfunction toPrecision (n, precision) {\n\tn = +n;\n\tprecision = +precision;\n\tlet integerLength = (Math.floor(n) + \"\").length;\n\n\tif (precision > integerLength) {\n\t\treturn +n.toFixed(precision - integerLength);\n\t}\n\telse {\n\t\tlet p10 = 10 ** (integerLength - precision);\n\t\treturn Math.round(n / p10) * p10;\n\t}\n}\n\n/**\n* Parse a CSS function, regardless of its name and arguments\n* @param String str String to parse\n* @return {{name, args, rawArgs}}\n*/\nfunction parseFunction (str) {\n\tif (!str) {\n\t\treturn;\n\t}\n\n\tstr = str.trim();\n\n\tconst isFunctionRegex = /^([a-z]+)\\((.+?)\\)$/i;\n\tconst isNumberRegex = /^-?[\\d.]+$/;\n\tlet parts = str.match(isFunctionRegex);\n\n\tif (parts) {\n\t\t// It is a function, parse args\n\t\tlet args = [];\n\t\tparts[2].replace(/\\/?\\s*([-\\w.]+(?:%|deg)?)/g, ($0, arg) => {\n\t\t\tif (/%$/.test(arg)) {\n\t\t\t\t// Convert percentages to 0-1 numbers\n\t\t\t\targ = new Number(arg.slice(0, -1) / 100);\n\t\t\t\targ.type = \"<percentage>\";\n\t\t\t}\n\t\t\telse if (/deg$/.test(arg)) {\n\t\t\t\t// Drop deg from degrees and convert to number\n\t\t\t\t// TODO handle other units too\n\t\t\t\targ = new Number(+arg.slice(0, -3));\n\t\t\t\targ.type = \"<angle>\";\n\t\t\t\targ.unit = \"deg\";\n\t\t\t}\n\t\t\telse if (isNumberRegex.test(arg)) {\n\t\t\t\t// Convert numerical args to numbers\n\t\t\t\targ = new Number(arg);\n\t\t\t\targ.type = \"<number>\";\n\t\t\t}\n\n\t\t\tif ($0.startsWith(\"/\")) {\n\t\t\t\t// It's alpha\n\t\t\t\targ = arg instanceof Number? arg : new Number(arg);\n\t\t\t\targ.alpha = true;\n\t\t\t}\n\n\t\t\targs.push(arg);\n\t\t});\n\n\t\treturn {\n\t\t\tname: parts[1].toLowerCase(),\n\t\t\trawName: parts[1],\n\t\t\trawArgs: parts[2],\n\t\t\t// An argument could be (as of css-color-4):\n\t\t\t// a number, percentage, degrees (hue), ident (in color())\n\t\t\targs\n\t\t};\n\t}\n}\n\nfunction last (arr) {\n\treturn arr[arr.length - 1];\n}\n\nfunction interpolate (start, end, p) {\n\tif (isNaN(start)) {\n\t\treturn end;\n\t}\n\n\tif (isNaN(end)) {\n\t\treturn start;\n\t}\n\n\treturn start + (end - start) * p;\n}\n\nfunction interpolateInv (start, end, value) {\n\treturn (value - start) / (end - start);\n}\n\nfunction mapRange (from, to, value) {\n\treturn interpolate(to[0], to[1], interpolateInv(from[0], from[1], value));\n}\n\nfunction parseCoordGrammar (coordGrammars) {\n\treturn coordGrammars.map(coordGrammar => {\n\t\treturn coordGrammar.split(\"|\").map(type => {\n\t\t\ttype = type.trim();\n\t\t\tlet range = type.match(/^(<[a-z]+>)\\[(-?[.\\d]+),\\s*(-?[.\\d]+)\\]?$/);\n\n\t\t\tif (range) {\n\t\t\t\tlet ret = new String(range[1]);\n\t\t\t\tret.range = [+range[2], +range[3]];\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn type;\n\t\t});\n\t});\n}\n\nvar util = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tinterpolate: interpolate,\n\tinterpolateInv: interpolateInv,\n\tisString: isString,\n\tlast: last,\n\tmapRange: mapRange,\n\tmultiplyMatrices: multiplyMatrices,\n\tparseCoordGrammar: parseCoordGrammar,\n\tparseFunction: parseFunction,\n\ttoPrecision: toPrecision,\n\ttype: type\n});\n\n/**\n * A class for adding deep extensibility to any piece of JS code\n */\nclass Hooks {\n\tadd (name, callback, first) {\n\t\tif (typeof arguments[0] != \"string\") {\n\t\t\t// Multiple hooks\n\t\t\tfor (var name in arguments[0]) {\n\t\t\t\tthis.add(name, arguments[0][name], arguments[1]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t(Array.isArray(name)? name : [name]).forEach(function (name) {\n\t\t\tthis[name] = this[name] || [];\n\n\t\t\tif (callback) {\n\t\t\t\tthis[name][first? \"unshift\" : \"push\"](callback);\n\t\t\t}\n\t\t}, this);\n\t}\n\n\trun (name, env) {\n\t\tthis[name] = this[name] || [];\n\t\tthis[name].forEach(function (callback) {\n\t\t\tcallback.call(env && env.context? env.context : env, env);\n\t\t});\n\t}\n}\n/**\n * The instance of {@link Hooks} used throughout Color.js\n */\nconst hooks = new Hooks();\n\n// Global defaults one may want to configure\n\nvar defaults = {\n\tgamut_mapping: \"lch.c\",\n\tprecision: 5,\n\tdeltaE: \"76\", // Default deltaE method\n};\n\nconst WHITES = {\n\t// for compatibility, the four-digit chromaticity-derived ones everyone else uses\n\tD50: [0.3457 / 0.3585, 1.00000, (1.0 - 0.3457 - 0.3585) / 0.3585],\n\tD65: [0.3127 / 0.3290, 1.00000, (1.0 - 0.3127 - 0.3290) / 0.3290],\n};\n\nfunction getWhite (name) {\n\tif (Array.isArray(name)) {\n\t\treturn name;\n\t}\n\n\treturn WHITES[name];\n}\n\n// Adapt XYZ from white point W1 to W2\nfunction adapt$1 (W1, W2, XYZ, options = {}) {\n\tW1 = getWhite(W1);\n\tW2 = getWhite(W2);\n\n\tif (!W1 || !W2) {\n\t\tthrow new TypeError(`Missing white point to convert ${!W1? \"from\" : \"\"}${!W1&&!W2? \"/\" : \"\"}${!W2? \"to\" : \"\"}`);\n\t}\n\n\tif (W1 === W2) {\n\t\t// Same whitepoints, no conversion needed\n\t\treturn XYZ;\n\t}\n\n\tlet env = {W1, W2, XYZ, options};\n\n\thooks.run(\"chromatic-adaptation-start\", env);\n\n\tif (!env.M) {\n\t\tif (env.W1 === WHITES.D65 && env.W2 === WHITES.D50) {\n\t\t\tenv.M = [\n\t\t\t\t[  1.0479298208405488,    0.022946793341019088,  -0.05019222954313557 ],\n\t\t\t\t[  0.029627815688159344,  0.990434484573249,     -0.01707382502938514 ],\n\t\t\t\t[ -0.009243058152591178,  0.015055144896577895,   0.7518742899580008  ]\n\t\t\t];\n\t\t}\n\t\telse if (env.W1 === WHITES.D50 && env.W2 === WHITES.D65) {\n\n\t\t\tenv.M = [\n\t\t\t\t[  0.9554734527042182,   -0.023098536874261423,  0.0632593086610217   ],\n\t\t\t\t[ -0.028369706963208136,  1.0099954580058226,    0.021041398966943008 ],\n\t\t\t\t[  0.012314001688319899, -0.020507696433477912,  1.3303659366080753   ]\n\t\t\t];\n\t\t}\n\t}\n\n\thooks.run(\"chromatic-adaptation-end\", env);\n\n\tif (env.M) {\n\t\treturn multiplyMatrices(env.M, env.XYZ);\n\t}\n\telse {\n\t\tthrow new TypeError(\"Only Bradford CAT with white points D50 and D65 supported for now.\");\n\t}\n}\n\nconst ε$4 = .000075;\n\n/**\n * Class to represent a color space\n */\nclass ColorSpace {\n\tconstructor (options) {\n\t\tthis.id = options.id;\n\t\tthis.name = options.name;\n\t\tthis.base = options.base ? ColorSpace.get(options.base) : null;\n\t\tthis.aliases = options.aliases;\n\n\t\tif (this.base) {\n\t\t\tthis.fromBase = options.fromBase;\n\t\t\tthis.toBase = options.toBase;\n\t\t}\n\n\t\t// Coordinate metadata\n\n\t\tlet coords = options.coords ?? this.base.coords;\n\n\t\tfor (let name in coords) {\n\t\t\tif (!(\"name\" in coords[name])) {\n\t\t\t\tcoords[name].name = name;\n\t\t\t}\n\t\t}\n\t\tthis.coords = coords;\n\n\t\t// White point\n\n\t\tlet white = options.white ?? this.base.white ?? \"D65\";\n\t\tthis.white = getWhite(white);\n\n\t\t// Sort out formats\n\n\t\tthis.formats = options.formats ?? {};\n\n\t\tfor (let name in this.formats) {\n\t\t\tlet format = this.formats[name];\n\t\t\tformat.type ||= \"function\";\n\t\t\tformat.name ||= name;\n\t\t}\n\n\t\tif (options.cssId && !this.formats.functions?.color) {\n\t\t\tthis.formats.color = { id: options.cssId };\n\t\t\tObject.defineProperty(this, \"cssId\", {value: options.cssId});\n\t\t}\n\t\telse if (this.formats?.color && !this.formats?.color.id) {\n\t\t\tthis.formats.color.id = this.id;\n\t\t}\n\n\t\t// Other stuff\n\t\tthis.referred = options.referred;\n\n\t\t// Compute ancestors and store them, since they will never change\n\t\tObject.defineProperty(this, \"path\", {\n\t\t\tvalue: getPath(this).reverse(),\n\t\t\twritable: false,\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t});\n\n\t\thooks.run(\"colorspace-init-end\", this);\n\t}\n\n\tinGamut (coords, {epsilon = ε$4} = {}) {\n\t\tif (this.isPolar) {\n\t\t\t// Do not check gamut through polar coordinates\n\t\t\tcoords = this.toBase(coords);\n\n\t\t\treturn this.base.inGamut(coords, {epsilon});\n\t\t}\n\n\t\tlet coordMeta = Object.values(this.coords);\n\n\t\treturn coords.every((c, i) => {\n\t\t\tlet meta = coordMeta[i];\n\n\t\t\tif (meta.type !== \"angle\" && meta.range) {\n\t\t\t\tif (Number.isNaN(c)) {\n\t\t\t\t\t// NaN is always in gamut\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet [min, max] = meta.range;\n\t\t\t\treturn (min === undefined || c >= min - epsilon)\n\t\t\t\t    && (max === undefined || c <= max + epsilon);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tget cssId () {\n\t\treturn this.formats.functions?.color?.id || this.id;\n\t}\n\n\tget isPolar () {\n\t\tfor (let id in this.coords) {\n\t\t\tif (this.coords[id].type === \"angle\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tgetFormat (format) {\n\t\tif (typeof format === \"object\") {\n\t\t\tformat = processFormat(format, this);\n\t\t\treturn format;\n\t\t}\n\n\t\tlet ret;\n\t\tif (format === \"default\") {\n\t\t\t// Get first format\n\t\t\tret = Object.values(this.formats)[0];\n\t\t}\n\t\telse {\n\t\t\tret = this.formats[format];\n\t\t}\n\n\t\tif (ret) {\n\t\t\tret = processFormat(ret, this);\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// We cannot rely on simple === because then ColorSpace objects cannot be proxied\n\tequals (space) {\n\t\tif (!space) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this === space || this.id === space.id;\n\t}\n\n\tto (space, coords) {\n\t\tif (arguments.length === 1) {\n\t\t\t[space, coords] = [space.space, space.coords];\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tif (this.equals(space)) {\n\t\t\t// Same space, no change needed\n\t\t\treturn coords;\n\t\t}\n\n\t\t// Convert NaN to 0, which seems to be valid in every coordinate of every color space\n\t\tcoords = coords.map(c => Number.isNaN(c)? 0 : c);\n\n\t\t// Find connection space = lowest common ancestor in the base tree\n\t\tlet myPath = this.path;\n\t\tlet otherPath = space.path;\n\n\t\tlet connectionSpace, connectionSpaceIndex;\n\n\t\tfor (let i=0; i < myPath.length; i++) {\n\t\t\tif (myPath[i].equals(otherPath[i])) {\n\t\t\t\tconnectionSpace = myPath[i];\n\t\t\t\tconnectionSpaceIndex = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!connectionSpace) {\n\t\t\t// This should never happen\n\t\t\tthrow new Error(`Cannot convert between color spaces ${this} and ${space}: no connection space was found`);\n\t\t}\n\n\t\t// Go up from current space to connection space\n\t\tfor (let i = myPath.length - 1; i > connectionSpaceIndex; i--) {\n\t\t\tcoords = myPath[i].toBase(coords);\n\t\t}\n\n\t\t// Go down from connection space to target space\n\t\tfor (let i = connectionSpaceIndex + 1; i < otherPath.length; i++) {\n\t\t\tcoords = otherPath[i].fromBase(coords);\n\t\t}\n\n\t\treturn coords;\n\t}\n\n\tfrom (space, coords) {\n\t\tif (arguments.length === 1) {\n\t\t\t[space, coords] = [space.space, space.coords];\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\treturn space.to(this, coords);\n\t}\n\n\ttoString () {\n\t\treturn `${this.name} (${this.id})`;\n\t}\n\n\tgetMinCoords () {\n\t\tlet ret = [];\n\n\t\tfor (let id in this.coords) {\n\t\t\tlet meta = this.coords[id];\n\t\t\tlet range = meta.range || meta.refRange;\n\t\t\tret.push(range?.min ?? 0);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tstatic registry = {};\n\n\t// Returns array of unique color spaces\n\tstatic get all () {\n\t\treturn [...new Set(Object.values(ColorSpace.registry))];\n\t}\n\n\tstatic register (id, space) {\n\t\tif (arguments.length === 1) {\n\t\t\tspace = arguments[0];\n\t\t\tid = space.id;\n\t\t}\n\n\t\tspace = this.get(space);\n\n\t\tif (this.registry[id] && this.registry[id] !== space) {\n\t\t\tthrow new Error(`Duplicate color space registration: '${id}'`);\n\t\t}\n\t\tthis.registry[id] = space;\n\n\t\t// Register aliases when called without an explicit ID.\n\t\tif (arguments.length === 1 && space.aliases) {\n\t\t\tfor (let alias of space.aliases) {\n\t\t\t\tthis.register(alias, space);\n\t\t\t}\n\t\t}\n\n\t\treturn space;\n\t}\n\n\t/**\n\t * Lookup ColorSpace object by name\n\t * @param {ColorSpace | string} name\n\t */\n\tstatic get (space, ...alternatives) {\n\t\tif (!space || space instanceof ColorSpace) {\n\t\t\treturn space;\n\t\t}\n\n\t\tlet argType = type(space);\n\n\t\tif (argType === \"string\") {\n\t\t\t// It's a color space id\n\t\t\tlet ret = ColorSpace.registry[space.toLowerCase()];\n\n\t\t\tif (!ret) {\n\t\t\t\tthrow new TypeError(`No color space found with id = \"${space}\"`);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (alternatives.length) {\n\t\t\treturn ColorSpace.get(...alternatives);\n\t\t}\n\n\t\tthrow new TypeError(`${space} is not a valid color space`);\n\t}\n\n\t/**\n\t * Get metadata about a coordinate of a color space\n\t *\n\t * @static\n\t * @param {Array | string} ref\n\t * @param {ColorSpace | string} [workingSpace]\n\t * @return {Object}\n\t */\n\tstatic resolveCoord (ref, workingSpace) {\n\t\tlet coordType = type(ref);\n\t\tlet space, coord;\n\n\t\tif (coordType === \"string\") {\n\t\t\tif (ref.includes(\".\")) {\n\t\t\t\t// Absolute coordinate\n\t\t\t\t[space, coord] = ref.split(\".\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Relative coordinate\n\t\t\t\t[space, coord] = [, ref];\n\t\t\t}\n\t\t}\n\t\telse if (Array.isArray(ref)) {\n\t\t\t[space, coord] = ref;\n\t\t}\n\t\telse {\n\t\t\t// Object\n\t\t\tspace = ref.space;\n\t\t\tcoord = ref.coordId;\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tif (!space) {\n\t\t\tspace = workingSpace;\n\t\t}\n\n\t\tif (!space) {\n\t\t\tthrow new TypeError(`Cannot resolve coordinate reference ${ref}: No color space specified and relative references are not allowed here`);\n\t\t}\n\n\t\tcoordType = type(coord);\n\n\t\tif (coordType === \"number\" || coordType === \"string\" && coord >= 0) {\n\t\t\t// Resolve numerical coord\n\t\t\tlet meta = Object.entries(space.coords)[coord];\n\n\t\t\tif (meta) {\n\t\t\t\treturn {space, id: meta[0], index: coord, ...meta[1]};\n\t\t\t}\n\t\t}\n\n\t\tspace = ColorSpace.get(space);\n\n\t\tlet normalizedCoord = coord.toLowerCase();\n\n\t\tlet i = 0;\n\t\tfor (let id in space.coords) {\n\t\t\tlet meta = space.coords[id];\n\n\t\t\tif (id.toLowerCase() === normalizedCoord || meta.name?.toLowerCase() === normalizedCoord) {\n\t\t\t\treturn {space, id, index: i, ...meta};\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\tthrow new TypeError(`No \"${coord}\" coordinate found in ${space.name}. Its coordinates are: ${Object.keys(space.coords).join(\", \")}`);\n\t}\n\n\tstatic DEFAULT_FORMAT = {\n\t\ttype: \"functions\",\n\t\tname: \"color\",\n\t};\n}\n\nfunction getPath (space) {\n\tlet ret = [space];\n\n\tfor (let s = space; s = s.base;) {\n\t\tret.push(s);\n\t}\n\n\treturn ret;\n}\n\nfunction processFormat (format, {coords} = {}) {\n\tif (format.coords && !format.coordGrammar) {\n\t\tformat.type ||= \"function\";\n\t\tformat.name ||= \"color\";\n\n\t\t// Format has not been processed\n\t\tformat.coordGrammar = parseCoordGrammar(format.coords);\n\n\t\tlet coordFormats = Object.entries(coords).map(([id, coordMeta], i) => {\n\t\t\t// Preferred format for each coord is the first one\n\t\t\tlet outputType = format.coordGrammar[i][0];\n\n\t\t\tlet fromRange = coordMeta.range || coordMeta.refRange;\n\t\t\tlet toRange = outputType.range, suffix = \"\";\n\n\t\t\t// Non-strict equals intentional since outputType could be a string object\n\t\t\tif (outputType == \"<percentage>\") {\n\t\t\t\ttoRange = [0, 100];\n\t\t\t\tsuffix = \"%\";\n\t\t\t}\n\t\t\telse if (outputType == \"<angle>\") {\n\t\t\t\tsuffix = \"deg\";\n\t\t\t}\n\n\t\t\treturn  {fromRange, toRange, suffix};\n\t\t});\n\n\t\tformat.serializeCoords = (coords, precision) => {\n\t\t\treturn coords.map((c, i) => {\n\t\t\t\tlet {fromRange, toRange, suffix} = coordFormats[i];\n\n\t\t\t\tif (fromRange && toRange) {\n\t\t\t\t\tc = mapRange(fromRange, toRange, c);\n\t\t\t\t}\n\n\t\t\t\tc = toPrecision(c, precision);\n\n\t\t\t\tif (suffix) {\n\t\t\t\t\tc += suffix;\n\t\t\t\t}\n\n\t\t\t\treturn c;\n\t\t\t});\n\t\t};\n\t}\n\n\treturn format;\n}\n\nvar XYZ_D65 = new ColorSpace({\n\tid: \"xyz-d65\",\n\tname: \"XYZ D65\",\n\tcoords: {\n\t\tx: {name: \"X\"},\n\t\ty: {name: \"Y\"},\n\t\tz: {name: \"Z\"},\n\t},\n\twhite: \"D65\",\n\tformats: {\n\t\tcolor: {\n\t\t\tids: [\"xyz-d65\", \"xyz\"],\n\t\t}\n\t},\n\taliases: [\"xyz\"],\n});\n\n/**\n * Convenience class for RGB color spaces\n * @extends {ColorSpace}\n */\nclass RGBColorSpace extends ColorSpace {\n\t/**\n\t * Creates a new RGB ColorSpace.\n\t * If coords are not specified, they will use the default RGB coords.\n\t * Instead of `fromBase()` and `toBase()` functions,\n\t * you can specify to/from XYZ matrices and have `toBase()` and `fromBase()` automatically generated.\n\t * @param {*} options - Same options as {@link ColorSpace} plus:\n\t * @param {number[][]} options.toXYZ_M - Matrix to convert to XYZ\n\t * @param {number[][]} options.fromXYZ_M - Matrix to convert from XYZ\n\t */\n\tconstructor (options) {\n\t\tif (!options.coords) {\n\t\t\toptions.coords = {\n\t\t\t\tr: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Red\"\n\t\t\t\t},\n\t\t\t\tg: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Green\"\n\t\t\t\t},\n\t\t\t\tb: {\n\t\t\t\t\trange: [0, 1],\n\t\t\t\t\tname: \"Blue\"\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (!options.base) {\n\t\t\toptions.base = XYZ_D65;\n\t\t}\n\n\t\tif (options.toXYZ_M && options.fromXYZ_M) {\n\t\t\toptions.toBase ??= rgb => {\n\t\t\t\tlet xyz = multiplyMatrices(options.toXYZ_M, rgb);\n\n\t\t\t\tif (this.white !== this.base.white) {\n\t\t\t\t\t// Perform chromatic adaptation\n\t\t\t\t\txyz = adapt$1(this.white, this.base.white, xyz);\n\t\t\t\t}\n\n\t\t\t\treturn xyz;\n\t\t\t};\n\n\t\t\toptions.fromBase ??= xyz => {\n\t\t\t\txyz = adapt$1(this.base.white, this.white, xyz);\n\t\t\t\treturn multiplyMatrices(options.fromXYZ_M, xyz);\n\t\t\t};\n\t\t}\n\n\t\toptions.referred ??= \"display\";\n\n\t\tsuper(options);\n\t}\n}\n\n/**\n * Convert a CSS Color string to a color object\n * @param {string} str\n * @param {object} [options]\n * @param {object} [options.meta] - Object for additional information about the parsing\n * @returns { Color }\n */\nfunction parse (str, {meta} = {}) {\n\tlet env = {\"str\": String(str)?.trim()};\n\thooks.run(\"parse-start\", env);\n\n\tif (env.color) {\n\t\treturn env.color;\n\t}\n\n\tenv.parsed = parseFunction(env.str);\n\n\tif (env.parsed) {\n\t\t// Is a functional syntax\n\t\tlet name = env.parsed.name;\n\n\t\tif (name === \"color\") {\n\t\t\t// color() function\n\t\t\tlet id = env.parsed.args.shift();\n\t\t\tlet alpha = env.parsed.rawArgs.indexOf(\"/\") > 0? env.parsed.args.pop() : 1;\n\n\t\t\tfor (let space of ColorSpace.all) {\n\t\t\t\tlet colorSpec = space.getFormat(\"color\");\n\n\t\t\t\tif (colorSpec) {\n\t\t\t\t\tif (id === colorSpec.id || colorSpec.ids?.includes(id)) {\n\t\t\t\t\t\t// From https://drafts.csswg.org/css-color-4/#color-function\n\t\t\t\t\t\t// If more <number>s or <percentage>s are provided than parameters that the colorspace takes, the excess <number>s at the end are ignored.\n\t\t\t\t\t\t// If less <number>s or <percentage>s are provided than parameters that the colorspace takes, the missing parameters default to 0. (This is particularly convenient for multichannel printers where the additional inks are spot colors or varnishes that most colors on the page won’t use.)\n\t\t\t\t\t\tconst coords = Object.keys(space.coords).map((_, i) => env.parsed.args[i] || 0);\n\n\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\tmeta.formatId = \"color\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {spaceId: space.id, coords, alpha};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Not found\n\t\t\tlet didYouMean = \"\";\n\t\t\tif (id in ColorSpace.registry) {\n\t\t\t\t// Used color space id instead of color() id, these are often different\n\t\t\t\tlet cssId = ColorSpace.registry[id].formats?.functions?.color?.id;\n\n\t\t\t\tif (cssId) {\n\t\t\t\t\tdidYouMean = `Did you mean color(${cssId})?`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new TypeError(`Cannot parse color(${id}). ` + (didYouMean || \"Missing a plugin?\"));\n\t\t}\n\t\telse {\n\t\t\tfor (let space of ColorSpace.all) {\n\t\t\t\t// color space specific function\n\t\t\t\tlet format = space.getFormat(name);\n\t\t\t\tif (format && format.type === \"function\") {\n\t\t\t\t\tlet alpha = 1;\n\n\t\t\t\t\tif (format.lastAlpha || last(env.parsed.args).alpha) {\n\t\t\t\t\t\talpha = env.parsed.args.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\tlet coords = env.parsed.args;\n\n\t\t\t\t\tlet types;\n\n\t\t\t\t\tif (format.coordGrammar) {\n\t\t\t\t\t\ttypes = Object.entries(space.coords).map(([id, coordMeta], i) => {\n\t\t\t\t\t\t\tlet coordGrammar = format.coordGrammar[i];\n\t\t\t\t\t\t\tlet providedType = coords[i]?.type;\n\n\t\t\t\t\t\t\t// Find grammar alternative that matches the provided type\n\t\t\t\t\t\t\t// Non-strict equals is intentional because we are comparing w/ string objects\n\t\t\t\t\t\t\tlet type = coordGrammar.find(c => c == providedType);\n\n\t\t\t\t\t\t\t// Check that each coord conforms to its grammar\n\t\t\t\t\t\t\tif (!type) {\n\t\t\t\t\t\t\t\t// Type does not exist in the grammar, throw\n\t\t\t\t\t\t\t\tlet coordName = coordMeta.name || id;\n\t\t\t\t\t\t\t\tthrow new TypeError(`${providedType} not allowed for ${coordName} in ${name}()`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet fromRange = type.range;\n\n\t\t\t\t\t\t\tif (providedType === \"<percentage>\") {\n\t\t\t\t\t\t\t\tfromRange ||= [0, 1];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet toRange = coordMeta.range || coordMeta.refRange;\n\n\t\t\t\t\t\t\tif (fromRange && toRange) {\n\t\t\t\t\t\t\t\tcoords[i] = mapRange(fromRange, toRange, coords[i]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn type;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (meta) {\n\t\t\t\t\t\tObject.assign(meta, {formatId: format.name, types});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tspaceId: space.id,\n\t\t\t\t\t\tcoords, alpha\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Custom, colorspace-specific format\n\t\tfor (let space of ColorSpace.all) {\n\t\t\tfor (let formatId in space.formats) {\n\t\t\t\tlet format = space.formats[formatId];\n\n\t\t\t\tif (format.type !== \"custom\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (format.test && !format.test(env.str)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet color = format.parse(env.str);\n\n\t\t\t\tif (color) {\n\t\t\t\t\tcolor.alpha ??= 1;\n\n\t\t\t\t\tif (meta) {\n\t\t\t\t\t\tmeta.formatId = formatId;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn color;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// If we're here, we couldn't parse\n\tthrow new TypeError(`Could not parse ${str} as a color. Missing a plugin?`);\n}\n\n/**\n * Resolves a color reference (object or string) to a plain color object\n * @param {Color | {space, coords, alpha} | string} color\n * @returns {{space, coords, alpha}}\n */\nfunction getColor (color) {\n\tif (!color) {\n\t\tthrow new TypeError(\"Empty color reference\");\n\t}\n\n\tif (isString(color)) {\n\t\tcolor = parse(color);\n\t}\n\n\t// Object fixup\n\tlet space = color.space || color.spaceId;\n\n\tif (!(space instanceof ColorSpace)) {\n\t\t// Convert string id to color space object\n\t\tcolor.space = ColorSpace.get(space);\n\t}\n\n\tif (color.alpha === undefined) {\n\t\tcolor.alpha = 1;\n\t}\n\n\treturn color;\n}\n\n/**\n * Get the coordinates of a color in another color space\n *\n * @param {string | ColorSpace} space\n * @returns {number[]}\n */\nfunction getAll (color, space) {\n\tspace = ColorSpace.get(space);\n\treturn space.from(color);\n}\n\nfunction get (color, prop) {\n\tlet {space, index} = ColorSpace.resolveCoord(prop, color.space);\n\tlet coords = getAll(color, space);\n\treturn coords[index];\n}\n\nfunction setAll (color, space, coords) {\n\tspace = ColorSpace.get(space);\n\tcolor.coords = space.to(color.space, coords);\n\treturn color;\n}\n\n// Set properties and return current instance\nfunction set (color, prop, value) {\n\tcolor = getColor(color);\n\n\tif (arguments.length === 2 && type(arguments[1]) === \"object\") {\n\t\t// Argument is an object literal\n\t\tlet object = arguments[1];\n\t\tfor (let p in object) {\n\t\t\tset(color, p, object[p]);\n\t\t}\n\t}\n\telse {\n\t\tif (typeof value === \"function\") {\n\t\t\tvalue = value(get(color, prop));\n\t\t}\n\n\t\tlet {space, index} = ColorSpace.resolveCoord(prop, color.space);\n\t\tlet coords = getAll(color, space);\n\t\tcoords[index] = value;\n\t\tsetAll(color, space, coords);\n\t}\n\n\treturn color;\n}\n\nvar XYZ_D50 = new ColorSpace({\n\tid: \"xyz-d50\",\n\tname: \"XYZ D50\",\n\twhite: \"D50\",\n\tbase: XYZ_D65,\n\tfromBase: coords => adapt$1(XYZ_D65.white, \"D50\", coords),\n\ttoBase: coords => adapt$1(\"D50\", XYZ_D65.white, coords),\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\n// κ * ε  = 2^3 = 8\nconst ε$3 = 216/24389;  // 6^3/29^3 == (24/116)^3\nconst ε3$1 = 24/116;\nconst κ$1 = 24389/27;   // 29^3/3^3\n\nlet white$1 = WHITES.D50;\n\nvar lab = new ColorSpace({\n\tid: \"lab\",\n\tname: \"Lab\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"L\"\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-125, 125]\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-125, 125]\n\t\t}\n\t},\n\n\t// Assuming XYZ is relative to D50, convert to CIE Lab\n\t// from CIE standard, which now defines these as a rational fraction\n\twhite: white$1,\n\n\tbase: XYZ_D50,\n\t// Convert D50-adapted XYX to Lab\n\t//  CIE 15.3:2004 section 8.2.1.1\n\tfromBase (XYZ) {\n\t\t// compute xyz, which is XYZ scaled relative to reference white\n\t\tlet xyz = XYZ.map((value, i) => value / white$1[i]);\n\n\t\t// now compute f\n\t\tlet f = xyz.map(value => value > ε$3 ? Math.cbrt(value) : (κ$1 * value + 16)/116);\n\n\t\treturn [\n\t\t\t(116 * f[1]) - 16, \t // L\n\t\t\t500 * (f[0] - f[1]), // a\n\t\t\t200 * (f[1] - f[2])  // b\n\t\t];\n\t},\n\t// Convert Lab to D50-adapted XYZ\n\t// Same result as CIE 15.3:2004 Appendix D although the derivation is different\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\ttoBase (Lab) {\n\t\t// compute f, starting with the luminance-related term\n\t\tlet f = [];\n\t\tf[1] = (Lab[0] + 16)/116;\n\t\tf[0] = Lab[1]/500 + f[1];\n\t\tf[2] = f[1] - Lab[2]/200;\n\n\t\t// compute xyz\n\t\tlet xyz = [\n\t\t\tf[0]   > ε3$1  ?  Math.pow(f[0], 3)            : (116*f[0]-16)/κ$1,\n\t\t\tLab[0] > 8   ?  Math.pow((Lab[0]+16)/116, 3) : Lab[0]/κ$1,\n\t\t\tf[2]   > ε3$1  ?  Math.pow(f[2], 3)            : (116*f[2]-16)/κ$1\n\t\t];\n\n\t\t// Compute XYZ by scaling xyz by reference white\n\t\treturn xyz.map((value, i) => value * white$1[i]);\n\t},\n\n\tformats: {\n\t\t\"lab\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number> | <percentage>[-1,1]\", \"<number> | <percentage>[-1,1]\"],\n\t\t}\n\t}\n});\n\nfunction constrain (angle) {\n\treturn ((angle % 360) + 360) % 360;\n}\n\nfunction adjust (arc, angles) {\n\tif (arc === \"raw\") {\n\t\treturn angles;\n\t}\n\n\tlet [a1, a2] = angles.map(constrain);\n\n\tlet angleDiff = a2 - a1;\n\n\tif (arc === \"increasing\") {\n\t\tif (angleDiff < 0) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\telse if (arc === \"decreasing\") {\n\t\tif (angleDiff > 0) {\n\t\t\ta1 += 360;\n\t\t}\n\t}\n\telse if (arc === \"longer\") {\n\t\tif (-180 < angleDiff && angleDiff < 180) {\n\t\t\tif (angleDiff > 0) {\n\t\t\t\ta1 += 360;\n\t\t\t}\n\t\t\telse {\n\t\t\t\ta2 += 360;\n\t\t\t}\n\t\t}\n\t}\n\telse if (arc === \"shorter\") {\n\t\tif (angleDiff > 180) {\n\t\t\ta1 += 360;\n\t\t}\n\t\telse if (angleDiff < -180) {\n\t\t\ta2 += 360;\n\t\t}\n\t}\n\n\treturn [a1, a2];\n}\n\nvar lch = new ColorSpace({\n\tid: \"lch\",\n\tname: \"LCH\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"Lightness\"\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 150],\n\t\t\tname: \"Chroma\"\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t}\n\t},\n\n\tbase: lab,\n\tfromBase (Lab) {\n\t\t// Convert to polar form\n\t\tlet [L, a, b] = Lab;\n\t\tlet hue;\n\t\tconst ε = 0.02;\n\n\t\tif (Math.abs(a) < ε && Math.abs(b) < ε) {\n\t\t\thue = NaN;\n\t\t}\n\t\telse {\n\t\t\thue = Math.atan2(b, a) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tL, // L is still L\n\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\tconstrain(hue) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\ttoBase (LCH) {\n\t\t// Convert from polar form\n\t\tlet [Lightness, Chroma, Hue] = LCH;\n\t\t// Clamp any negative Chroma\n\t\tif (Chroma < 0) {\n\t\t\tChroma = 0;\n\t\t}\t\t// Deal with NaN Hue\n\t\tif (isNaN(Hue)) {\n\t\t\tHue = 0;\n\t\t}\n\t\treturn [\n\t\t\tLightness, // L is still L\n\t\t\tChroma * Math.cos(Hue * Math.PI / 180), // a\n\t\t\tChroma * Math.sin(Hue * Math.PI / 180)  // b\n\t\t];\n\t},\n\n\tformats: {\n\t\t\"lch\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number> | <percentage>\", \"<number> | <angle>\"],\n\t\t}\n\t}\n});\n\n// deltaE2000 is a statistically significant improvement\n// and is recommended by the CIE and Idealliance\n// especially for color differences less than 10 deltaE76\n// but is wicked complicated\n// and many implementations have small errors!\n// DeltaE2000 is also discontinuous; in case this\n// matters to you, use deltaECMC instead.\n\nconst Gfactor = 25 ** 7;\nconst π$1 = Math.PI;\nconst r2d = 180 / π$1;\nconst d2r$1 = π$1 / 180;\n\nfunction deltaE2000 (color, sample, {kL = 1, kC = 1, kH = 1} = {}) {\n\t// Given this color as the reference\n\t// and the function parameter as the sample,\n\t// calculate deltaE 2000.\n\n\t// This implementation assumes the parametric\n\t// weighting factors kL, kC and kH\n\t// for the influence of viewing conditions\n\t// are all 1, as sadly seems typical.\n\t// kL should be increased for lightness texture or noise\n\t// and kC increased for chroma noise\n\n\tlet [L1, a1, b1] = lab.from(color);\n\tlet C1 = lch.from(lab, [L1, a1, b1])[1];\n\tlet [L2, a2, b2] = lab.from(sample);\n\tlet C2 = lch.from(lab, [L2, a2, b2])[1];\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\tlet Cbar = (C1 + C2)/2; // mean Chroma\n\n\t// calculate a-axis asymmetry factor from mean Chroma\n\t// this turns JND ellipses for near-neutral colors back into circles\n\tlet C7 = Cbar ** 7;\n\n\tlet G = 0.5 * (1 - Math.sqrt(C7/(C7 + Gfactor)));\n\n\t// scale a axes by asymmetry factor\n\t// this by the way is why there is no Lab2000 colorspace\n\tlet adash1 = (1 + G) * a1;\n\tlet adash2 = (1 + G) * a2;\n\n\t// calculate new Chroma from scaled a and original b axes\n\tlet Cdash1 = Math.sqrt(adash1 ** 2 + b1 ** 2);\n\tlet Cdash2 = Math.sqrt(adash2 ** 2 + b2 ** 2);\n\n\t// calculate new hues, with zero hue for true neutrals\n\t// and in degrees, not radians\n\n\tlet h1 = (adash1 === 0 && b1 === 0)? 0: Math.atan2(b1, adash1);\n\tlet h2 = (adash2 === 0 && b2 === 0)? 0: Math.atan2(b2, adash2);\n\n\tif (h1 < 0) {\n\t\th1 += 2 * π$1;\n\t}\n\tif (h2 < 0) {\n\t\th2 += 2 * π$1;\n\t}\n\n\th1 *= r2d;\n\th2 *= r2d;\n\n\t// Lightness and Chroma differences; sign matters\n\tlet ΔL = L2 - L1;\n\tlet ΔC = Cdash2 - Cdash1;\n\n\t// Hue difference, getting the sign correct\n\tlet hdiff = h2 - h1;\n\tlet hsum = h1 + h2;\n\tlet habs = Math.abs(hdiff);\n\tlet Δh;\n\n\tif (Cdash1 * Cdash2 === 0) {\n\t\tΔh = 0;\n\t}\n\telse if (habs <= 180) {\n\t\tΔh = hdiff;\n\t}\n\telse if (hdiff > 180) {\n\t\tΔh = hdiff - 360;\n\t}\n\telse if (hdiff < -180) {\n\t\tΔh = hdiff + 360;\n\t}\n\telse {\n\t\tconsole.log(\"the unthinkable has happened\");\n\t}\n\n\t// weighted Hue difference, more for larger Chroma\n\tlet ΔH = 2 * Math.sqrt(Cdash2 * Cdash1) * Math.sin(Δh * d2r$1 / 2);\n\n\t// calculate mean Lightness and Chroma\n\tlet Ldash = (L1 + L2)/2;\n\tlet Cdash = (Cdash1 + Cdash2)/2;\n\tlet Cdash7 = Math.pow(Cdash, 7);\n\n\t// Compensate for non-linearity in the blue region of Lab.\n\t// Four possibilities for hue weighting factor,\n\t// depending on the angles, to get the correct sign\n\tlet hdash;\n\tif (Cdash1 * Cdash2 === 0) {\n\t\thdash = hsum;   // which should be zero\n\t}\n\telse if (habs <= 180) {\n\t\thdash = hsum / 2;\n\t}\n\telse if (hsum < 360) {\n\t\thdash = (hsum + 360) / 2;\n\t}\n\telse {\n\t\thdash = (hsum - 360) / 2;\n\t}\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor\n\t// a background with L=50 is assumed\n\tlet lsq = (Ldash - 50) ** 2;\n\tlet SL = 1 + ((0.015 * lsq) / Math.sqrt(20 + lsq));\n\n\t// SC Chroma factor, similar to those in CMC and deltaE 94 formulae\n\tlet SC = 1 + 0.045 * Cdash;\n\n\t// Cross term T for blue non-linearity\n\tlet T = 1;\n\tT -= (0.17 * Math.cos((     hdash - 30)  * d2r$1));\n\tT += (0.24 * Math.cos(  2 * hdash        * d2r$1));\n\tT += (0.32 * Math.cos(((3 * hdash) + 6)  * d2r$1));\n\tT -= (0.20 * Math.cos(((4 * hdash) - 63) * d2r$1));\n\n\t// SH Hue factor depends on Chroma,\n\t// as well as adjusted hue angle like deltaE94.\n\tlet SH = 1 + 0.015 * Cdash * T;\n\n\t// RT Hue rotation term compensates for rotation of JND ellipses\n\t// and Munsell constant hue lines\n\t// in the medium-high Chroma blue region\n\t// (Hue 225 to 315)\n\tlet Δθ = 30 * Math.exp(-1 * (((hdash - 275)/25) ** 2));\n\tlet RC = 2 * Math.sqrt(Cdash7/(Cdash7 + Gfactor));\n\tlet RT = -1 * Math.sin(2 * Δθ * d2r$1) * RC;\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ΔL / (kL * SL)) ** 2;\n\tdE += (ΔC / (kC * SC)) ** 2;\n\tdE += (ΔH / (kH * SH)) ** 2;\n\tdE += RT * (ΔC / (kC * SC)) * (ΔH / (kH * SH));\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n}\n\nconst ε$2 = .000075;\n\n/**\n * Check if a color is in gamut of either its own or another color space\n * @return {Boolean} Is the color in gamut?\n */\nfunction inGamut (color, space = color.space, {epsilon = ε$2} = {}) {\n\tcolor = getColor(color);\n\tspace = ColorSpace.get(space);\n\tlet coords = color.coords;\n\n\tif (space !== color.space) {\n\t\tcoords = space.from(color);\n\t}\n\n\treturn space.inGamut(coords, {epsilon});\n}\n\nfunction clone (color) {\n\treturn {\n\t\tspace: color.space,\n\t\tcoords: color.coords.slice(),\n\t\talpha: color.alpha\n\t};\n}\n\n/**\n * Force coordinates to be in gamut of a certain color space.\n * Mutates the color it is passed.\n * @param {Object} options\n * @param {string} options.method - How to force into gamut.\n *        If \"clip\", coordinates are just clipped to their reference range.\n *        If in the form [colorSpaceId].[coordName], that coordinate is reduced\n *        until the color is in gamut. Please note that this may produce nonsensical\n *        results for certain coordinates (e.g. hue) or infinite loops if reducing the coordinate never brings the color in gamut.\n * @param {ColorSpace|string} options.space - The space whose gamut we want to map to\n */\nfunction toGamut (color, {method = defaults.gamut_mapping, space = color.space} = {}) {\n\tif (isString(arguments[1])) {\n\t\tspace = arguments[1];\n\t}\n\n\tspace = ColorSpace.get(space);\n\n\tif (inGamut(color, space, {epsilon: 0})) {\n\t\treturn getColor(color);\n\t}\n\n\t// 3 spaces:\n\t// color.space: current color space\n\t// space: space whose gamut we are mapping to\n\t// mapSpace: space with the coord we're reducing\n\tlet spaceColor = to(color, space);\n\n\tif (method !== \"clip\" && !inGamut(color, space)) {\n\t\tlet clipped = toGamut(clone(spaceColor), {method: \"clip\", space});\n\t\tif (deltaE2000(color, clipped) > 2) {\n\t\t\t// Reduce a coordinate of a certain color space until the color is in gamut\n\t\t\tlet coordMeta = ColorSpace.resolveCoord(method);\n\t\t\tlet mapSpace = coordMeta.space;\n\t\t\tlet coordId = coordMeta.id;\n\n\t\t\tlet mappedColor = to(spaceColor, mapSpace);\n\t\t\tlet bounds = coordMeta.range || coordMeta.refRange;\n\t\t\tlet min = bounds[0];\n\t\t\tlet ε = .01; // for deltaE\n\t\t\tlet low = min;\n\t\t\tlet high = get(mappedColor, coordId);\n\n\t\t\twhile (high - low > ε) {\n\t\t\t\tlet clipped = clone(mappedColor);\n\t\t\t\tclipped = toGamut(clipped, {space, method: \"clip\"});\n\t\t\t\tlet deltaE = deltaE2000(mappedColor, clipped);\n\n\t\t\t\tif (deltaE - 2 < ε) {\n\t\t\t\t\tlow = get(mappedColor, coordId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thigh = get(mappedColor, coordId);\n\t\t\t\t}\n\n\t\t\t\tset(mappedColor, coordId, (low + high) / 2);\n\t\t\t}\n\n\t\t\tspaceColor = to(mappedColor, space);\n\t\t}\n\t\telse {\n\t\t\tspaceColor = clipped;\n\t\t}\n\t}\n\n\tif (method === \"clip\" // Dumb coord clipping\n\t\t// finish off smarter gamut mapping with clip to get rid of ε, see #17\n\t\t|| !inGamut(spaceColor, space, {epsilon: 0})\n\t) {\n\t\tlet bounds = Object.values(space.coords).map(c => c.range || []);\n\n\t\tspaceColor.coords = spaceColor.coords.map((c, i) => {\n\t\t\tlet [min, max] = bounds[i];\n\n\t\t\tif (min !== undefined) {\n\t\t\t\tc = Math.max(min, c);\n\t\t\t}\n\n\t\t\tif (max !== undefined) {\n\t\t\t\tc = Math.min(c, max);\n\t\t\t}\n\n\t\t\treturn c;\n\t\t});\n\t}\n\n\tif (space !== color.space) {\n\t\tspaceColor = to(spaceColor, color.space);\n\t}\n\n\tcolor.coords = spaceColor.coords;\n\treturn color;\n}\n\ntoGamut.returns = \"color\";\n\n/**\n * Convert to color space and return a new color\n * @param {Object|string} space - Color space object or id\n * @param {Object} options\n * @param {boolean} options.inGamut - Whether to force resulting color in gamut\n * @returns {Color}\n */\nfunction to (color, space, {inGamut} = {}) {\n\tcolor = getColor(color);\n\tspace = ColorSpace.get(space);\n\n\tlet coords = space.from(color);\n\tlet ret = {space, coords, alpha: color.alpha};\n\n\tif (inGamut) {\n\t\tret = toGamut(ret);\n\t}\n\n\treturn ret;\n}\n\nto.returns = \"color\";\n\n/**\n * Generic toString() method, outputs a color(spaceId ...coords) function, a functional syntax, or custom formats defined by the color space\n * @param {Object} options\n * @param {number} options.precision - Significant digits\n * @param {boolean} options.inGamut - Adjust coordinates to fit in gamut first? [default: false]\n */\nfunction serialize (color, {\n\tprecision = defaults.precision,\n\tformat = \"default\",\n\tinGamut: inGamut$1 = true,\n\t...customOptions\n} = {}) {\n\tlet ret;\n\n\tcolor = getColor(color);\n\n\tlet formatId = format;\n\tformat = color.space.getFormat(format)\n\t\t   ?? color.space.getFormat(\"default\")\n\t\t   ?? ColorSpace.DEFAULT_FORMAT;\n\n\tinGamut$1 ||= format.toGamut;\n\n\tlet coords = color.coords;\n\n\t// Convert NaN to zeros to have a chance at a valid CSS color\n\t// Also convert -0 to 0\n\t// This also clones it so we can manipulate it\n\tcoords = coords.map(c => c? c : 0);\n\n\tif (inGamut$1 && !inGamut(color)) {\n\t\tcoords = toGamut(clone(color), inGamut$1 === true? undefined : inGamut$1).coords;\n\t}\n\n\tif (format.type === \"custom\") {\n\t\tcustomOptions.precision = precision;\n\n\t\tif (format.serialize) {\n\t\t\tret = format.serialize(coords, color.alpha, customOptions);\n\t\t}\n\t\telse {\n\t\t\tthrow new TypeError(`format ${formatId} can only be used to parse colors, not for serialization`);\n\t\t}\n\t}\n\telse {\n\t\t// Functional syntax\n\t\tlet name = format.name || \"color\";\n\n\t\tif (format.serializeCoords) {\n\t\t\tcoords = format.serializeCoords(coords, precision);\n\t\t}\n\t\telse {\n\t\t\tif (precision !== null) {\n\t\t\t\tcoords = coords.map(c => toPrecision(c, precision));\n\t\t\t}\n\t\t}\n\n\t\tlet args = [...coords];\n\n\t\tif (name === \"color\") {\n\t\t\t// If output is a color() function, add colorspace id as first argument\n\t\t\tlet cssId = format.id || format.ids?.[0] || color.space.id;\n\t\t\targs.unshift(cssId);\n\t\t}\n\n\t\tlet alpha = color.alpha;\n\t\tif (precision !== null) {\n\t\t\talpha = toPrecision(alpha, precision);\n\t\t}\n\n\t\tlet strAlpha = color.alpha < 1 && !format.noAlpha? `${format.commas? \",\" : \" /\"} ${alpha}` : \"\";\n\t\tret = `${name}(${args.join(format.commas? \", \" : \" \")}${strAlpha})`;\n\t}\n\n\treturn ret;\n}\n\n// convert an array of linear-light rec2020 values to CIE XYZ\n// using  D65 (no chromatic adaptation)\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// 0 is actually calculated as  4.994106574466076e-17\nconst toXYZ_M$5 = [\n\t[ 0.6369580483012914, 0.14461690358620832,  0.1688809751641721  ],\n\t[ 0.2627002120112671, 0.6779980715188708,   0.05930171646986196 ],\n\t[ 0.000000000000000,  0.028072693049087428, 1.060985057710791   ]\n];\n\n// from ITU-R BT.2124-0 Annex 2 p.3\nconst fromXYZ_M$5 = [\n\t[  1.716651187971268,  -0.355670783776392, -0.253366281373660  ],\n\t[ -0.666684351832489,   1.616481236634939,  0.0157685458139111 ],\n\t[  0.017639857445311,  -0.042770613257809,  0.942103121235474  ]\n];\n\nvar REC2020Linear = new RGBColorSpace({\n\tid: \"rec2020-linear\",\n\tname: \"Linear REC.2020\",\n\twhite: \"D65\",\n\ttoXYZ_M: toXYZ_M$5,\n\tfromXYZ_M: fromXYZ_M$5,\n\tformats: {\n\t\tcolor: {},\n\t}\n});\n\n// import sRGB from \"./srgb.js\";\n\nconst α = 1.09929682680944;\nconst β = 0.018053968510807;\n\nvar REC2020 = new RGBColorSpace({\n\tid: \"rec2020\",\n\tname: \"REC.2020\",\n\tbase: REC2020Linear,\n\t// Non-linear transfer function from Rec. ITU-R BT.2020-2 table 4\n\ttoBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val < β * 4.5 ) {\n\t\t\t\treturn val / 4.5;\n\t\t\t}\n\n\t\t\treturn Math.pow((val + α -1 ) / α, 1/0.45);\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val >= β ) {\n\t\t\t\treturn α * Math.pow(val, 0.45) - (α - 1);\n\t\t\t}\n\n\t\t\treturn 4.5 * val;\n\t\t});\n\t},\n\tformats: {\n\t\tcolor: {},\n\t}\n});\n\nconst toXYZ_M$4 = [\n\t[0.4865709486482162, 0.26566769316909306, 0.1982172852343625],\n\t[0.2289745640697488, 0.6917385218365064,  0.079286914093745],\n\t[0.0000000000000000, 0.04511338185890264, 1.043944368900976]\n];\n\nconst fromXYZ_M$4 = [\n\t[ 2.493496911941425,   -0.9313836179191239, -0.40271078445071684],\n\t[-0.8294889695615747,   1.7626640603183463,  0.023624685841943577],\n\t[ 0.03584583024378447, -0.07617238926804182, 0.9568845240076872]\n];\n\nvar P3Linear = new RGBColorSpace({\n\tid: \"p3-linear\",\n\tname: \"Linear P3\",\n\twhite: \"D65\",\n\ttoXYZ_M: toXYZ_M$4,\n\tfromXYZ_M: fromXYZ_M$4\n});\n\n// This is the linear-light version of sRGB\n// as used for example in SVG filters\n// or in Canvas\n\n// This matrix was calculated directly from the RGB and white chromaticities\n// when rounded to 8 decimal places, it agrees completely with the official matrix\n// see https://github.com/w3c/csswg-drafts/issues/5922\nconst toXYZ_M$3 = [\n\t[ 0.41239079926595934, 0.357584339383878,   0.1804807884018343  ],\n\t[ 0.21263900587151027, 0.715168678767756,   0.07219231536073371 ],\n\t[ 0.01933081871559182, 0.11919477979462598, 0.9505321522496607  ]\n];\n\n// This matrix is the inverse of the above;\n// again it agrees with the official definition when rounded to 8 decimal places\nconst fromXYZ_M$3 = [\n\t[  3.2409699419045226,  -1.537383177570094,   -0.4986107602930034  ],\n\t[ -0.9692436362808796,   1.8759675015077202,   0.04155505740717559 ],\n\t[  0.05563007969699366, -0.20397695888897652,  1.0569715142428786  ]\n];\n\nvar sRGBLinear = new RGBColorSpace({\n\tid: \"srgb-linear\",\n\tname: \"Linear sRGB\",\n\twhite: \"D65\",\n\ttoXYZ_M: toXYZ_M$3,\n\tfromXYZ_M: fromXYZ_M$3,\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\n/* List of CSS color keywords\n * Note that this does not include currentColor, transparent,\n * or system colors\n */\n\n// To produce: Visit https://www.w3.org/TR/css-color-4/#named-colors\n// and run in the console:\n// copy($$(\"tr\", $(\".named-color-table tbody\")).map(tr => `\"${tr.cells[2].textContent.trim()}\": [${tr.cells[4].textContent.trim().split(/\\s+/).map(c => c === \"0\"? \"0\" : c === \"255\"? \"1\" : c + \" / 255\").join(\", \")}]`).join(\",\\n\"))\nvar KEYWORDS = {\n\t\"aliceblue\": [240 / 255, 248 / 255, 1],\n\t\"antiquewhite\": [250 / 255, 235 / 255, 215 / 255],\n\t\"aqua\": [0, 1, 1],\n\t\"aquamarine\": [127 / 255, 1, 212 / 255],\n\t\"azure\": [240 / 255, 1, 1],\n\t\"beige\": [245 / 255, 245 / 255, 220 / 255],\n\t\"bisque\": [1, 228 / 255, 196 / 255],\n\t\"black\": [0, 0, 0],\n\t\"blanchedalmond\": [1, 235 / 255, 205 / 255],\n\t\"blue\": [0, 0, 1],\n\t\"blueviolet\": [138 / 255, 43 / 255, 226 / 255],\n\t\"brown\": [165 / 255, 42 / 255, 42 / 255],\n\t\"burlywood\": [222 / 255, 184 / 255, 135 / 255],\n\t\"cadetblue\": [95 / 255, 158 / 255, 160 / 255],\n\t\"chartreuse\": [127 / 255, 1, 0],\n\t\"chocolate\": [210 / 255, 105 / 255, 30 / 255],\n\t\"coral\": [1, 127 / 255, 80 / 255],\n\t\"cornflowerblue\": [100 / 255, 149 / 255, 237 / 255],\n\t\"cornsilk\": [1, 248 / 255, 220 / 255],\n\t\"crimson\": [220 / 255, 20 / 255, 60 / 255],\n\t\"cyan\": [0, 1, 1],\n\t\"darkblue\": [0, 0, 139 / 255],\n\t\"darkcyan\": [0, 139 / 255, 139 / 255],\n\t\"darkgoldenrod\": [184 / 255, 134 / 255, 11 / 255],\n\t\"darkgray\": [169 / 255, 169 / 255, 169 / 255],\n\t\"darkgreen\": [0, 100 / 255, 0],\n\t\"darkgrey\": [169 / 255, 169 / 255, 169 / 255],\n\t\"darkkhaki\": [189 / 255, 183 / 255, 107 / 255],\n\t\"darkmagenta\": [139 / 255, 0, 139 / 255],\n\t\"darkolivegreen\": [85 / 255, 107 / 255, 47 / 255],\n\t\"darkorange\": [1, 140 / 255, 0],\n\t\"darkorchid\": [153 / 255, 50 / 255, 204 / 255],\n\t\"darkred\": [139 / 255, 0, 0],\n\t\"darksalmon\": [233 / 255, 150 / 255, 122 / 255],\n\t\"darkseagreen\": [143 / 255, 188 / 255, 143 / 255],\n\t\"darkslateblue\": [72 / 255, 61 / 255, 139 / 255],\n\t\"darkslategray\": [47 / 255, 79 / 255, 79 / 255],\n\t\"darkslategrey\": [47 / 255, 79 / 255, 79 / 255],\n\t\"darkturquoise\": [0, 206 / 255, 209 / 255],\n\t\"darkviolet\": [148 / 255, 0, 211 / 255],\n\t\"deeppink\": [1, 20 / 255, 147 / 255],\n\t\"deepskyblue\": [0, 191 / 255, 1],\n\t\"dimgray\": [105 / 255, 105 / 255, 105 / 255],\n\t\"dimgrey\": [105 / 255, 105 / 255, 105 / 255],\n\t\"dodgerblue\": [30 / 255, 144 / 255, 1],\n\t\"firebrick\": [178 / 255, 34 / 255, 34 / 255],\n\t\"floralwhite\": [1, 250 / 255, 240 / 255],\n\t\"forestgreen\": [34 / 255, 139 / 255, 34 / 255],\n\t\"fuchsia\": [1, 0, 1],\n\t\"gainsboro\": [220 / 255, 220 / 255, 220 / 255],\n\t\"ghostwhite\": [248 / 255, 248 / 255, 1],\n\t\"gold\": [1, 215 / 255, 0],\n\t\"goldenrod\": [218 / 255, 165 / 255, 32 / 255],\n\t\"gray\": [128 / 255, 128 / 255, 128 / 255],\n\t\"green\": [0, 128 / 255, 0],\n\t\"greenyellow\": [173 / 255, 1, 47 / 255],\n\t\"grey\": [128 / 255, 128 / 255, 128 / 255],\n\t\"honeydew\": [240 / 255, 1, 240 / 255],\n\t\"hotpink\": [1, 105 / 255, 180 / 255],\n\t\"indianred\": [205 / 255, 92 / 255, 92 / 255],\n\t\"indigo\": [75 / 255, 0, 130 / 255],\n\t\"ivory\": [1, 1, 240 / 255],\n\t\"khaki\": [240 / 255, 230 / 255, 140 / 255],\n\t\"lavender\": [230 / 255, 230 / 255, 250 / 255],\n\t\"lavenderblush\": [1, 240 / 255, 245 / 255],\n\t\"lawngreen\": [124 / 255, 252 / 255, 0],\n\t\"lemonchiffon\": [1, 250 / 255, 205 / 255],\n\t\"lightblue\": [173 / 255, 216 / 255, 230 / 255],\n\t\"lightcoral\": [240 / 255, 128 / 255, 128 / 255],\n\t\"lightcyan\": [224 / 255, 1, 1],\n\t\"lightgoldenrodyellow\": [250 / 255, 250 / 255, 210 / 255],\n\t\"lightgray\": [211 / 255, 211 / 255, 211 / 255],\n\t\"lightgreen\": [144 / 255, 238 / 255, 144 / 255],\n\t\"lightgrey\": [211 / 255, 211 / 255, 211 / 255],\n\t\"lightpink\": [1, 182 / 255, 193 / 255],\n\t\"lightsalmon\": [1, 160 / 255, 122 / 255],\n\t\"lightseagreen\": [32 / 255, 178 / 255, 170 / 255],\n\t\"lightskyblue\": [135 / 255, 206 / 255, 250 / 255],\n\t\"lightslategray\": [119 / 255, 136 / 255, 153 / 255],\n\t\"lightslategrey\": [119 / 255, 136 / 255, 153 / 255],\n\t\"lightsteelblue\": [176 / 255, 196 / 255, 222 / 255],\n\t\"lightyellow\": [1, 1, 224 / 255],\n\t\"lime\": [0, 1, 0],\n\t\"limegreen\": [50 / 255, 205 / 255, 50 / 255],\n\t\"linen\": [250 / 255, 240 / 255, 230 / 255],\n\t\"magenta\": [1, 0, 1],\n\t\"maroon\": [128 / 255, 0, 0],\n\t\"mediumaquamarine\": [102 / 255, 205 / 255, 170 / 255],\n\t\"mediumblue\": [0, 0, 205 / 255],\n\t\"mediumorchid\": [186 / 255, 85 / 255, 211 / 255],\n\t\"mediumpurple\": [147 / 255, 112 / 255, 219 / 255],\n\t\"mediumseagreen\": [60 / 255, 179 / 255, 113 / 255],\n\t\"mediumslateblue\": [123 / 255, 104 / 255, 238 / 255],\n\t\"mediumspringgreen\": [0, 250 / 255, 154 / 255],\n\t\"mediumturquoise\": [72 / 255, 209 / 255, 204 / 255],\n\t\"mediumvioletred\": [199 / 255, 21 / 255, 133 / 255],\n\t\"midnightblue\": [25 / 255, 25 / 255, 112 / 255],\n\t\"mintcream\": [245 / 255, 1, 250 / 255],\n\t\"mistyrose\": [1, 228 / 255, 225 / 255],\n\t\"moccasin\": [1, 228 / 255, 181 / 255],\n\t\"navajowhite\": [1, 222 / 255, 173 / 255],\n\t\"navy\": [0, 0, 128 / 255],\n\t\"oldlace\": [253 / 255, 245 / 255, 230 / 255],\n\t\"olive\": [128 / 255, 128 / 255, 0],\n\t\"olivedrab\": [107 / 255, 142 / 255, 35 / 255],\n\t\"orange\": [1, 165 / 255, 0],\n\t\"orangered\": [1, 69 / 255, 0],\n\t\"orchid\": [218 / 255, 112 / 255, 214 / 255],\n\t\"palegoldenrod\": [238 / 255, 232 / 255, 170 / 255],\n\t\"palegreen\": [152 / 255, 251 / 255, 152 / 255],\n\t\"paleturquoise\": [175 / 255, 238 / 255, 238 / 255],\n\t\"palevioletred\": [219 / 255, 112 / 255, 147 / 255],\n\t\"papayawhip\": [1, 239 / 255, 213 / 255],\n\t\"peachpuff\": [1, 218 / 255, 185 / 255],\n\t\"peru\": [205 / 255, 133 / 255, 63 / 255],\n\t\"pink\": [1, 192 / 255, 203 / 255],\n\t\"plum\": [221 / 255, 160 / 255, 221 / 255],\n\t\"powderblue\": [176 / 255, 224 / 255, 230 / 255],\n\t\"purple\": [128 / 255, 0, 128 / 255],\n\t\"rebeccapurple\": [102 / 255, 51 / 255, 153 / 255],\n\t\"red\": [1, 0, 0],\n\t\"rosybrown\": [188 / 255, 143 / 255, 143 / 255],\n\t\"royalblue\": [65 / 255, 105 / 255, 225 / 255],\n\t\"saddlebrown\": [139 / 255, 69 / 255, 19 / 255],\n\t\"salmon\": [250 / 255, 128 / 255, 114 / 255],\n\t\"sandybrown\": [244 / 255, 164 / 255, 96 / 255],\n\t\"seagreen\": [46 / 255, 139 / 255, 87 / 255],\n\t\"seashell\": [1, 245 / 255, 238 / 255],\n\t\"sienna\": [160 / 255, 82 / 255, 45 / 255],\n\t\"silver\": [192 / 255, 192 / 255, 192 / 255],\n\t\"skyblue\": [135 / 255, 206 / 255, 235 / 255],\n\t\"slateblue\": [106 / 255, 90 / 255, 205 / 255],\n\t\"slategray\": [112 / 255, 128 / 255, 144 / 255],\n\t\"slategrey\": [112 / 255, 128 / 255, 144 / 255],\n\t\"snow\": [1, 250 / 255, 250 / 255],\n\t\"springgreen\": [0, 1, 127 / 255],\n\t\"steelblue\": [70 / 255, 130 / 255, 180 / 255],\n\t\"tan\": [210 / 255, 180 / 255, 140 / 255],\n\t\"teal\": [0, 128 / 255, 128 / 255],\n\t\"thistle\": [216 / 255, 191 / 255, 216 / 255],\n\t\"tomato\": [1, 99 / 255, 71 / 255],\n\t\"turquoise\": [64 / 255, 224 / 255, 208 / 255],\n\t\"violet\": [238 / 255, 130 / 255, 238 / 255],\n\t\"wheat\": [245 / 255, 222 / 255, 179 / 255],\n\t\"white\": [1, 1, 1],\n\t\"whitesmoke\": [245 / 255, 245 / 255, 245 / 255],\n\t\"yellow\": [1, 1, 0],\n\t\"yellowgreen\": [154 / 255, 205 / 255, 50 / 255]\n};\n\nlet coordGrammar = Array(3).fill(\"<percentage> | <number>[0, 255]\");\nlet coordGrammarNumber = Array(3).fill(\"<number>[0, 255]\");\n\nvar sRGB = new RGBColorSpace({\n\tid: \"srgb\",\n\tname: \"sRGB\",\n\tbase: sRGBLinear,\n\tfromBase: rgb => {\n\t\t// convert an array of linear-light sRGB values in the range 0.0-1.0\n\t\t// to gamma corrected form\n\t\t// https://en.wikipedia.org/wiki/SRGB\n\t\treturn rgb.map(val => {\n\t\t\tlet sign = val < 0? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs > 0.0031308) {\n\t\t\t\treturn sign * (1.055 * (abs ** (1/2.4)) - 0.055);\n\t\t\t}\n\n\t\t\treturn 12.92 * val;\n\t\t});\n\t},\n\ttoBase: rgb => {\n\t\t// convert an array of sRGB values in the range 0.0 - 1.0\n\t\t// to linear light (un-companded) form.\n\t\t// https://en.wikipedia.org/wiki/SRGB\n\t\treturn rgb.map(val => {\n\t\t\tlet sign = val < 0? -1 : 1;\n\t\t\tlet abs = val * sign;\n\n\t\t\tif (abs < 0.04045) {\n\t\t\t\treturn val / 12.92;\n\t\t\t}\n\n\t\t\treturn sign * (((abs + 0.055) / 1.055) ** 2.4);\n\t\t});\n\t},\n\tformats: {\n\t\t\"rgb\": {\n\t\t\tcoords: coordGrammar,\n\t\t},\n\t\t\"rgb_number\": {\n\t\t\tname: \"rgb\",\n\t\t\tcommas: true,\n\t\t\tcoords: coordGrammarNumber,\n\t\t\tnoAlpha: true,\n\t\t},\n\t\t\"color\": { /* use defaults */ },\n\t\t\"rgba\": {\n\t\t\tcoords: coordGrammar,\n\t\t\tcommas: true,\n\t\t\tlastAlpha: true,\n\t\t},\n\t\t\"rgba_number\": {\n\t\t\tname: \"rgba\",\n\t\t\tcommas: true,\n\t\t\tcoords: coordGrammarNumber\n\t\t},\n\t\t\"hex\": {\n\t\t\ttype: \"custom\",\n\t\t\ttoGamut: true,\n\t\t\ttest: str => /^#([a-f0-9]{3,4}){1,2}$/i.test(str),\n\t\t\tparse (str) {\n\t\t\t\tif (str.length <= 5) {\n\t\t\t\t\t// #rgb or #rgba, duplicate digits\n\t\t\t\t\tstr = str.replace(/[a-f0-9]/gi, \"$&$&\");\n\t\t\t\t}\n\n\t\t\t\tlet rgba = [];\n\t\t\t\tstr.replace(/[a-f0-9]{2}/gi, component => {\n\t\t\t\t\trgba.push(parseInt(component, 16) / 255);\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tspaceId: \"srgb\",\n\t\t\t\t\tcoords: rgba.slice(0, 3),\n\t\t\t\t\talpha: rgba.slice(3)[0]\n\t\t\t\t};\n\t\t\t},\n\t\t\tserialize: (coords, alpha, {\n\t\t\t\tcollapse = true // collapse to 3-4 digit hex when possible?\n\t\t\t} = {}) => {\n\t\t\t\tif (alpha < 1) {\n\t\t\t\t\tcoords.push(alpha);\n\t\t\t\t}\n\n\t\t\t\tcoords = coords.map(c => Math.round(c * 255));\n\n\t\t\t\tlet collapsible = collapse && coords.every(c => c % 17 === 0);\n\n\t\t\t\tlet hex = coords.map(c => {\n\t\t\t\t\tif (collapsible) {\n\t\t\t\t\t\treturn (c/17).toString(16);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn c.toString(16).padStart(2, \"0\");\n\t\t\t\t}).join(\"\");\n\n\t\t\t\treturn \"#\" + hex;\n\t\t\t}\n\t\t},\n\t\t\"keyword\": {\n\t\t\ttype: \"custom\",\n\t\t\ttest: str => /^[a-z]+$/i.test(str),\n\t\t\tparse (str) {\n\t\t\t\tstr = str.toLowerCase();\n\t\t\t\tlet ret = {spaceId: \"srgb\", coords: null, alpha: 1};\n\n\t\t\t\tif (str === \"transparent\") {\n\t\t\t\t\tret.coords = KEYWORDS.black;\n\t\t\t\t\tret.alpha = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tret.coords = KEYWORDS[str];\n\t\t\t\t}\n\n\t\t\t\tif (ret.coords) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t}\n});\n\nvar P3 = new RGBColorSpace({\n\tid: \"p3\",\n\tname: \"P3\",\n\tbase: P3Linear,\n\t// Gamma encoding/decoding is the same as sRGB\n\tfromBase: sRGB.fromBase,\n\ttoBase: sRGB.toBase,\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"display-p3\",\n\t\t}\n\t},\n});\n\n// Default space for CSS output. Code in Color.js makes this wider if there's a DOM available\ndefaults.display_space = sRGB;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n\t// Find widest supported color space for CSS\n\tfor (let space of [lab, REC2020, P3]) {\n\t\tlet coords = space.getMinCoords();\n\t\tlet color = {space, coords, alpha: 1};\n\t\tlet str = serialize(color);\n\n\t\tif (CSS.supports(\"color\", str)) {\n\t\t\tdefaults.display_space = space;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/**\n * Returns a serialization of the color that can actually be displayed in the browser.\n * If the default serialization can be displayed, it is returned.\n * Otherwise, the color is converted to Lab, REC2020, or P3, whichever is the widest supported.\n * In Node.js, this is basically equivalent to `serialize()` but returns a `String` object instead.\n *\n * @export\n * @param {{space, coords} | Color | string} color\n * @param {*} [options={}] Options to be passed to serialize()\n * @param {ColorSpace | string} [options.space = defaults.display_space] Color space to use for serialization if default is not supported\n * @returns {String} String object containing the serialized color with a color property containing the converted color (or the original, if no conversion was necessary)\n */\nfunction display (color, {space = defaults.display_space, ...options} = {}) {\n\tlet ret = serialize(color, options);\n\n\tif (typeof CSS === \"undefined\" || CSS.supports(\"color\", ret) || !defaults.display_space) {\n\t\tret = new String(ret);\n\t\tret.color = color;\n\t}\n\telse {\n\t\t// If we're here, what we were about to output is not supported\n\t\t// Fall back to fallback space\n\t\tlet fallbackColor = to(color, space);\n\t\tret = new String(serialize(fallbackColor, options));\n\t\tret.color = fallbackColor;\n\t}\n\n\treturn ret;\n}\n\n/**\n * Euclidean distance of colors in an arbitrary color space\n */\nfunction distance (color1, color2, space = \"lab\") {\n\tspace = ColorSpace.get(space);\n\n\tlet coords1 = space.from(color1);\n\tlet coords2 = space.from(color2);\n\n\treturn Math.sqrt(coords1.reduce((acc, c1, i) => {\n\t\tlet c2 = coords2[i];\n\t\tif (isNaN(c1) || isNaN(c2)) {\n\t\t\treturn acc;\n\t\t}\n\n\t\treturn acc + (c2 - c1) ** 2;\n\t}, 0));\n}\n\nfunction equals (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\treturn color1.space === color2.space\n\t\t   && color1.alpha === color2.alpha\n\t\t   && color1.coords.every((c, i) => c === color2.coords[i]);\n}\n\n/**\n * Relative luminance\n */\n\nfunction getLuminance (color) {\n\treturn get(color, [XYZ_D65, \"y\"]);\n}\n\nfunction setLuminance (color, value) {\n\tset(color, [XYZ_D65, \"y\"], value);\n}\n\nfunction register$2 (Color) {\n\tObject.defineProperty(Color.prototype, \"luminance\", {\n\t\tget () {\n\t\t\treturn getLuminance(this);\n\t\t},\n\t\tset (value) {\n\t\t\tsetLuminance(this, value);\n\t\t}\n\t});\n}\n\nvar luminance = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tgetLuminance: getLuminance,\n\tregister: register$2,\n\tsetLuminance: setLuminance\n});\n\n// WCAG 2.0 contrast https://www.w3.org/TR/WCAG20-TECHS/G18.html\n// Simple contrast, with fixed 5% viewing flare contribution\n// Symmetric, does not matter which is foreground and which is background\n\n\nfunction contrastWCAG21 (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\treturn (Y1 + .05) / (Y2 + .05);\n}\n\n// APCA 0.0.98G\n// https://github.com/Myndex/apca-w3\n// see also https://github.com/w3c/silver/issues/643\n\n\n// exponents\nconst normBG = 0.56;\nconst normTXT = 0.57;\nconst revTXT = 0.62;\nconst revBG = 0.65;\n\n// clamps\nconst blkThrs = 0.022;\nconst blkClmp = 1.414;\nconst loClip = 0.1;\nconst deltaYmin = 0.0005;\n\n// scalers\n// see https://github.com/w3c/silver/issues/645\nconst scaleBoW = 1.14;\nconst loBoWoffset = 0.027;\nconst scaleWoB= 1.14;\n\nfunction fclamp (Y) {\n\tif (Y >= blkThrs) {\n\t\treturn Y;\n\t}\n\treturn Y + (blkThrs - Y) ** blkClmp;\n}\n\nfunction linearize (val) {\n\tlet sign = val < 0? -1 : 1;\n\tlet abs = Math.abs(val);\n\treturn sign * Math.pow(abs, 2.4);\n}\n\n// Not symmetric, requires a foreground (text) color, and a background color\nfunction contrastAPCA (background, foreground) {\n\tforeground = getColor(foreground);\n\tbackground = getColor(background);\n\n\tlet S;\n\tlet C;\n\tlet Sapc;\n\n\t// Myndex as-published, assumes sRGB inputs\n\tlet R, G, B;\n\n\tforeground = to(foreground, \"srgb\");\n\t// Should these be clamped to in-gamut values?\n\n\t// Calculates \"screen luminance\" with non-standard simple gamma EOTF\n\t// weights should be from CSS Color 4, not the ones here which are via Myndex and copied from Lindbloom\n\t[R, G, B] = foreground.coords;\n\tlet lumTxt = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.0721750;\n\n\tbackground = to(background, \"srgb\");\n\t[R, G, B] = background.coords;\n\tlet lumBg = linearize(R) * 0.2126729 + linearize(G) * 0.7151522 + linearize(B) * 0.0721750;\n\n\t// toe clamping of very dark values to account for flare\n\tlet Ytxt = fclamp(lumTxt);\n\tlet Ybg = fclamp(lumBg);\n\n\t// are we \"Black on White\" (dark on light), or light on dark?\n\tlet BoW = Ybg > Ytxt;\n\n\t// why is this a delta, when Y is not perceptually uniform?\n\t// Answer: it is a noise gate, see\n\t// https://github.com/LeaVerou/color.js/issues/208\n\tif (Math.abs(Ybg - Ytxt) < deltaYmin) {\n\t\tC = 0;\n\t}\n\telse {\n\t\tif (BoW) {\n\t\t\t// dark text on light background\n\t\t\tS = Ybg ** normBG - Ytxt ** normTXT;\n\t\t\tC = S * scaleBoW;\n\t\t}\n\t\telse {\n\t\t\t// light text on dark background\n\t\t\tS = Ybg ** revBG - Ytxt ** revTXT;\n\t\t\tC = S * scaleWoB;\n\t\t}\n\t}\n\tif (Math.abs(C) < loClip) {\n\t\tSapc = 0;\n\t}\n\telse if (C > 0) {\n\t\t// not clear whether Woffset is loBoWoffset or loWoBoffset\n\t\t// but they have the same value\n\t\tSapc = C - loBoWoffset;\n\t}\n\telse {\n\t\tSapc = C + loBoWoffset;\n\t}\n\n\treturn Sapc * 100;\n}\n\n// Michelson  luminance contrast\n// the relation between the spread and the sum of the two luminances\n// Symmetric, does not matter which is foreground and which is background\n// No black level compensation for flare.\n\n\nfunction contrastMichelson (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\tlet denom = (Y1 + Y2);\n\treturn denom === 0 ? 0 : (Y1 - Y2) / denom;\n}\n\n// Weber luminance contrast\n// The difference between the two luminances divided by the lower luminance\n// Symmetric, does not matter which is foreground and which is background\n// No black level compensation for flare.\n\n\n// the darkest sRGB color above black is #000001 and this produces\n// a plain Weber contrast of ~45647.\n// So, setting the divide-by-zero result at 50000 is a reasonable\n// max clamp for the plain Weber\nconst max = 50000;\n\nfunction contrastWeber (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Y1 = Math.max(getLuminance(color1), 0);\n\tlet Y2 = Math.max(getLuminance(color2), 0);\n\n\tif (Y2 > Y1) {\n\t\t[Y1, Y2] = [Y2, Y1];\n\t}\n\n\treturn Y2 === 0 ? max : (Y1 - Y2) / Y2;\n}\n\n// CIE Lightness difference, as used by Google Material Design\n// Google HCT Tone is the same as CIE Lightness\n// https://material.io/blog/science-of-color-design\n\n\nfunction contrastLstar (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet L1 = get(color1, [lab, \"l\"]);\n\tlet L2 = get(color2, [lab, \"l\"]);\n\n\treturn Math.abs(L1 - L2);\n}\n\n// κ * ε  = 2^3 = 8\nconst ε$1 = 216/24389;  // 6^3/29^3 == (24/116)^3\nconst ε3 = 24/116;\nconst κ = 24389/27;   // 29^3/3^3\n\nlet white = WHITES.D65;\n\nvar lab_d65 = new ColorSpace({\n\tid: \"lab-d65\",\n\tname: \"Lab D65\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 100],\n\t\t\tname: \"L\"\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-125, 125]\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-125, 125]\n\t\t}\n\t},\n\n\t// Assuming XYZ is relative to D65, convert to CIE Lab\n\t// from CIE standard, which now defines these as a rational fraction\n\twhite,\n\n\tbase: XYZ_D65,\n\t// Convert D65-adapted XYZ to Lab\n\t//  CIE 15.3:2004 section 8.2.1.1\n\tfromBase (XYZ) {\n\t\t// compute xyz, which is XYZ scaled relative to reference white\n\t\tlet xyz = XYZ.map((value, i) => value / white[i]);\n\n\t\t// now compute f\n\t\tlet f = xyz.map(value => value > ε$1 ? Math.cbrt(value) : (κ * value + 16)/116);\n\n\t\treturn [\n\t\t\t(116 * f[1]) - 16, \t // L\n\t\t\t500 * (f[0] - f[1]), // a\n\t\t\t200 * (f[1] - f[2])  // b\n\t\t];\n\t},\n\t// Convert Lab to D65-adapted XYZ\n\t// Same result as CIE 15.3:2004 Appendix D although the derivation is different\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\ttoBase (Lab) {\n\t\t// compute f, starting with the luminance-related term\n\t\tlet f = [];\n\t\tf[1] = (Lab[0] + 16)/116;\n\t\tf[0] = Lab[1]/500 + f[1];\n\t\tf[2] = f[1] - Lab[2]/200;\n\n\t\t// compute xyz\n\t\tlet xyz = [\n\t\t\tf[0]   > ε3  ?  Math.pow(f[0], 3)            : (116*f[0]-16)/κ,\n\t\t\tLab[0] > 8   ?  Math.pow((Lab[0]+16)/116, 3) : Lab[0]/κ,\n\t\t\tf[2]   > ε3  ?  Math.pow(f[2], 3)            : (116*f[2]-16)/κ\n\t\t];\n\n\t\t// Compute XYZ by scaling xyz by reference white\n\t\treturn xyz.map((value, i) => value * white[i]);\n\t},\n\n\tformats: {\n\t\t\"lab-d65\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number> | <percentage>[-1,1]\", \"<number> | <percentage>[-1,1]\"],\n\t\t}\n\t}\n});\n\n// Delta Phi Star perceptual lightness contrast\n// See https://github.com/Myndex/deltaphistar\n// The (difference between two Lstars each raised to phi) raised to (1/phi)\n// Symmetric, does not matter which is foreground and which is background\n\n\nconst phi = Math.pow(5, 0.5) * 0.5 + 0.5; // Math.phi can be used if Math.js\n\nfunction contrastDeltaPhi (color1, color2) {\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\tlet Lstr1 = get(color1, [lab_d65, \"l\"]);\n\tlet Lstr2 = get(color2, [lab_d65, \"l\"]);\n\n\tlet deltaPhiStar = Math.abs(Math.pow(Lstr1, phi) - Math.pow(Lstr2, phi));\n\n\tlet contrast = Math.pow(deltaPhiStar, (1 / phi)) * Math.SQRT2 - 40;\n\n\treturn (contrast < 7.5) ? 0.0 : contrast ;\n}\n\nvar contrastMethods = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tcontrastAPCA: contrastAPCA,\n\tcontrastDeltaPhi: contrastDeltaPhi,\n\tcontrastLstar: contrastLstar,\n\tcontrastMichelson: contrastMichelson,\n\tcontrastWCAG21: contrastWCAG21,\n\tcontrastWeber: contrastWeber\n});\n\nfunction contrast (background, foreground, o = {}) {\n\tif (isString(o)) {\n\t\to = {algorithm: o};\n\t}\n\n\tlet {algorithm, ...rest} = o;\n\n\tif (!algorithm) {\n\t\tlet algorithms = Object.keys(contrastMethods).map(a => a.replace(/^contrast/, \"\")).join(\", \");\n\t\tthrow new TypeError(`contrast() function needs a contrast algorithm. Please specify one of: ${algorithms}`);\n\t}\n\n\tbackground = getColor(background);\n\tforeground = getColor(foreground);\n\n\tfor (let a in contrastMethods) {\n\t\tif (\"contrast\" + algorithm.toLowerCase() === a.toLowerCase()) {\n\t\t\treturn contrastMethods[a](background, foreground, rest);\n\t\t}\n\t}\n\n\tthrow new TypeError(`Unknown contrast algorithm: ${algorithm}`);\n}\n\n// Chromaticity coordinates\nfunction uv (color) {\n\tlet [X, Y, Z] = getAll(color, XYZ_D65);\n\tlet denom = X + 15 * Y + 3 * Z;\n\treturn [4 * X / denom, 9 * Y / denom];\n}\n\nfunction xy (color) {\n\tlet [X, Y, Z] = getAll(color, XYZ_D65);\n\tlet  sum = X + Y + Z;\n\treturn [X / sum, Y / sum];\n}\n\nfunction register$1 (Color) {\n\t// no setters, as lightness information is lost\n\t// when converting color to chromaticity\n\tObject.defineProperty(Color.prototype, \"uv\", {\n\t\tget () {\n\t\t\treturn uv(this);\n\t\t}\n\t});\n\n\tObject.defineProperty(Color.prototype, \"xy\", {\n\t\tget () {\n\t\t\treturn xy(this);\n\t\t}\n\t});\n}\n\nvar chromaticity = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tregister: register$1,\n\tuv: uv,\n\txy: xy\n});\n\nfunction deltaE76 (color, sample) {\n\treturn distance(color, sample, \"lab\");\n}\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// CMC by the Color Measurement Committee of the\n// Bradford Society of Dyeists and Colorsts, 1994.\n// Uses LCH rather than Lab,\n// with different weights for L, C and H differences\n// A nice increase in accuracy for modest increase in complexity\nconst π = Math.PI;\nconst d2r = π / 180;\n\nfunction deltaECMC (color, sample, {l = 2, c = 1} = {}) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE CMC.\n\n\t// This implementation assumes the parametric\n\t// weighting factors l:c are 2:1\n\t// which is typical for non-textile uses.\n\n\tlet [L1, a1, b1] = lab.from(color);\n\tlet [, C1, H1] = lch.from(lab, [L1, a1, b1]);\n\tlet [L2, a2, b2] = lab.from(sample);\n\tlet C2 = lch.from(lab, [L2, a2, b2])[1];\n\n\t// let [L1, a1, b1] = color.getAll(lab);\n\t// let C1 = color.get(\"lch.c\");\n\t// let H1 = color.get(\"lch.h\");\n\t// let [L2, a2, b2] = sample.getAll(lab);\n\t// let C2 = sample.get(\"lch.c\");\n\n\t// Check for negative Chroma,\n\t// which might happen through\n\t// direct user input of LCH values\n\n\tif (C1 < 0) {\n\t\tC1 = 0;\n\t}\n\tif (C2 < 0) {\n\t\tC2 = 0;\n\t}\n\n\t// we don't need H2 as ΔH is calculated from Δa, Δb and ΔC\n\n\t// Lightness and Chroma differences\n\t// These are (color - sample), unlike deltaE2000\n\tlet ΔL = L1 - L2;\n\tlet ΔC = C1 - C2;\n\n\tlet Δa = a1 - a2;\n\tlet Δb = b1 - b2;\n\n\t// weighted Hue difference, less for larger Chroma difference\n\n\tlet H2 = (Δa ** 2) + (Δb ** 2) - (ΔC ** 2);\n\t// due to roundoff error it is possible that, for zero a and b,\n\t// ΔC > Δa + Δb is 0, resulting in attempting\n\t// to take the square root of a negative number\n\n\t// trying instead the equation from Industrial Color Physics\n\t// By Georg A. Klein\n\n\t// let ΔH = ((a1 * b2) - (a2 * b1)) / Math.sqrt(0.5 * ((C2 * C1) + (a2 * a1) + (b2 * b1)));\n\t// console.log({ΔH});\n\t// This gives the same result to 12 decimal places\n\t// except it sometimes NaNs when trying to root a negative number\n\n\t// let ΔH = Math.sqrt(H2); we never actually use the root, it gets squared again!!\n\n\t// positional corrections to the lack of uniformity of CIELAB\n\t// These are all trying to make JND ellipsoids more like spheres\n\n\t// SL Lightness crispening factor, depends entirely on L1 not L2\n\tlet SL = 0.511;\t// linear portion of the Y to L transfer function\n\tif (L1 >= 16) {\t// cubic portion\n\t\tSL = (0.040975 * L1) / (1 + 0.01765 * L1);\n\t}\n\n\t// SC Chroma factor\n\tlet SC = ((0.0638 * C1) / (1 + 0.0131 * C1)) + 0.638;\n\n\t// Cross term T for blue non-linearity\n\tlet T;\n\tif ( Number.isNaN(H1)) {\n\t\tH1 = 0;\n\t}\n\n\tif (H1 >= 164 && H1 <= 345) {\n\t\tT = 0.56 + Math.abs(0.2 * Math.cos((H1 + 168) * d2r));\n\t}\n\telse {\n\t\tT = 0.36 + Math.abs(0.4 * Math.cos((H1 + 35) * d2r));\n\t}\n\t// console.log({T});\n\n\t// SH Hue factor also depends on C1,\n\tlet C4 = Math.pow(C1, 4);\n\tlet F = Math.sqrt(C4 / (C4 + 1900));\n\tlet SH = SC * ((F * T) + 1 - F);\n\n\t// Finally calculate the deltaE, term by term as root sume of squares\n\tlet dE = (ΔL / (l * SL)) ** 2;\n\tdE += (ΔC / (c * SC)) ** 2;\n\tdE += (H2 / (SH ** 2));\n\t// dE += (ΔH / SH)  ** 2;\n\treturn Math.sqrt(dE);\n\t// Yay!!!\n}\n\nconst Yw$1 = 203;\t// absolute luminance of media white\n\nvar XYZ_Abs_D65 = new ColorSpace({\n// Absolute CIE XYZ, with a D65 whitepoint,\n// as used in most HDR colorspaces as a starting point.\n// SDR spaces are converted per BT.2048\n// so that diffuse, media white is 203 cd/m²\n\tid: \"xyz-abs-d65\",\n\tname: \"Absolute XYZ D65\",\n\tcoords: {\n\t\tx: {\n\t\t\trefRange: [0, 9504.7],\n\t\t\tname: \"Xa\",\n\t\t},\n\t\ty: {\n\t\t\trefRange: [0, 10000],\n\t\t\tname: \"Ya\",\n\t\t},\n\t\tz: {\n\t\t\trefRange: [0, 10888.3],\n\t\t\tname: \"Za\",\n\t\t}\n\t},\n\n\tbase: XYZ_D65,\n\tfromBase (XYZ) {\n\t\t// Make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\treturn XYZ.map (v => Math.max(v * Yw$1, 0));\n\t},\n\ttoBase (AbsXYZ) {\n\t\t// Convert to media-white relative XYZ\n\t\treturn AbsXYZ.map(v => Math.max(v / Yw$1, 0));\n\t}\n});\n\nconst b$1 = 1.15;\nconst g = 0.66;\nconst n$1 = 2610 / (2 ** 14);\nconst ninv$1 = (2 ** 14) / 2610;\nconst c1$2 = 3424 / (2 ** 12);\nconst c2$2 = 2413 / (2 ** 7);\nconst c3$2 = 2392 / (2 ** 7);\nconst p = 1.7 * 2523 / (2 ** 5);\nconst pinv = (2 ** 5) / (1.7 * 2523);\nconst d = -0.56;\nconst d0 = 1.6295499532821566E-11;\n\nconst XYZtoCone_M = [\n\t[  0.41478972, 0.579999,  0.0146480 ],\n\t[ -0.2015100,  1.120649,  0.0531008 ],\n\t[ -0.0166008,  0.264800,  0.6684799 ]\n];\n// XYZtoCone_M inverted\nconst ConetoXYZ_M = [\n\t[  1.9242264357876067,  -1.0047923125953657,  0.037651404030618   ],\n\t[  0.35031676209499907,  0.7264811939316552, -0.06538442294808501 ],\n\t[ -0.09098281098284752, -0.3127282905230739,  1.5227665613052603  ]\n];\nconst ConetoIab_M = [\n\t[  0.5,       0.5,       0        ],\n\t[  3.524000, -4.066708,  0.542708 ],\n\t[  0.199076,  1.096799, -1.295875 ]\n];\n// ConetoIab_M inverted\nconst IabtoCone_M = [\n\t[ 1,                   0.1386050432715393,   0.05804731615611886 ],\n\t[ 0.9999999999999999, -0.1386050432715393,  -0.05804731615611886 ],\n\t[ 0.9999999999999998, -0.09601924202631895, -0.8118918960560388  ]\n];\n\nvar Jzazbz = new ColorSpace({\n\tid: \"jzazbz\",\n\tname: \"Jzazbz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\taz: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t},\n\t\tbz: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t}\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// First make XYZ absolute, not relative to media white\n\t\t// Maximum luminance in PQ is 10,000 cd/m²\n\t\t// Relative XYZ has Y=1 for media white\n\t\t// BT.2048 says media white Y=203 at PQ 58\n\n\t\tlet [ Xa, Ya, Za ] = XYZ;\n\n\t\t// modify X and Y\n\t\tlet Xm = (b$1 * Xa) - ((b$1 - 1) * Za);\n\t\tlet Ym = (g * Ya) - ((g - 1) * Xa);\n\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoCone_M, [ Xm, Ym, Za ]);\n\n\t\t// PQ-encode LMS\n\t\tlet PQLMS = LMS.map (function (val) {\n\t\t\tlet num = c1$2 + (c2$2 * ((val / 10000) ** n$1));\n\t\t\tlet denom = 1 + (c3$2 * ((val / 10000) ** n$1));\n\n\t\t\treturn (num / denom)  ** p;\n\t\t});\n\n\t\t// almost there, calculate Iz az bz\n\t\tlet [ Iz, az, bz] = multiplyMatrices(ConetoIab_M, PQLMS);\n\t\t// console.log({Iz, az, bz});\n\n\t\tlet Jz = ((1 + d) * Iz) / (1 + (d * Iz)) - d0;\n\t\treturn [Jz, az, bz];\n\t},\n\ttoBase (Jzazbz) {\n\t\tlet [Jz, az, bz] = Jzazbz;\n\t\tlet Iz = (Jz + d0) / (1 + d - d * (Jz + d0));\n\n\t\t// bring into LMS cone domain\n\t\tlet PQLMS = multiplyMatrices(IabtoCone_M, [ Iz, az, bz ]);\n\n\t\t// convert from PQ-coded to linear-light\n\t\tlet LMS = PQLMS.map(function (val) {\n\t\t\tlet num = (c1$2 - (val ** pinv));\n\t\t\tlet denom = (c3$2 * (val ** pinv)) - c2$2;\n\t\t\tlet x = 10000 * ((num / denom) ** ninv$1);\n\n\t\t\treturn (x); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\n\t\t// modified abs XYZ\n\t\tlet [ Xm, Ym, Za ] = multiplyMatrices(ConetoXYZ_M, LMS);\n\n\t\t// restore standard D50 relative XYZ, relative to media white\n\t\tlet Xa = (Xm + ((b$1 -1) * Za)) / b$1;\n\t\tlet Ya = (Ym + ((g -1) * Xa)) / g;\n\t\treturn [ Xa, Ya, Za ];\n\t},\n\n\tformats: {\n\t\t// https://drafts.csswg.org/css-color-hdr/#Jzazbz\n\t\t\"color\": {}\n\t}\n});\n\nvar jzczhz = new ColorSpace({\n\tid: \"jzczhz\",\n\tname: \"JzCzHz\",\n\tcoords: {\n\t\tjz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Jz\",\n\t\t},\n\t\tcz: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Chroma\",\n\t\t},\n\t\thz: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\",\n\t\t}\n\t},\n\n\tbase: Jzazbz,\n\tfromBase (jzazbz) {\n\t\t// Convert to polar form\n\t\tlet [Jz, az, bz] = jzazbz;\n\t\tlet hue;\n\t\tconst ε = 0.0002; // chromatic components much smaller than a,b\n\n\t\tif (Math.abs(az) < ε && Math.abs(bz) < ε) {\n\t\t\thue = NaN;\n\t\t}\n\t\telse {\n\t\t\thue = Math.atan2(bz, az) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tJz, // Jz is still Jz\n\t\t\tMath.sqrt(az ** 2 + bz ** 2), // Chroma\n\t\t\tconstrain(hue) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\ttoBase (jzczhz) {\n\t\t// Convert from polar form\n\t\t// debugger;\n\t\treturn [\n\t\t\tjzczhz[0], // Jz is still Jz\n\t\t\tjzczhz[1] * Math.cos(jzczhz[2] * Math.PI / 180), // az\n\t\t\tjzczhz[1] * Math.sin(jzczhz[2] * Math.PI / 180)  // bz\n\t\t];\n\t},\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in Lab\n\n// Uses JzCzHz, which has improved perceptual uniformity\n// and thus a simple Euclidean root-sum of ΔL² ΔC² ΔH²\n// gives good results.\n\nfunction deltaEJz (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in JzCzHz.\n\tlet [Jz1, Cz1, Hz1] = jzczhz.from(color);\n\tlet [Jz2, Cz2, Hz2] = jzczhz.from(sample);\n\n\t// Lightness and Chroma differences\n\t// sign does not matter as they are squared.\n\tlet ΔJ = Jz1 - Jz2;\n\tlet ΔC = Cz1 - Cz2;\n\n\t// length of chord for ΔH\n\tif ((Number.isNaN(Hz1)) && (Number.isNaN(Hz2))) {\n\t\t// both undefined hues\n\t\tHz1 = 0;\n\t\tHz2 = 0;\n\t}\n\telse if (Number.isNaN(Hz1)) {\n\t\t// one undefined, set to the defined hue\n\t\tHz1 = Hz2;\n\t}\n\telse if (Number.isNaN(Hz2)) {\n\t\tHz2 = Hz1;\n\t}\n\n\tlet Δh = Hz1 - Hz2;\n\tlet ΔH = 2 * Math.sqrt(Cz1 * Cz2) * Math.sin((Δh / 2) * (Math.PI / 180));\n\n\treturn Math.sqrt(ΔJ ** 2 + ΔC ** 2 + ΔH ** 2);\n}\n\nconst c1$1 = 3424 / 4096;\nconst c2$1 = 2413 / 128;\nconst c3$1 = 2392 / 128;\nconst m1 = 2610 / 16384;\nconst m2 = 2523 / 32;\nconst im1 = 16384 / 2610;\nconst im2 = 32 / 2523;\n\n// The matrix below includes the 4% crosstalk components\n// and is from the Dolby \"What is ICtCp\" paper\"\nconst XYZtoLMS_M$1 = [\n\t[ 0.3592,  0.6976, -0.0358],\n\t[-0.1922,  1.1004,  0.0755],\n\t[ 0.0070,  0.0749,  0.8434]\n];\n// linear-light Rec.2020 to LMS, again with crosstalk\n// rational terms from Jan Fröhlich,\n// Encoding High Dynamic Range andWide Color Gamut Imagery, p.97\n// and ITU-R BT.2124-0 p.2\n/*\nconst Rec2020toLMS_M = [\n\t[ 1688 / 4096,  2146 / 4096,   262 / 4096 ],\n\t[  683 / 4096,  2951 / 4096,   462 / 4096 ],\n\t[   99 / 4096,   309 / 4096,  3688 / 4096 ]\n];\n*/\n// this includes the Ebner LMS coefficients,\n// the rotation, and the scaling to [-0.5,0.5] range\n// rational terms from Fröhlich p.97\n// and ITU-R BT.2124-0 pp.2-3\nconst LMStoIPT_M = [\n\t[  2048 / 4096,   2048 / 4096,       0      ],\n\t[  6610 / 4096, -13613 / 4096,  7003 / 4096 ],\n\t[ 17933 / 4096, -17390 / 4096,  -543 / 4096 ]\n];\n\n// inverted matrices, calculated from the above\nconst IPTtoLMS_M = [\n\t[0.99998889656284013833, 0.00860505014728705821,  0.1110343715986164786 ],\n\t[1.0000111034371598616, -0.00860505014728705821, -0.1110343715986164786 ],\n\t[1.000032063391005412,   0.56004913547279000113, -0.32063391005412026469],\n];\n/*\nconst LMStoRec2020_M = [\n\t[ 3.4375568932814012112,   -2.5072112125095058195,   0.069654319228104608382],\n\t[-0.79142868665644156125,   1.9838372198740089874,  -0.19240853321756742626 ],\n\t[-0.025646662911506476363, -0.099240248643945566751, 1.1248869115554520431  ]\n];\n*/\nconst LMStoXYZ_M$1 = [\n\t[ 2.0701800566956135096,   -1.3264568761030210255,    0.20661600684785517081 ],\n\t[ 0.36498825003265747974,   0.68046736285223514102,  -0.045421753075853231409],\n\t[-0.049595542238932107896, -0.049421161186757487412,  1.1879959417328034394  ]\n];\n\n// Only the PQ form of ICtCp is implemented here. There is also an HLG form.\n// from Dolby, \"WHAT IS ICTCP?\"\n// https://professional.dolby.com/siteassets/pdfs/ictcp_dolbywhitepaper_v071.pdf\n// and\n// Dolby, \"Perceptual Color Volume\n// Measuring the Distinguishable Colors of HDR and WCG Displays\"\n// https://professional.dolby.com/siteassets/pdfs/dolby-vision-measuring-perceptual-color-volume-v7.1.pdf\nvar ictcp = new ColorSpace({\n\tid: \"ictcp\",\n\tname: \"ICTCP\",\n\t// From BT.2100-2 page 7:\n\t// During production, signal values are expected to exceed the\n\t// range E′ = [0.0 : 1.0]. This provides processing headroom and avoids\n\t// signal degradation during cascaded processing. Such values of E′,\n\t// below 0.0 or exceeding 1.0, should not be clipped during production\n\t// and exchange.\n\t// Values below 0.0 should not be clipped in reference displays (even\n\t// though they represent “negative” light) to allow the black level of\n\t// the signal (LB) to be properly set using test signals known as “PLUGE”\n\tcoords: {\n\t\ti: {\n\t\t\trefRange: [0, 1],\t// Constant luminance,\n\t\t\tname: \"I\"\n\t\t},\n\t\tct: {\n\t\t\trefRange: [-0.5, 0.5],\t// Full BT.2020 gamut in range [-0.5, 0.5]\n\t\t\tname: \"CT\"\n\t\t},\n\t\tcp: {\n\t\t\trefRange: [-0.5, 0.5],\n\t\t\tname: \"CP\"\n\t\t}\n\t},\n\n\tbase: XYZ_Abs_D65,\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoLMS_M$1, XYZ);\n\n\t\treturn LMStoICtCp(LMS);\n\t},\n\ttoBase (ICtCp) {\n\t\tlet LMS = ICtCptoLMS(ICtCp);\n\n\t\treturn multiplyMatrices(LMStoXYZ_M$1, LMS);\n\t},\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\nfunction LMStoICtCp (LMS) {\n\t// apply the PQ EOTF\n\t// we can't ever be dividing by zero because of the \"1 +\" in the denominator\n\tlet PQLMS = LMS.map (function (val) {\n\t\tlet num = c1$1 + (c2$1 * ((val / 10000) ** m1));\n\t\tlet denom = 1 + (c3$1 * ((val / 10000) ** m1));\n\n\t\treturn (num / denom)  ** m2;\n\t});\n\n\t// LMS to IPT, with rotation for Y'C'bC'r compatibility\n\treturn multiplyMatrices(LMStoIPT_M, PQLMS);\n}\n\nfunction ICtCptoLMS (ICtCp) {\n\tlet PQLMS = multiplyMatrices(IPTtoLMS_M, ICtCp);\n\n\t// From BT.2124-0 Annex 2 Conversion 3\n\tlet LMS = PQLMS.map (function (val) {\n\t\tlet num  = Math.max((val ** im2) - c1$1, 0);\n\t\tlet denom = (c2$1 - (c3$1 * (val ** im2)));\n\t\treturn 10000 * ((num / denom) ** im1);\n\t});\n\n\treturn LMS;\n}\n\n// Delta E in ICtCp space,\n// which the ITU calls Delta E ITP, which is shorter\n// formulae from ITU Rec. ITU-R BT.2124-0\n\nfunction deltaEITP (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaE in ICtCp\n\t// which is simply the Euclidean distance\n\n\tlet [ I1, T1, P1 ] = ictcp.from(color);\n\tlet [ I2, T2, P2 ] = ictcp.from(sample);\n\n\t// the 0.25 factor is to undo the encoding scaling in Ct\n\t// the 720 is so that 1 deltaE = 1 JND\n\t// per  ITU-R BT.2124-0 p.3\n\n\treturn 720 * Math.sqrt((I1 - I2) ** 2 + (0.25 * (T1 -T2) ** 2) + (P1 - P2) ** 2);\n}\n\n// Recalculated for consistent reference white\n// see https://github.com/w3c/csswg-drafts/issues/6642#issuecomment-943521484\nconst XYZtoLMS_M = [\n\t[ 0.8190224432164319,    0.3619062562801221,   -0.12887378261216414 ],\n\t[ 0.0329836671980271,    0.9292868468965546,     0.03614466816999844 ],\n\t[ 0.048177199566046255,  0.26423952494422764,    0.6335478258136937  ]\n];\n// inverse of XYZtoLMS_M\nconst LMStoXYZ_M = [\n\t[  1.2268798733741557,  -0.5578149965554813,   0.28139105017721583],\n\t[ -0.04057576262431372,  1.1122868293970594,  -0.07171106666151701],\n\t[ -0.07637294974672142, -0.4214933239627914,   1.5869240244272418 ]\n];\nconst LMStoLab_M = [\n\t[  0.2104542553,   0.7936177850,  -0.0040720468 ],\n\t[  1.9779984951,  -2.4285922050,   0.4505937099 ],\n\t[  0.0259040371,   0.7827717662,  -0.8086757660 ]\n];\n// LMStoIab_M inverted\nconst LabtoLMS_M = [\n\t[ 0.99999999845051981432,  0.39633779217376785678,   0.21580375806075880339  ],\n\t[ 1.0000000088817607767,  -0.1055613423236563494,   -0.063854174771705903402 ],\n\t[ 1.0000000546724109177,  -0.089484182094965759684, -1.2914855378640917399   ]\n];\n\nvar OKLab = new ColorSpace({\n\tid: \"oklab\",\n    name: \"Oklab\",\n    coords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"L\"\n\t\t},\n\t\ta: {\n\t\t\trefRange: [-0.4, 0.4]\n\t\t},\n\t\tb: {\n\t\t\trefRange: [-0.4, 0.4]\n\t\t}\n    },\n\n\t// Note that XYZ is relative to D65\n  white: \"D65\",\n\tbase: XYZ_D65,\n\tfromBase (XYZ) {\n\t\t// move to LMS cone domain\n\t\tlet LMS = multiplyMatrices(XYZtoLMS_M, XYZ);\n\n\t\t// non-linearity\n\t\tlet LMSg = LMS.map(val => Math.cbrt(val));\n\n\t\treturn multiplyMatrices(LMStoLab_M, LMSg);\n\n\t},\n\ttoBase (OKLab) {\n\t\t// move to LMS cone domain\n\t\tlet LMSg = multiplyMatrices(LabtoLMS_M, OKLab);\n\n\t\t// restore linearity\n\t\tlet LMS = LMSg.map(val => val ** 3);\n\n\t\treturn multiplyMatrices(LMStoXYZ_M, LMS);\n\t},\n\n\tformats: {\n\t\t\"oklab\": {\n\t\t\tcoords: [\"<percentage> | <number>\", \"<number> | <percentage>[-1,1]\", \"<number> | <percentage>[-1,1]\"],\n\t\t}\n\t}\n});\n\n// More accurate color-difference formulae\n// than the simple 1976 Euclidean distance in CIE Lab\n\n\nfunction deltaEOK (color, sample) {\n\t// Given this color as the reference\n\t// and a sample,\n\t// calculate deltaEOK, term by term as root sum of squares\n\tlet [L1, a1, b1] = OKLab.from(color);\n\tlet [L2, a2, b2] = OKLab.from(sample);\n\tlet ΔL = L1 - L2;\n\tlet Δa = a1 - a2;\n\tlet Δb = b1 - b2;\n\treturn Math.sqrt(ΔL ** 2 + Δa ** 2 + Δb ** 2);\n}\n\nvar deltaEMethods = {\n\tdeltaE76,\n\tdeltaECMC,\n\tdeltaE2000,\n\tdeltaEJz,\n\tdeltaEITP,\n\tdeltaEOK,\n};\n\nfunction deltaE (c1, c2, o = {}) {\n\tif (isString(o)) {\n\t\to = {method: o};\n\t}\n\n\tlet {method = defaults.deltaE, ...rest} = o;\n\n\tc1 = getColor(c1);\n\tc2 = getColor(c2);\n\n\tfor (let m in deltaEMethods) {\n\t\tif (\"deltae\" + method.toLowerCase() === m.toLowerCase()) {\n\t\t\treturn deltaEMethods[m](c1, c2, rest);\n\t\t}\n\t}\n\n\tthrow new TypeError(`Unknown deltaE method: ${method}`);\n}\n\nfunction lighten (color, amount = .25) {\n\tlet space = ColorSpace.get(\"oklch\", \"lch\");\n\tlet lightness = [space, \"l\"];\n\treturn set(color, lightness, l => l * (1 + amount));\n}\n\nfunction darken (color, amount = .25) {\n\tlet space = ColorSpace.get(\"oklch\", \"lch\");\n\tlet lightness = [space, \"l\"];\n\treturn set(color, lightness, l => l * (1 - amount));\n}\n\nvar variations = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdarken: darken,\n\tlighten: lighten\n});\n\n/**\n * Functions related to color interpolation\n */\n\n/**\n * Return an intermediate color between two colors\n * Signatures: mix(c1, c2, p, options)\n *             mix(c1, c2, options)\n *             mix(color)\n * @param {Color | string} c1 The first color\n * @param {Color | string} [c2] The second color\n * @param {number} [p=.5] A 0-1 percentage where 0 is c1 and 1 is c2\n * @param {Object} [o={}]\n * @return {Color}\n */\nfunction mix (c1, c2, p = .5, o = {}) {\n\t[c1, c2] = [getColor(c1), getColor(c2)];\n\n\tif (type(p) === \"object\") {\n\t\t[p, o] = [.5, p];\n\t}\n\n\tlet {space, outputSpace, premultiplied} = o;\n\n\tlet r = range(c1, c2, {space, outputSpace, premultiplied});\n\treturn r(p);\n}\n\n/**\n *\n * @param {Color | string | Function} c1 The first color or a range\n * @param {Color | string} [c2] The second color if c1 is not a range\n * @param {Object} [options={}]\n * @return {Color[]}\n */\nfunction steps (c1, c2, options = {}) {\n\tlet colorRange;\n\n\tif (isRange(c1)) {\n\t\t// Tweaking existing range\n\t\t[colorRange, options] = [c1, c2];\n\t\t[c1, c2] = colorRange.rangeArgs.colors;\n\t}\n\n\tlet {\n\t\tmaxDeltaE, deltaEMethod,\n\t\tsteps = 2, maxSteps = 1000,\n\t\t...rangeOptions\n\t} = options;\n\n\tif (!colorRange) {\n\t\t[c1, c2] = [getColor(c1), getColor(c2)];\n\t\tcolorRange = range(c1, c2, rangeOptions);\n\t}\n\n\tlet totalDelta = deltaE(c1, c2);\n\tlet actualSteps = maxDeltaE > 0? Math.max(steps, Math.ceil(totalDelta / maxDeltaE) + 1) : steps;\n\tlet ret = [];\n\n\tif (maxSteps !== undefined) {\n\t\tactualSteps = Math.min(actualSteps, maxSteps);\n\t}\n\n\tif (actualSteps === 1) {\n\t\tret = [{p: .5, color: colorRange(.5)}];\n\t}\n\telse {\n\t\tlet step = 1 / (actualSteps - 1);\n\t\tret = Array.from({length: actualSteps}, (_, i) => {\n\t\t\tlet p = i * step;\n\t\t\treturn {p, color: colorRange(p)};\n\t\t});\n\t}\n\n\tif (maxDeltaE > 0) {\n\t\t// Iterate over all stops and find max deltaE\n\t\tlet maxDelta = ret.reduce((acc, cur, i) => {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet ΔΕ = deltaE(cur.color, ret[i - 1].color, deltaEMethod);\n\t\t\treturn Math.max(acc, ΔΕ);\n\t\t}, 0);\n\n\t\twhile (maxDelta > maxDeltaE) {\n\t\t\t// Insert intermediate stops and measure maxDelta again\n\t\t\t// We need to do this for all pairs, otherwise the midpoint shifts\n\t\t\tmaxDelta = 0;\n\n\t\t\tfor (let i = 1; (i < ret.length) && (ret.length < maxSteps); i++) {\n\t\t\t\tlet prev = ret[i - 1];\n\t\t\t\tlet cur = ret[i];\n\n\t\t\t\tlet p = (cur.p + prev.p) / 2;\n\t\t\t\tlet color = colorRange(p);\n\t\t\t\tmaxDelta = Math.max(maxDelta, deltaE(color, prev.color), deltaE(color, cur.color));\n\t\t\t\tret.splice(i, 0, {p, color: colorRange(p)});\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n\n\tret = ret.map(a => a.color);\n\n\treturn ret;\n}\n/**\n * Interpolate to color2 and return a function that takes a 0-1 percentage\n * @param {Color | string | Function} color1 The first color or an existing range\n * @param {Color | string} [color2] If color1 is a color, this is the second color\n * @param {Object} [options={}]\n * @returns {Function} A function that takes a 0-1 percentage and returns a color\n */\nfunction range (color1, color2, options = {}) {\n\tif (isRange(color1)) {\n\t\t// Tweaking existing range\n\t\tlet [r, options] = [color1, color2];\n\n\t\treturn range(...r.rangeArgs.colors, {...r.rangeArgs.options, ...options});\n\t}\n\n\tlet {space, outputSpace, progression, premultiplied} = options;\n\n\tcolor1 = getColor(color1);\n\tcolor2 = getColor(color2);\n\n\t// Make sure we're working on copies of these colors\n\tcolor1 = clone(color1);\n\tcolor2 = clone(color2);\n\n\tlet rangeArgs = {colors: [color1, color2], options};\n\n\tif (space) {\n\t\tspace = ColorSpace.get(space);\n\t}\n\telse {\n\t\tspace = ColorSpace.registry[defaults.interpolationSpace] || color1.space;\n\t}\n\n\toutputSpace = outputSpace? ColorSpace.get(outputSpace) : space;\n\n\tcolor1 = to(color1, space);\n\tcolor2 = to(color2, space);\n\n\t// Gamut map to avoid areas of flat color\n\tcolor1 = toGamut(color1);\n\tcolor2 = toGamut(color2);\n\n\t// Handle hue interpolation\n\t// See https://github.com/w3c/csswg-drafts/issues/4735#issuecomment-635741840\n\tif (space.coords.h && space.coords.h.type === \"angle\") {\n\t\tlet arc = options.hue = options.hue || \"shorter\";\n\n\t\tlet hue = [space, \"h\"];\n\t\tlet [θ1, θ2] = [get(color1, hue), get(color2, hue)];\n\t\t[θ1, θ2] = adjust(arc, [θ1, θ2]);\n\t\tset(color1, hue, θ1);\n\t\tset(color2, hue, θ2);\n\t}\n\n\tif (premultiplied) {\n\t\t// not coping with polar spaces yet\n\t\tcolor1.coords = color1.coords.map(c => c * color1.alpha);\n\t\tcolor2.coords = color2.coords.map(c => c * color2.alpha);\n\t}\n\n\treturn Object.assign(p => {\n\t\tp = progression? progression(p) : p;\n\t\tlet coords = color1.coords.map((start, i) => {\n\t\t\tlet end = color2.coords[i];\n\t\t\treturn interpolate(start, end, p);\n\t\t});\n\n\t\tlet alpha = interpolate(color1.alpha, color2.alpha, p);\n\t\tlet ret = {space, coords, alpha};\n\n\t\tif (premultiplied) {\n\t\t\t// undo premultiplication\n\t\t\tret.coords = ret.coords.map(c => c / alpha);\n\t\t}\n\n\t\tif (outputSpace !== space) {\n\t\t\tret = to(ret, outputSpace);\n\t\t}\n\n\t\treturn ret;\n\t}, {\n\t\trangeArgs\n\t});\n}\nfunction isRange (val) {\n\treturn type(val) === \"function\" && !!val.rangeArgs;\n}\ndefaults.interpolationSpace = \"lab\";\n\nfunction register (Color) {\n\tColor.defineFunction(\"mix\", mix, {returns: \"color\"});\n\tColor.defineFunction(\"range\", range, {returns: \"function<color>\"});\n\tColor.defineFunction(\"steps\", steps, {returns: \"array<color>\"});\n}\n\nvar interpolation = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tisRange: isRange,\n\tmix: mix,\n\trange: range,\n\tregister: register,\n\tsteps: steps\n});\n\nvar HSL = new ColorSpace({\n\tid: \"hsl\",\n\tname: \"HSL\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\"\n\t\t},\n\t\tl: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Lightness\"\n\t\t}\n\t},\n\n\tbase: sRGB,\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#From_RGB\n\tfromBase: rgb => {\n\t\tlet max = Math.max(...rgb);\n\t\tlet min = Math.min(...rgb);\n\t\tlet [r, g, b] = rgb;\n\t\tlet [h, s, l] = [NaN, 0, (min + max)/2];\n\t\tlet d = max - min;\n\n\t\tif (d !== 0) {\n\t\t\ts = (l === 0 || l === 1) ? 0 : (max - l) / Math.min(l, 1 - l);\n\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\t\tcase b: h = (r - g) / d + 4;\n\t\t\t}\n\n\t\t\th = h * 60;\n\t\t}\n\n\t\treturn [h, s * 100, l * 100];\n\t},\n\n\t// Adapted from https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_RGB_alternative\n\ttoBase: hsl => {\n\t\tlet [h, s, l] = hsl;\n\t\th = h % 360;\n\n\t\tif (h < 0) {\n\t\t\th += 360;\n\t\t}\n\n\t\ts /= 100;\n\t\tl /= 100;\n\n\t\tfunction f (n) {\n\t\t\tlet k = (n + h/30) % 12;\n\t\t\tlet a = s * Math.min(l, 1 - l);\n\t\t\treturn l - a * Math.max(-1, Math.min(k - 3, 9 - k, 1));\n\t\t}\n\n\t\treturn [f(0), f(8), f(4)];\n\t},\n\n\tformats: {\n\t\t\"hsl\": {\n\t\t\ttoGamut: true,\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t},\n\t\t\"hsla\": {\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t\tcommas: true,\n\t\t\tlastAlpha: true,\n\t\t}\n\t},\n});\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nvar HSV = new ColorSpace({\n\tid: \"hsv\",\n\tname: \"HSV\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\ts: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Saturation\"\n\t\t},\n\t\tv: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Value\"\n\t\t}\n\t},\n\n\tbase: HSL,\n\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n\tfromBase (hsl) {\n\t\tlet [h, s, l] = hsl;\n\t\ts /= 100;\n\t\tl /= 100;\n\n\t\tlet v = l + s * Math.min(l, 1 - l);\n\n\t\treturn [\n\t\t\th, // h is the same\n\t\t\tv === 0? 0 : 200 * (1 - l / v), // s\n\t\t\t100 * v\n\t\t];\n\t},\n\t// https://en.wikipedia.org/wiki/HSL_and_HSV#Interconversion\n\ttoBase (hsv) {\n\t\tlet [h, s, v] = hsv;\n\n\t\ts /= 100;\n\t\tv /= 100;\n\n\t\tlet l = v * (1 - s/2);\n\n\t\treturn [\n\t\t\th, // h is the same\n\t\t\t(l === 0 || l === 1)? 0 : ((v - l) / Math.min(l, 1 - l)) * 100,\n\t\t\tl * 100\n\t\t];\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\ttoGamut: true,\n\t\t}\n\t}\n});\n\n// The Hue, Whiteness Blackness (HWB) colorspace\n// See https://drafts.csswg.org/css-color-4/#the-hwb-notation\n// Note that, like HSL, calculations are done directly on\n// gamma-corrected sRGB values rather than linearising them first.\n\nvar hwb = new ColorSpace({\n\tid: \"hwb\",\n\tname: \"HWB\",\n\tcoords: {\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t},\n\t\tw: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Whiteness\"\n\t\t},\n\t\tb: {\n\t\t\trange: [0, 100],\n\t\t\tname: \"Blackness\"\n\t\t}\n\t},\n\n\tbase: HSV,\n\tfromBase (hsv) {\n\t\tlet [h, s, v] = hsv;\n\n\t\treturn [h, v * (100 - s) / 100, 100 - v];\n\t},\n\ttoBase (hwb) {\n\t\tlet [h, w, b] = hwb;\n\n\t\t// Now convert percentages to [0..1]\n\t\tw /= 100;\n\t\tb /= 100;\n\n\t\t// Achromatic check (white plus black >= 1)\n\t\tlet sum = w + b;\n\t\tif (sum >= 1) {\n\t\t\t let gray = w / sum;\n\t\t\t return [h, 0, gray * 100];\n\t\t}\n\n\t\tlet v = (1 - b);\n\t\tlet s = (v === 0) ? 0 : 1 - w / v;\n\t\treturn [h, s * 100, v * 100];\n\t},\n\n\tformats: {\n\t\t\"hwb\": {\n\t\t\ttoGamut: true,\n\t\t\tcoords: [\"<number> | <angle>\", \"<percentage>\", \"<percentage>\"],\n\t\t}\n\t}\n});\n\n// convert an array of linear-light a98-rgb values to CIE XYZ\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n// has greater numerical precision than section 4.3.5.3 of\n// https://www.adobe.com/digitalimag/pdfs/AdobeRGB1998.pdf\n// but the values below were calculated from first principles\n// from the chromaticity coordinates of R G B W\nconst toXYZ_M$2 = [\n\t[ 0.5766690429101305,   0.1855582379065463,   0.1882286462349947  ],\n\t[ 0.29734497525053605,  0.6273635662554661,   0.07529145849399788 ],\n\t[ 0.02703136138641234,  0.07068885253582723,  0.9913375368376388  ]\n];\n\nconst fromXYZ_M$2 = [\n\t[  2.0415879038107465,    -0.5650069742788596,   -0.34473135077832956 ],\n\t[ -0.9692436362808795,     1.8759675015077202,    0.04155505740717557 ],\n\t[  0.013444280632031142,  -0.11836239223101838,   1.0151749943912054  ]\n];\n\nvar A98Linear = new RGBColorSpace({\n\tid: \"a98rgb-linear\",\n\tname: \"Linear Adobe® 98 RGB compatible\",\n\twhite: \"D65\",\n\ttoXYZ_M: toXYZ_M$2,\n\tfromXYZ_M: fromXYZ_M$2\n});\n\nvar a98rgb = new RGBColorSpace({\n\tid: \"a98rgb\",\n\tname: \"Adobe® 98 RGB compatible\",\n\tbase: A98Linear,\n\ttoBase: RGB => RGB.map(val => Math.pow(Math.abs(val), 563 / 256) * Math.sign(val)),\n\tfromBase: RGB => RGB.map(val => Math.pow(Math.abs(val), 256 / 563) * Math.sign(val)),\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"a98-rgb\"\n\t\t}\n\t},\n});\n\n// convert an array of  prophoto-rgb values to CIE XYZ\n// using  D50 (so no chromatic adaptation needed afterwards)\n// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\nconst toXYZ_M$1 = [\n\t[ 0.7977604896723027,  0.13518583717574031,  0.0313493495815248     ],\n\t[ 0.2880711282292934,  0.7118432178101014,   0.00008565396060525902 ],\n\t[ 0.0,                 0.0,                  0.8251046025104601     ]\n];\n\nconst fromXYZ_M$1 = [\n\t[  1.3457989731028281,  -0.25558010007997534,  -0.05110628506753401 ],\n\t[ -0.5446224939028347,   1.5082327413132781,    0.02053603239147973 ],\n\t[  0.0,                  0.0,                   1.2119675456389454  ]\n];\n\nvar ProPhotoLinear = new RGBColorSpace({\n\tid: \"prophoto-linear\",\n\tname: \"Linear ProPhoto\",\n\twhite: \"D50\",\n\tbase: XYZ_D50,\n\ttoXYZ_M: toXYZ_M$1,\n\tfromXYZ_M: fromXYZ_M$1\n});\n\nconst Et = 1/512;\nconst Et2 = 16/512;\n\nvar prophoto = new RGBColorSpace({\n\tid: \"prophoto\",\n\tname: \"ProPhoto\",\n\tbase: ProPhotoLinear,\n\ttoBase (RGB) {\n\t\t// Transfer curve is gamma 1.8 with a small linear portion\n\t\treturn RGB.map(v => v < Et2? v / 16 : v ** 1.8);\n\t},\n\tfromBase (RGB) {\n\t\treturn RGB.map(v => v >= Et? v ** (1/1.8) : 16 * v);\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"prophoto-rgb\"\n\t\t}\n\t},\n});\n\nvar oklch = new ColorSpace({\n\tid: \"oklch\",\n\tname: \"Oklch\",\n\tcoords: {\n\t\tl: {\n\t\t\trefRange: [0, 1],\n\t\t\tname: \"Lightness\"\n\t\t},\n\t\tc: {\n\t\t\trefRange: [0, 0.4],\n\t\t\tname: \"Chroma\"\n\t\t},\n\t\th: {\n\t\t\trefRange: [0, 360],\n\t\t\ttype: \"angle\",\n\t\t\tname: \"Hue\"\n\t\t}\n\t},\n\twhite: \"D65\",\n\n\tbase: OKLab,\n\tfromBase (oklab) {\n\t\t// Convert to polar form\n\t\tlet [L, a, b] = oklab;\n\t\tlet h;\n\t\tconst ε = 0.0002; // chromatic components much smaller than a,b\n\n\t\tif (Math.abs(a) < ε && Math.abs(b) < ε) {\n\t\t\th = NaN;\n\t\t}\n\t\telse {\n\t\t\th = Math.atan2(b, a) * 180 / Math.PI;\n\t\t}\n\n\t\treturn [\n\t\t\tL, // OKLab L is still L\n\t\t\tMath.sqrt(a ** 2 + b ** 2), // Chroma\n\t\t\tconstrain(h) // Hue, in degrees [0 to 360)\n\t\t];\n\t},\n\t// Convert from polar form\n\ttoBase (oklch) {\n\t\tlet [L, C, h] = oklch;\n\t\tlet a, b;\n\n\t\t// check for NaN hue\n\t\tif (isNaN(h)) {\n\t\t\ta = 0;\n\t\t\tb = 0;\n\t\t}\n\t\telse {\n\t\t\ta = C * Math.cos(h * Math.PI / 180);\n\t\t\tb = C * Math.sin(h * Math.PI / 180);\n\t\t}\n\n\t\treturn [ L, a, b ];\n\t},\n\n\tformats: {\n\t\t\"oklch\": {\n\t\t\tcoords: [\"<number> | <percentage>\", \"<number> | <percentage>[0,1]\", \"<number> | <angle>\"],\n\t\t}\n\t}\n});\n\nconst Yw = 203;\t// absolute luminance of media white, cd/m²\nconst n = 2610 / (2 ** 14);\nconst ninv = (2 ** 14) / 2610;\nconst m = 2523 / (2 ** 5);\nconst minv = (2 ** 5) / 2523;\nconst c1 = 3424 / (2 ** 12);\nconst c2 = 2413 / (2 ** 7);\nconst c3 = 2392 / (2 ** 7);\n\nvar rec2100Pq = new RGBColorSpace({\n\tid: \"rec2100pq\",\n\tname: \"REC.2100-PQ\",\n\tbase: REC2020Linear,\n\ttoBase (RGB) {\n\t\t// given PQ encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = ((Math.max(((val ** minv) - c1), 0) / (c2 - (c3 * (val ** minv)))) ** ninv);\n\t\t\treturn (x * 10000 / Yw); \t// luminance relative to diffuse white, [0, 70 or so].\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// returnPQ encoded component in range [0, 1]\n\t\treturn RGB.map(function (val) {\n\t\t\tlet x = Math.max(val * Yw / 10000, 0); \t// absolute luminance of peak white is 10,000 cd/m².\n\t\t\tlet num = (c1 + (c2 * (x ** n)));\n\t\t\tlet denom = (1 + (c3 * (x ** n)));\n\n\t\t\treturn ((num / denom)  ** m);\n\t\t});\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"rec2100-pq\"\n\t\t},\n\t},\n});\n\n// FIXME see https://github.com/LeaVerou/color.js/issues/190\n\nconst a = 0.17883277;\nconst b = 0.28466892; // 1 - (4 * a)\nconst c = 0.55991073; // 0.5 - a * Math.log(4 *a)\n\nconst scale = 3.7743;\t// Place 18% grey at HLG 0.38, so media white at 0.75\n\nvar rec2100Hlg = new RGBColorSpace({\n\tid: \"rec2100hlg\",\n\tcssid: \"rec2100-hlg\",\n\tname: \"REC.2100-HLG\",\n\treferred: \"scene\",\n\n\tbase: REC2020Linear,\n\ttoBase (RGB) {\n\t\t// given HLG encoded component in range [0, 1]\n\t\t// return media-white relative linear-light\n\t\treturn RGB.map(function (val) {\n\t\t\t// first the HLG EOTF\n\t\t\t// ITU-R BT.2390-10 p.30 section\n\t\t\t// 6.3 The hybrid log-gamma electro-optical transfer function (EOTF)\n\t\t\t// Then scale by 3 so media white is 1.0\n\t\t\tif (val <= 0.5) {\n\t\t\t\treturn (val ** 2) / 3 * scale;\n\t\t\t}\n\t\t\treturn ((Math.exp((val - c) / a) + b) / 12) * scale;\n\t\t});\n\t},\n\tfromBase (RGB) {\n\t\t// given media-white relative linear-light\n\t\t// where diffuse white is 1.0,\n\t\t// return HLG encoded component in range [0, 1]\n\t\treturn RGB.map(function (val) {\n\t\t\t// first scale to put linear-light media white at 1/3\n\t\t\tval /= scale;\n\t\t\t// now the HLG OETF\n\t\t\t// ITU-R BT.2390-10 p.23\n\t\t\t// 6.1 The hybrid log-gamma opto-electronic transfer function (OETF)\n\t\t\tif (val <= 1/12) {\n\t\t\t\treturn Math.sqrt( 3 * val);\n\t\t\t}\n\t\t\treturn a * Math.log(12 * val - b) + c;\n\t\t});\n\t},\n\tformats: {\n\t\tcolor: {\n\t\t\tid: \"rec2100-hlg\"\n\t\t},\n\t},\n});\n\nconst CATs = {};\n\nhooks.add(\"chromatic-adaptation-start\", env => {\n\tif (env.options.method) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nhooks.add(\"chromatic-adaptation-end\", env => {\n\tif (!env.M) {\n\t\tenv.M = adapt(env.W1, env.W2, env.options.method);\n\t}\n});\n\nfunction defineCAT ({id, toCone_M, fromCone_M}) {\n\t// Use id, toCone_M, fromCone_M like variables\n\tCATs[id] = arguments[0];\n}\nfunction adapt (W1, W2, id = \"Bradford\") {\n\t// adapt from a source whitepoint or illuminant W1\n\t// to a destination whitepoint or illuminant W2,\n\t// using the given chromatic adaptation transform (CAT)\n\t// debugger;\n\tlet method = CATs[id];\n\n\tlet [ρs, γs, βs] = multiplyMatrices(method.toCone_M, W1);\n\tlet [ρd, γd, βd] = multiplyMatrices(method.toCone_M, W2);\n\n\t// all practical illuminants have non-zero XYZ so no division by zero can occur below\n\tlet scale = [\n\t\t[ρd/ρs,    0,      0      ],\n\t\t[0,        γd/γs,  0      ],\n\t\t[0,        0,      βd/βs  ]\n\t];\n\t// console.log({scale});\n\n\tlet scaled_cone_M = multiplyMatrices(scale, method.toCone_M);\n\tlet adapt_M\t= multiplyMatrices(method.fromCone_M, scaled_cone_M);\n\t// console.log({scaled_cone_M, adapt_M});\n\treturn adapt_M;\n}\ndefineCAT({\n\tid: \"von Kries\",\n\ttoCone_M: [\n\t\t[  0.4002400,  0.7076000, -0.0808100 ],\n\t\t[ -0.2263000,  1.1653200,  0.0457000 ],\n\t\t[  0.0000000,  0.0000000,  0.9182200 ]\n\t],\n\tfromCone_M: [\n\t\t[  1.8599364, -1.1293816,  0.2198974 ],\n\t\t[  0.3611914,  0.6388125, -0.0000064 ],\n\t\t[  0.0000000,  0.0000000,  1.0890636 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"Bradford\",\n\t// Convert an array of XYZ values in the range 0.0 - 1.0\n\t// to cone fundamentals\n\ttoCone_M: [\n\t\t[  0.8951000,  0.2664000, -0.1614000 ],\n\t\t[ -0.7502000,  1.7135000,  0.0367000 ],\n\t\t[  0.0389000, -0.0685000,  1.0296000 ]\n\t],\n\t// and back\n\tfromCone_M: [\n\t\t[  0.9869929, -0.1470543,  0.1599627 ],\n\t\t[  0.4323053,  0.5183603,  0.0492912 ],\n\t\t[ -0.0085287,  0.0400428,  0.9684867 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"CAT02\",\n\t// with complete chromatic adaptation to W2, so D = 1.0\n\ttoCone_M: [\n\t\t[  0.7328000,  0.4296000, -0.1624000 ],\n\t\t[ -0.7036000,  1.6975000,  0.0061000 ],\n\t\t[  0.0030000,  0.0136000,  0.9834000 ]\n\t],\n\tfromCone_M: [\n\t\t[  1.0961238, -0.2788690,  0.1827452 ],\n\t\t[  0.4543690,  0.4735332,  0.0720978 ],\n\t\t[ -0.0096276, -0.0056980,  1.0153256 ]\n\t]\n});\n\ndefineCAT({\n\tid: \"CAT16\",\n\ttoCone_M: [\n\t\t[  0.401288,  0.650173, -0.051461 ],\n\t\t[ -0.250268,  1.204414,  0.045854 ],\n\t\t[ -0.002079,  0.048952,  0.953127 ]\n\t],\n\t// the extra precision is needed to avoid roundtripping errors\n\tfromCone_M: [\n\t\t[  1.862067855087233e+0, -1.011254630531685e+0,   1.491867754444518e-1 ],\n\t\t[  3.875265432361372e-1,  6.214474419314753e-1,  -8.973985167612518e-3 ],\n\t\t[ -1.584149884933386e-2, -3.412293802851557e-2,   1.049964436877850e+0 ]\n\t]\n});\n\nObject.assign(WHITES, {\n\t// whitepoint values from ASTM E308-01 with 10nm spacing, 1931 2 degree observer\n\t// all normalized to Y (luminance) = 1.00000\n\t// Illuminant A is a tungsten electric light, giving a very warm, orange light.\n\tA:  [1.09850, 1.00000, 0.35585],\n\n\t// Illuminant C was an early approximation to daylight: illuminant A with a blue filter.\n\tC:   [0.98074, 1.000000, 1.18232],\n\n\t// The daylight series of illuminants simulate natural daylight.\n\t// The color temperature (in degrees Kelvin/100) ranges from\n\t// cool, overcast daylight (D50) to bright, direct sunlight (D65).\n\tD55: [0.95682, 1.00000, 0.92149],\n\tD75: [0.94972, 1.00000, 1.22638],\n\n\t// Equal-energy illuminant, used in two-stage CAT16\n\tE:   [1.00000, 1.00000, 1.00000],\n\n\t// The F series of illuminants represent fluorescent lights\n\tF2:  [0.99186, 1.00000, 0.67393],\n\tF7:  [0.95041, 1.00000, 1.08747],\n\tF11: [1.00962, 1.00000, 0.64350],\n});\n\n// The ACES whitepoint\n// see TB-2018-001 Derivation of the ACES White Point CIE Chromaticity Coordinates\n// also https://github.com/ampas/aces-dev/blob/master/documents/python/TB-2018-001/aces_wp.py\n// Similar to D60\nWHITES.ACES = [0.32168/0.33767, 1.00000, (1.00000 - 0.32168 - 0.33767)/0.33767];\n\n// convert an array of linear-light ACEScc values to CIE XYZ\nconst toXYZ_M = [\n\t[  0.6624541811085053,   0.13400420645643313,  0.1561876870049078  ],\n\t[  0.27222871678091454,  0.6740817658111484,   0.05368951740793705 ],\n\t[ -0.005574649490394108, 0.004060733528982826, 1.0103391003129971  ]\n];\nconst fromXYZ_M = [\n\t[  1.6410233796943257,   -0.32480329418479,    -0.23642469523761225  ],\n\t[ -0.6636628587229829,    1.6153315916573379,   0.016756347685530137 ],\n\t[  0.011721894328375376, -0.008284441996237409, 0.9883948585390215   ]\n];\n\nvar ACEScg = new RGBColorSpace({\n\tid: \"acescg\",\n\tname: \"ACEScg\",\n\n\t// ACEScg – A scene-referred, linear-light encoding of ACES Data\n\t// https://docs.acescentral.com/specifications/acescg/\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\tcoords: {\n\t\tr: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Red\"\n\t\t},\n\t\tg: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Green\"\n\t\t},\n\t\tb: {\n\t\t\trange: [0, 65504],\n\t\t\tname: \"Blue\"\n\t\t}\n\t},\n\n\treferred: \"scene\",\n\n\twhite: WHITES.ACES,\n\n\ttoXYZ_M,\n\tfromXYZ_M,\n\n\tformats: {\n\t\tcolor: {}\n\t},\n});\n\n// export default Color;\n\nconst ε = 2 ** -16;\n\n// the smallest value which, in the 32bit IEEE 754 float encoding,\n// decodes as a non-negative value\nconst ACES_min_nonzero = -0.35828683;\n\n// brightest encoded value, decodes to 65504\nconst ACES_cc_max = (Math.log2(65504) + 9.72) / 17.52; // 1.468\n\nvar acescc = new RGBColorSpace({\n\tid: \"acescc\",\n\tname: \"ACEScc\",\n\t// see S-2014-003 ACEScc – A Logarithmic Encoding of ACES Data\n\t// https://docs.acescentral.com/specifications/acescc/\n\t// uses the AP1 primaries, see section 4.3.1 Color primaries\n\n\t// Appendix A: \"Very small ACES scene referred values below 7 1/4 stops\n\t// below 18% middle gray are encoded as negative ACEScc values.\n\t// These values should be preserved per the encoding in Section 4.4\n\t// so that all positive ACES values are maintained.\"\n\tcoords: {\n\t\tr: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Red\"\n\t\t},\n\t\tg: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Green\"\n\t\t},\n\t\tb: {\n\t\t\trange: [ACES_min_nonzero, ACES_cc_max],\n\t\t\tname: \"Blue\"\n\t\t}\n\t},\n\treferred: \"scene\",\n\n\tbase: ACEScg,\n\t// from section 4.4.2 Decoding Function\n\ttoBase (RGB) {\n\t\tconst low = (9.72 - 15) / 17.52; // -0.3014\n\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= low) {\n\t\t\t\treturn (2 ** ((val * 17.52) - 9.72) - ε) * 2; // very low values, below -0.3014\n\t\t\t}\n\t\t\telse if (val < ACES_cc_max) {\n\t\t\t\treturn 2 ** ((val * 17.52) - 9.72);\n\t\t\t}\n\t\t\telse { // val >= ACES_cc_max\n\t\t\t\treturn 65504;\n\t\t\t}\n\t\t});\n\t},\n\n\t// Non-linear encoding function from S-2014-003, section 4.4.1 Encoding Function\n\tfromBase (RGB) {\n\t\treturn RGB.map(function (val) {\n\t\t\tif (val <= 0) {\n\t\t\t\treturn (Math.log2(ε) + 9.72) / 17.52; // -0.3584\n\t\t\t}\n\t\t\telse if (val < ε) {\n\t\t\t\treturn  (Math.log2(ε + val * 0.5) + 9.72) / 17.52;\n\t\t\t}\n\t\t\telse { // val >= ε\n\t\t\t\treturn  (Math.log2(val) + 9.72) / 17.52;\n\t\t\t}\n\t\t});\n\t},\n\t// encoded media white (rgb 1,1,1) => linear  [ 222.861, 222.861, 222.861 ]\n\t// encoded media black (rgb 0,0,0) => linear [ 0.0011857, 0.0011857, 0.0011857]\n\tformats: {\n\t\tcolor: {}\n\t}\n});\n\nvar spaces = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tA98RGB: a98rgb,\n\tA98RGB_Linear: A98Linear,\n\tACEScc: acescc,\n\tACEScg: ACEScg,\n\tHSL: HSL,\n\tHSV: HSV,\n\tHWB: hwb,\n\tICTCP: ictcp,\n\tJzCzHz: jzczhz,\n\tJzazbz: Jzazbz,\n\tLCH: lch,\n\tLab: lab,\n\tLab_D65: lab_d65,\n\tOKLCH: oklch,\n\tOKLab: OKLab,\n\tP3: P3,\n\tP3_Linear: P3Linear,\n\tProPhoto: prophoto,\n\tProPhoto_Linear: ProPhotoLinear,\n\tREC_2020: REC2020,\n\tREC_2020_Linear: REC2020Linear,\n\tREC_2100_HLG: rec2100Hlg,\n\tREC_2100_PQ: rec2100Pq,\n\tXYZ_ABS_D65: XYZ_Abs_D65,\n\tXYZ_D50: XYZ_D50,\n\tXYZ_D65: XYZ_D65,\n\tsRGB: sRGB,\n\tsRGB_Linear: sRGBLinear\n});\n\n/**\n * Class that represents a color\n */\nclass Color {\n\t/**\n\t * Creates an instance of Color.\n\t * Signatures:\n\t * - `new Color(stringToParse)`\n\t * - `new Color(otherColor)`\n\t * - `new Color({space, coords, alpha})`\n\t * - `new Color(space, coords, alpha)`\n\t * - `new Color(spaceId, coords, alpha)`\n\t */\n\tconstructor (...args) {\n\t\tlet color;\n\n\t\tif (args.length === 1) {\n\t\t\tcolor = getColor(args[0]);\n\t\t}\n\n\t\tlet space, coords, alpha;\n\n\t\tif (color) {\n\t\t\tspace = color.space || color.spaceId;\n\t\t\tcoords = color.coords;\n\t\t\talpha = color.alpha;\n\t\t}\n\t\telse {\n\t\t\t// default signature new Color(ColorSpace, array [, alpha])\n\t\t\t[space, coords, alpha] = args;\n\t\t}\n\n\t\tObject.defineProperty(this, \"space\", {\n\t\t\tvalue: ColorSpace.get(space),\n\t\t\twritable: false,\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true, // see note in https://262.ecma-international.org/8.0/#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver\n\t\t});\n\t\tthis.coords = coords? coords.slice() : [0, 0, 0];\n\t\tthis.alpha = alpha < 1? alpha : 1; // this also deals with NaN etc\n\n\t\t// Convert \"NaN\" to NaN\n\t\tfor (let i = 0; i < this.coords.length; i++) {\n\t\t\tif (this.coords[i] === \"NaN\") {\n\t\t\t\tthis.coords[i] = NaN;\n\t\t\t}\n\t\t}\n\n\t\t// Define getters and setters for each coordinate\n\t\tfor (let id in this.space.coords) {\n\t\t\tObject.defineProperty(this, id, {\n\t\t\t\tget: () => this.get(id),\n\t\t\t\tset: value => this.set(id, value)\n\t\t\t});\n\t\t}\n\t}\n\n\tget spaceId () {\n\t\treturn this.space.id;\n\t}\n\n\tclone () {\n\t\treturn new Color(this.space, this.coords, this.alpha);\n\t}\n\n\ttoJSON () {\n\t\treturn {\n\t\t\tspaceId: this.spaceId,\n\t\t\tcoords: this.coords,\n\t\t\talpha: this.alpha\n\t\t};\n\t}\n\n\tdisplay (...args) {\n\t\tlet ret = display(this, ...args);\n\n\t\t// Convert color object to Color instance\n\t\tret.color = new Color(ret.color);\n\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Get a color from the argument passed\n\t * Basically gets us the same result as new Color(color) but doesn't clone an existing color object\n\t */\n\tstatic get (color, ...args) {\n\t\tif (color instanceof Color) {\n\t\t\treturn color;\n\t\t}\n\n\t\treturn new Color(color, ...args);\n\t}\n\n\tstatic defineFunction (name, code, o = code) {\n\t\tlet {instance = true, returns} = o;\n\n\t\tlet func = function (...args) {\n\t\t\tlet ret = code(...args);\n\n\t\t\tif (returns === \"color\") {\n\t\t\t\tret = Color.get(ret);\n\t\t\t}\n\t\t\telse if (returns === \"function<color>\") {\n\t\t\t\tlet f = ret;\n\t\t\t\tret = function (...args) {\n\t\t\t\t\tlet ret = f(...args);\n\t\t\t\t\treturn Color.get(ret);\n\t\t\t\t};\n\t\t\t\t// Copy any function metadata\n\t\t\t\tObject.assign(ret, f);\n\t\t\t}\n\t\t\telse if (returns === \"array<color>\") {\n\t\t\t\tret = ret.map(c => Color.get(c));\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t};\n\n\t\tif (!(name in Color)) {\n\t\t\tColor[name] = func;\n\t\t}\n\n\t\tif (instance) {\n\t\t\tColor.prototype[name] = function (...args) {\n\t\t\t\treturn func(this, ...args);\n\t\t\t};\n\t\t}\n\t}\n\n\tstatic defineFunctions (o) {\n\t\tfor (let name in o) {\n\t\t\tColor.defineFunction(name, o[name], o[name]);\n\t\t}\n\t}\n\n\tstatic extend (exports) {\n\t\tif (exports.register) {\n\t\t\texports.register(Color);\n\t\t}\n\t\telse {\n\t\t\t// No register method, just add the module's functions\n\t\t\tfor (let name in exports) {\n\t\t\t\tColor.defineFunction(name, exports[name]);\n\t\t\t}\n\t\t}\n\t}\n}\nColor.defineFunctions({\n\tget,\n\tgetAll,\n\tset,\n\tsetAll,\n\tto,\n\tequals,\n\tinGamut,\n\ttoGamut,\n\tdistance,\n\ttoString: serialize,\n});\n\nObject.assign(Color, {\n\tutil,\n\thooks,\n\tWHITES,\n\tSpace: ColorSpace,\n\tspaces: ColorSpace.registry,\n\tparse,\n\n\t// Global defaults one may want to configure\n\tdefaults\n});\n\nfor (let key of Object.keys(spaces)) {\n\tColorSpace.register(spaces[key]);\n}\n\n/**\n * This plugin defines getters and setters for color[spaceId]\n * e.g. color.lch on *any* color gives us the lch coords\n */\n\n// Add space accessors to existing color spaces\nfor (let id in ColorSpace.registry) {\n\taddSpaceAccessors(id, ColorSpace.registry[id]);\n}\n\n// Add space accessors to color spaces not yet created\nhooks.add(\"colorspace-init-end\", space => {\n\taddSpaceAccessors(space.id, space);\n\tspace.aliases?.forEach(alias => {\n\t\taddSpaceAccessors(alias, space);\n\t});\n});\n\nfunction addSpaceAccessors (id, space) {\n\t// Coordinates can be looked up by both id and name\n\tObject.keys(space.coords);\n\tObject.values(space.coords).map(c => c.name);\n\n\n\tlet propId = id.replace(/-/g, \"_\");\n\n\tObject.defineProperty(Color.prototype, propId, {\n\t\t// Convert coords to coords in another colorspace and return them\n\t\t// Source colorspace: this.spaceId\n\t\t// Target colorspace: id\n\t\tget () {\n\t\t\tlet ret = this.getAll(id);\n\n\t\t\tif (typeof Proxy === \"undefined\") {\n\t\t\t\t// If proxies are not supported, just return a static array\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Enable color.spaceId.coordName syntax\n\t\t\treturn new Proxy(ret, {\n\t\t\t\thas: (obj, property) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tColorSpace.resolveCoord([space, property]);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {}\n\n\t\t\t\t\treturn Reflect.has(obj, property);\n\t\t\t\t},\n\t\t\t\tget: (obj, property, receiver) => {\n\t\t\t\t\tif (property && typeof property !== \"symbol\" && !(property in obj)) {\n\t\t\t\t\t\tlet {index} = ColorSpace.resolveCoord([space, property]);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\treturn obj[index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Reflect.get(obj, property, receiver);\n\t\t\t\t},\n\t\t\t\tset: (obj, property, value, receiver) => {\n\t\t\t\t\tif (property && typeof property !== \"symbol\" && !(property in obj) || property >= 0) {\n\t\t\t\t\t\tlet {index} = ColorSpace.resolveCoord([space, property]);\n\n\t\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\t\tobj[index] = value;\n\n\t\t\t\t\t\t\t// Update color.coords\n\t\t\t\t\t\t\tthis.setAll(id, obj);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Reflect.set(obj, property, value, receiver);\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\t// Convert coords in another colorspace to internal coords and set them\n\t\t// Target colorspace: this.spaceId\n\t\t// Source colorspace: id\n\t\tset (coords) {\n\t\t\tthis.setAll(id, coords);\n\t\t},\n\t\tconfigurable: true,\n\t\tenumerable: true\n\t});\n}\n\n// Import all modules of Color.js\n\nColor.extend(deltaEMethods);\nColor.extend({deltaE});\nObject.assign(Color, {deltaEMethods});\nColor.extend(variations);\nColor.extend({contrast});\nColor.extend(chromaticity);\nColor.extend(luminance);\nColor.extend(interpolation);\nColor.extend(contrastMethods);\n\nexport { Color as default };\n//# sourceMappingURL=color.js.map\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import transform from '../../src/utils/transform';\nimport tokens from '../mocks/nest_2.json';\n\n// @ts-ignore\ntransform({ core: tokens }, ['core'], [], {\n  expandTypography: true,\n  expandShadow: false,\n  expandComposition: true,\n  preserveRawValue: false,\n  throwErrorWhenNotResolved: false,\n  resolveReferences: true,\n  expandBorder: false,\n});\n"],"names":["set","extend","tokenTypes","TokenTypes","transformName","name","COLOR","SPACING","SIZING","BOX_SHADOW","BORDER_RADIUS","BORDER_WIDTH","OPACITY","FONT_FAMILIES","FONT_WEIGHTS","FONT_SIZES","LINE_HEIGHTS","TYPOGRAPHY","LETTER_SPACING","PARAGRAPH_SPACING","COMPOSITION","BORDER","ASSET","OTHER","appendTypeToToken","token","typeToSet","type","split","slice","toString","createTokensObject","tokens","tokenFilter","length","obj","reduce","acc","cur","hasSubstring","toLowerCase","search","indexOf","propToSet","values","mappedTokens","tokenObj","tokenObjects","Object","entries","forEach","key","group","checkAliasStartRegex","AliasRegex","AliasDollarRegex","BoxShadowTypes","ColorModifierTypes","ColorSpaceTypes","Properties","StorageProviderType","TokenSetStatus","ExportNumberVariablesTokenTypes","TokenFormatOptions","TOKEN_FORMAT_OPTIONS","label","value","TokenFormatStoreClass","tokenValueKey","tokenTypeKey","tokenDescriptionKey","format","setFormat","getFormat","TokenFormat","convertOpacityToFigma","shouldOutputForVariables","matched","match","matchedValue","Number","numericValue","dump","checkAndEvaluateMath","convertToRgb","convertModifiedColorToHex","getPathName","TokenResolver","tokenMap","memo","Map","populateTokenMap","setTokens","resolveTokenValues","resolvedTokens","resolvedValue","resolveReferences","test","failedToResolve","push","rawValue","isExponentialAndZero","str","regex","numericRegex","allZerosRegex","leadingZerosRegex","calculateTokenValue","resolvedReferences","Set","couldBeNumberValue","rgbColor","$extensions","modify","MIX","String","color","undefined","memoKey","has","cacheResult","get","foundToken","references","finalValue","resolvedValueWithReferences","reference","path","resolvedPath","matches","Boolean","nestedTokenName","nestedToken","resolvedNestedToken","replace","propertyPath","propertyName","pop","tokenNameWithoutLastPart","join","Array","isArray","newResolvedReferences","add","resolvedTokenValue","tokenValueWithoutProperty","hasOwnProperty","propertyTokenValue","parsedValue","resolvedToken","calculated","yamlString","hasFailingReferences","resolvedArray","item","resolvedItem","resolvedObject","keys","prototype","call","tokenName","defaultTokenResolver","parseToRgba","toHex","hexRegex","hslaRegex","rgbaRegex","returnedColor","matchesRgba","from","matchAll","m","matchesHsla","matchedString","matchedColor","matchesHexInsideRgba","r","g","b","alpha","trim","map","n","a","e","console","log","error","darken","colorSpace","amount","LCH","lightness","lch","l","difference","newChroma","Math","max","c","newLightness","HSL","hsl","P3","colorInP3","to","newRed","p3","newGreen","newBlue","SRGB","srgb","getColorSwatchStyle","tokenValue","includes","background","getReferenceTokensFromGradient","rawValueDetails","referenceTokens","curr","readableColorIsBlack","lightOrDark","lighten","min","Color","mix","mixColor","mixValue","space","transparentize","modifyColor","baseColor","modifier","returnedColorInSpace","convertToDefaultProperty","property","width","height","sizing","itemSpacing","verticalPadding","horizontalPadding","paddingTop","paddingLeft","paddingBottom","paddingRight","dimension","borderRadiusTopLeft","borderRadiusTopRight","borderRadiusBottomLeft","borderRadiusBottomRight","borderRadius","borderColor","fill","borderWidthTop","borderWidthLeft","borderWidthRight","borderWidthBottom","borderWidth","fontFamilies","fontSizes","fontWeights","lineHeights","isSingleBorderToken","isSingleBoxShadowToken","isSingleCompositionToken","isSingleTokenValueObject","isSingleTypographyToken","isTokenGroupWithType","isSingleTokenInJSON","checkForTokens","root","returnValuesOnly","expandTypography","expandShadow","expandComposition","expandBorder","inheritType","groupLevel","currentTypeLevel","returnValue","description","inheritTypeLevel","val","tokenToCheck","groupType","tokenValues","filter","result","convertToTokenArray","$value","$description","$type","mergeTokenGroups","convertTokensToGroupedObject","parseTokenValues","convertTokensObjectToResolved","usedSets","excludedSets","options","preserveRawValue","parsed","merged","fromEntries","tokenSet","ENABLED","resolved","object","expand","getValueWithReferences","throwErrorWhenNotResolved","Error","internal__Parent","tokenWithType","expanded","detectFormat","shouldSet","stringifiedTokens","JSON","stringify","DTCG","Legacy","resultItem","ref","startsWith","substring","sortSets","getTokenSetsOrder","overallConfig","activeTokenSet","originalTokenSetOrder","usedSetsList","SOURCE","overallSets","sort","splice","tokenSetsOrder","getTokenTypeKey","ignoreTokenFormat","getTokenValueKey","getSimpleValue","singleAliasRegEx","oneOrMoreAliasRegEx","aliasRegEx","getComplexValue","rawVal","shadow","index","isGitProvider","provider","ADO","GITHUB","GITLAB","BITBUCKET","isMatchingStyle","tokenPath","style","splitName","trimmedName","isPrimitiveValue","isPropertyType","input","isSingleBorderTokenInJSON","isSingleBoxShadowTokenInJSON","isSingleBoxShadowValue","every","v","DROP_SHADOW","INNER_SHADOW","isSingleCompositionTokenInJSON","isSingleToken","isSingleTypographyTokenInJSON","isSingleTypographyValue","isTokenType","Parser","calcAstParser","parser","functions","clamped","x","lerp","start","end","norm","cubicBezier1D","x1","x2","xx","t","coeffs","i","sample","func","args","expr","calcParsed","parse","ex","calcReduced","reduceExpression","unitlessExpr","unit","RegExp","evaluated","evaluate","parseFloat","toFixed","LIGHTEN","DARKEN","ALPHA","inGamut","precision","global","reducedTokens","prev","parsedGroup","convertedToArray","config","statusA","DISABLED","statusB","getOverallConfig","themes","selectedThemes","themeId","currentTheme","find","theme","id","selectedTokenSets","status","getEnabledTokenSets","shouldMerge","currentSet","existingToken","mergedTokens","setName","existingIndex","findIndex","newToken","transform","sets","excludes","multiplyMatrices","A","B","p","B_cols","_","product","row","col","ret","isString","o","toPrecision","integerLength","floor","p10","round","parseFunction","isFunctionRegex","isNumberRegex","parts","$0","arg","rawName","rawArgs","last","arr","interpolate","isNaN","interpolateInv","mapRange","parseCoordGrammar","coordGrammars","coordGrammar","range","util","freeze","__proto__","Hooks","callback","first","arguments","run","env","context","hooks","defaults","gamut_mapping","deltaE","WHITES","D50","D65","getWhite","adapt$1","W1","W2","XYZ","TypeError","M","ε$4","ColorSpace","base","aliases","fromBase","toBase","coords","white","formats","cssId","defineProperty","referred","getPath","reverse","writable","enumerable","configurable","epsilon","isPolar","coordMeta","meta","processFormat","equals","myPath","otherPath","connectionSpace","connectionSpaceIndex","getMinCoords","refRange","all","registry","register","alias","alternatives","argType","resolveCoord","workingSpace","coordType","coord","coordId","normalizedCoord","DEFAULT_FORMAT","s","coordFormats","outputType","fromRange","toRange","suffix","serializeCoords","XYZ_D65","y","z","ids","RGBColorSpace","toXYZ_M","fromXYZ_M","rgb","xyz","shift","colorSpec","formatId","spaceId","didYouMean","lastAlpha","types","providedType","coordName","assign","getColor","getAll","prop","setAll","XYZ_D50","ε$3","ε3$1","κ$1","white$1","lab","f","cbrt","Lab","pow","constrain","angle","adjust","arc","angles","a1","a2","angleDiff","h","L","hue","ε","abs","NaN","atan2","PI","sqrt","Lightness","Chroma","Hue","cos","sin","Gfactor","π$1","r2d","d2r$1","deltaE2000","kL","kC","kH","L1","b1","C1","L2","b2","C2","Cbar","C7","G","adash1","adash2","Cdash1","Cdash2","h1","h2","ΔL","ΔC","hdiff","hsum","habs","Δh","ΔH","Ldash","Cdash","Cdash7","hdash","lsq","SL","SC","T","SH","Δθ","exp","RC","RT","dE","ε$2","clone","toGamut","method","spaceColor","clipped","mapSpace","mappedColor","bounds","low","high","returns","serialize","inGamut$1","customOptions","unshift","strAlpha","noAlpha","commas","toXYZ_M$5","fromXYZ_M$5","REC2020Linear","α","β","REC2020","RGB","toXYZ_M$4","fromXYZ_M$4","P3Linear","toXYZ_M$3","fromXYZ_M$3","sRGBLinear","KEYWORDS","coordGrammarNumber","sRGB","sign","rgba","component","parseInt","collapse","collapsible","hex","padStart","black","display_space","CSS","supports","display","fallbackColor","distance","color1","color2","coords1","coords2","c1","c2","getLuminance","setLuminance","register$2","luminance","contrastWCAG21","Y1","Y2","normBG","normTXT","revTXT","revBG","blkThrs","blkClmp","loClip","deltaYmin","scaleBoW","loBoWoffset","scaleWoB","fclamp","Y","linearize","contrastAPCA","foreground","S","C","Sapc","R","lumTxt","lumBg","Ytxt","Ybg","BoW","contrastMichelson","denom","contrastWeber","contrastLstar","ε$1","ε3","κ","lab_d65","phi","contrastDeltaPhi","Lstr1","Lstr2","deltaPhiStar","contrast","SQRT2","contrastMethods","algorithm","rest","algorithms","uv","X","Z","xy","sum","register$1","chromaticity","deltaE76","π","d2r","deltaECMC","H1","Δa","Δb","H2","C4","F","Yw$1","XYZ_Abs_D65","AbsXYZ","b$1","n$1","ninv$1","c1$2","c2$2","c3$2","pinv","d","d0","XYZtoCone_M","ConetoXYZ_M","ConetoIab_M","IabtoCone_M","Jzazbz","jz","az","bz","Xa","Ya","Za","Xm","Ym","LMS","PQLMS","num","Iz","Jz","jzczhz","cz","hz","jzazbz","deltaEJz","Jz1","Cz1","Hz1","Jz2","Cz2","Hz2","ΔJ","c1$1","c2$1","c3$1","m1","m2","im1","im2","XYZtoLMS_M$1","LMStoIPT_M","IPTtoLMS_M","LMStoXYZ_M$1","ictcp","ct","cp","LMStoICtCp","ICtCp","ICtCptoLMS","deltaEITP","I1","T1","P1","I2","T2","P2","XYZtoLMS_M","LMStoXYZ_M","LMStoLab_M","LabtoLMS_M","OKLab","LMSg","deltaEOK","deltaEMethods","variations","outputSpace","premultiplied","steps","colorRange","isRange","rangeArgs","colors","maxDeltaE","deltaEMethod","maxSteps","rangeOptions","totalDelta","actualSteps","ceil","step","maxDelta","ΔΕ","progression","interpolationSpace","θ1","θ2","defineFunction","interpolation","k","HSV","hsv","hwb","w","gray","toXYZ_M$2","fromXYZ_M$2","A98Linear","a98rgb","toXYZ_M$1","fromXYZ_M$1","ProPhotoLinear","Et","Et2","prophoto","oklch","oklab","Yw","ninv","minv","c3","rec2100Pq","scale","rec2100Hlg","cssid","CATs","adapt","defineCAT","toCone_M","fromCone_M","ρs","γs","βs","ρd","γd","βd","scaled_cone_M","adapt_M","D55","D75","E","F2","F7","F11","ACES","ACEScg","ACES_min_nonzero","ACES_cc_max","log2","acescc","spaces","A98RGB","A98RGB_Linear","ACEScc","HWB","ICTCP","JzCzHz","Lab_D65","OKLCH","P3_Linear","ProPhoto","ProPhoto_Linear","REC_2020","REC_2020_Linear","REC_2100_HLG","REC_2100_PQ","XYZ_ABS_D65","sRGB_Linear","toJSON","code","instance","defineFunctions","exports","Space","addSpaceAccessors","propId","Proxy","Reflect","receiver","default","core"],"sourceRoot":""}